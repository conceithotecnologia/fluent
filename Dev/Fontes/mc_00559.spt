/**
  Rotina...: <l> mc_00559 </l>
  Descrição: <d> Transfere as despesas para Contas a Pagar após a aprovação do documento </d>
  Tipo.....: <t> Stored Procedure </t>
  Autor....: Jurandy da Silva Costa
  Data.....: 13/10/2004 21:00:00                                 
  Histórico:
*/
Create or Replace Function mc_00559####???()
Returns trigger As 
$$
Declare

-- {Variáveis de uso interno}
   xNatureza      refcursor;

   nNatureza      [(fdd)].f1_codnat%type;       -- Código da natureza financeira
   nValorNat      [(fdd)].fdd_valor%type;       -- Valor da natureza financeira
   nParceNat      [(fdd)].fdd_valor%type;       -- Valor da parcela por natureza financeira
   iTipoRat       [(fdd)].fdd_rateio%type;      -- Tipo de Rateio por Empresa
   iTipo_CC       [(fdd)].fdd_ccusto%type;      -- Tipo de Rateio por Centro de Custo
   nNrTitulo      [(sao)].ao_codtit%type;       -- Número do título
   dVencto        [(sao)].ao_vencto%type;       -- Data de vencimento
   dVenceReal     [(sao)].ao_venctoreal%type;   -- Data de vencimento real
   iRecnoSAO      [(sao)].recno%type;           -- Número do registro SAO
   iRecnoSCL      [(scl)].recno%type;           -- Número do registro SCL
   nParcelas      [(sfa)].fa_parcs%type;        -- Numero de parcelas da condicao de pagto
   nPrimeira      [(sfa)].fa_priparc%type;      -- Primeira parcela da condicao de pagto
   nIntervalo     [(sfa)].fa_intervalo%type;    -- Intervalo em dias entre as parcelas

   iFas_Filial    [(fas)].fas_filial%type;      -- Código da Filial
   iF1_CodNat     [(fas)].f1_codnat%type;       -- Natureza Financeira
   iFas_Tipo      [(fas)].fas_tipo%type;        -- Tipo de Rateio
   nFas_Rateio    [(fas)].fas_rateio%type;      -- Percentual de Rateio
   nFas_Valor     [(fas)].fas_valor%type;       -- Valor do Rateio

   iFax_Filial    [(fav)].fax_filial%type;      -- Código da Filial
   iFax_Ccusto    [(fav)].fax_ccusto%type;      -- Código do Centro de Custo
   iFav_Tipo      [(fav)].fav_tipo%type;        -- Tipo de Rateio
   nFav_Rateio    [(fav)].fav_rateio%type;      -- Percentual de Rateio
   nFav_Valor     [(fav)].fav_valor%type;       -- Valor do Rateio

   cTipoDoc       VarChar(3);
   dSysDate       Date;
   nVezes         Integer;
   iDesdobra      Integer;
   iNatureza      Integer;
   Idiaforames    Integer;
   nTotRateio     Numeric(15, 2);
   nTotNature     Numeric(15, 2);
   nTotCCusto     Numeric(15, 2);

Begin
   -- Antes de aceitar a exclusão verifica se já foi transferido para o financeiro
   If tg_op = 'DELETE' Then
      If old.fdc_aprova = 1 Then

         --verifica se houve baixa em algum titulo e não permitir retroceder
         if (select sum(ao_saldo) - sum(ao_valor)
               from [(sao)]
              where codtable = 'FDC'
                and ao_recno = new.recno) <> 0 then
            raise '[[ATENÇÃO. Já houve alguma baixa nos registro gerados. Não é possivel alterar registro!]]';
         end if;

         --Apaga os titulos gerados no contas a pagar
         perform mc_setflag####???('FDC', recno)
            from [(sao)]
           where codtable = 'FDC'
             and ao_recno = old.recno;

         delete from [(sao)] where codtable = 'FDC' and ao_recno = old.recno;

         --Apaga os titulos gerados no contas a pagar
         perform mc_delflag####???('FDC', recno)
            from [(sao)]
           where codtable = 'FDC'
             and ao_recno = old.recno;

      End If;

      -- Chama procedure que exclui Rateios por Empresa e Centro de Custo
      Perform mc_00641####???( 'FDC', old.recno, -1);

      Return old;
   End If;

   -- retornar o Status de aprovação para 0-Aguardando
   If old.fdc_aprova <> 0 And new.fdc_aprova <> old.fdc_aprova Then       --0-aguardando 1-aprovado 2-reprovado
      --verifica se houve baixa em algum titulo e não permitir retroceder
      if (select sum(ao_saldo) - sum(ao_valor)
            from [(sao)]
           where codtable = 'FDC'
             and ao_recno = new.recno) <> 0 then
         raise '[[ATENÇÃO. Já houve alguma baixa nos registro gerados. Não é possivel alterar registro!]]';
      end if;

      --Apaga os titulos gerados no contas a pagar
      perform mc_setflag####???('FDC', recno)
        from [(sao)]
       where codtable = 'FDC'
         and ao_recno = old.recno;

      delete from [(sao)] where codtable = 'FDC' and ao_recno = old.recno;

      --Apaga os titulos gerados no contas a pagar
      perform mc_delflag####???('FDC', recno)
        from [(sao)]
       where codtable = 'FDC'
         and ao_recno = old.recno;
   End If;

   -- Gera titulos em Contas a Pagar caso a despesa tenha sido aprovada
   If new.fdc_aprova <> 0 And old.fdc_aprova = 0 Then
      -- Recupera a data do Sistema
      Select sys_getdatabase####???() Into dSysDate;
      -- Despesa Aprovada deve ser incluída no financeiro
      If new.fdc_aprova = 1 Then
         -- Somatória das Naturezas Financeiras
         Select Sum(fdd_valor) Into nTotNature
           From [(fdd)]
          Where fdc_ficha = new.fdc_ficha;
         nTotNature := Coalesce(nTotNature, 0);
         -- Verifica se foi incluido o detalhamento por natureza antes de aceitar a aprovação
         If nTotNature <= 0.00 Then
            raise '[[ATENÇÃO. Não é possível Aprovar o documento antes de informar o Detalhamento por Natureza.]]';
         End If;
         -- Somatória do Rateio por Empresa
         Select Sum(fas_valor) Into nTotRateio
           From [(fas)]
          Where fas_origem = 'FDC'
            And fas_recno  = new.recno;
         nTotRateio := Coalesce(nTotRateio, 0);

         -- Verifica se os Totais do Rateio e Naturezas são iguais
         If nTotNature <> nTotRateio Then
            raise '[[Total das Naturezas % - Diferente do Rateio por Empresa %. Verifique.]]', nTotNature, nTotRateio;
         End If;

         -- Somatória das Naturezas Financeiras com rateio por Centro de Custo
         Select Sum(fdd_valor) Into nTotNature
           From [(fdd)]
          Where fdc_ficha  = new.fdc_ficha
            And fdd_ccusto > 0 ;
         nTotNature := Coalesce(nTotNature, 0);

         -- Somatória do Rateio por Empresa
         Select Sum(fav_valor) Into nTotCCusto
           From [(fav)]
          Where fav_origem = 'FDC'
            And fav_recno  = new.recno;
         nTotCCusto := Coalesce(nTotCCusto, 0);

         -- Verifica se os Totais do Rateio por Centro de Custo e Naturezas são iguais
         If nTotNature <> nTotCCusto Then
            raise '[[Total das Naturezas % - Diferente do Rateio por Centro de Custo %. Verifique.]]', nTotNature, nTotCCusto;
         End If;

         -- Recupera a condição de Pagamento
         Select fa_parcs, fa_priparc, fa_intervalo, fa_dfm Into nParcelas, nPrimeira, nIntervalo, Idiaforames
           From [(sfa)]
          Where fa_codcond = new.fa_codcond;

         If new.fdc_tipo_doc = 2 Then
            cTipoDoc := 'BLT';
         Else
            cTipoDoc := 'DPL';
         End If;
         iDesdobra := 0;
         iNatureza := (Select f1_codnat From [(fdd)] Where fdc_ficha = new.fdc_ficha Limit 1);
         If (Select Count(*) From [(fdd)] Where fdc_ficha = new.fdc_ficha) > 1 Then
            iDesdobra := 1;
            iNatureza := Null;
         End If;
         -- Insere registro Flag do detalhamento por Natureza Financeira
         Perform mc_setflag####???( 'FDC', new.recno);
         -- Obtem próximo titulo a pagar
         Select Coalesce(Max(ao_codtit), 0) + 1 Into nNrTitulo From [(sao)];
         -- Cria o(s) titulo(s) a pagar
         For nVezes In 1..nParcelas Loop

            -- Verifica se deve calcular dias fora mês
            if Idiaforames = 1 then
               -- Verifica se deve calcular dias fora mês
               dVencto := (date_trunc('month',new.fdc_emissao)::date + Sys_parte_data(new.fdc_emissao,7)) + nPrimeira + (nVezes - 1) * nIntervalo;
            else
               -- Inclui o cabeçalho do título em FNP
               dVencto := new.fdc_emissao + nPrimeira + (nVezes - 1) * nIntervalo;
            end if;

             -- Calcula o vencimento verificando Domingos e Feriados
             dVenceReal := mc_vence_real####???( dVencto, 1, 2, new.ac_codforn, 0, new.ak_cc, new.fa_codcond);

             -- Obtem o próximo RECNO para o titulo
             iRecnoSAO := NextVal('[(sao)]_recno_seq'::regclass);

             Insert Into [(sao)] ( ao_codtit,       ao_parce, fa_codcond,     ao_historico,      recno,
                                   ac_codforn,      ao_tipo,  ao_vencto,      ao_emissao,        sao_desdobra,
                                   ao_venctoreal,   codtable, ak_cc,          f1_codnat,         ao_recno,
                                   ao_entrada,      sao_num_documento)
                  Values         ( nNrTitulo,       nVezes,   new.fa_codcond, new.fdc_historico, iRecnoSAO,
                                   new.ac_codforn,  cTipoDoc, dVencto,        new.fdc_emissao,   iDesdobra,
                                   dVenceReal,      'FDC',    new.ak_cc,      iNatureza,         new.recno,
                                   new.fdc_daprova, new.fdc_docto);

             -- Cursor com as Naturezas Financeiras da Despesa
             Open xNatureza For
                Select f1_codnat, fdd_valor, fdd_rateio, fdd_ccusto
                  From [(fdd)]
                 Where fdc_ficha = new.fdc_ficha;

             Fetch xNatureza Into nNatureza, nValorNat, iTipoRat, iTipo_CC;
             While Found Loop
                -- Calcula o valor por Natureza Financeira / Parcela
                nParceNat := sys_parcelas(nValorNat, nParcelas, nVezes, 0);
                -- Insere os valores por Natureza Financeira / Parcela
                Insert Into [(scl)] ( ao_codtit,  ao_parce,   f1_codnat, scl_valor, scl_rateio, scl_ccusto, fph_codigo )
                             Values ( nNrTitulo,  nVezes,     nNatureza, nParceNat, iTipoRat,   iTipo_CC,   new.fph_codigo);
                Fetch xNatureza Into nNatureza, nValorNat, iTipoRat, iTipo_CC;
             End Loop;
             Close xNatureza;

             -- Cursor com o Rateio por Empresa / Natureza
             Open xNatureza For
                Select fas.fas_filial, fas.f1_codnat, fas.fas_tipo, fas.fas_rateio, fas.fas_valor, scl.recno
                  From [(fas)] fas
                  Join [(scl)] scl
                    On scl.ao_codtit = nNrTitulo
                   And scl.ao_parce  = nVezes
                   And scl.f1_codnat = fas.f1_codnat
                 Where fas_origem = 'FDC'
                   And fas_recno  = new.recno
                   And fas_tipo   > 0
                 Order By fas.f1_codnat, fas.fas_filial;

             Fetch xNatureza Into iFas_Filial, iF1_CodNat, iFas_Tipo, nFas_Rateio, nFas_Valor, iRecnoSCL;
             While Found Loop
                -- Calcula o valor por Empresa / Natureza Financeira / Parcela
                nParceNat := sys_parcelas(nFas_Valor, nParcelas, nVezes, 0);
                -- Insere os valores por Empresa / Natureza Financeira / Parcela
                Insert Into [(fas)] ( fas_origem, fas_recno,   fas_origem_d, fas_recno_d, fas_filial,
                                      f1_codnat,  fas_tipo,    fas_rateio,   fas_valor )
                     Values         ( 'SAO',      iRecnoSAO,   'SCL',        iRecnoSCL,   iFas_Filial,
                                      iF1_CodNat, iFas_Tipo,   nFas_Rateio,  nParceNat );
                Fetch xNatureza Into  iFas_Filial, iF1_CodNat, iFas_Tipo,    nFas_Rateio, nFas_Valor, iRecnoSCL;
             End Loop;
             Close xNatureza;
             -- Cursor com o Rateio por Empresa / Natureza / Centro de Custo
             Open xNatureza For
                Select fav.fax_filial, fav.fax_ccusto, fav.f1_codnat, fav.fav_tipo, fav.fav_rateio, fav.fav_valor, scl.recno
                  From [(fav)] fav
                  Join [(scl)] scl
                    On scl.ao_codtit = nNrTitulo
                   And scl.ao_parce  = nVezes
                   And scl.f1_codnat = fav.f1_codnat
                 Where fav_origem = 'FDC'
                   And fav_recno  = new.recno
                 Order By fav.f1_codnat, fav.fax_filial, fav.fax_ccusto;

             Fetch xNatureza Into iFax_Filial, iFax_Ccusto, iF1_CodNat, iFav_Tipo, nFav_Rateio, nFav_Valor, iRecnoSCL;
             While Found Loop
                -- Calcula o valor por Empresa / Natureza Financeira / Parcela
                nParceNat := sys_parcelas(nFav_Valor, nParcelas, nVezes, 0);
                -- Insere os valores por Empresa / Natureza Financeira / Parcela
                Insert Into [(fav)] ( fav_origem,  fav_recno,  fav_origem_d, fav_recno_d, fax_filial,
                                      fax_ccusto,  f1_codnat,  fav_tipo,     fav_rateio,  fav_valor )
                     Values         ( 'SAO',       iRecnoSAO,  'SCL',        iRecnoSCL,   iFax_Filial,
                                      iFax_Ccusto, iF1_CodNat, iFav_Tipo,    nFav_Rateio, nParceNat );
                Fetch xNatureza Into iFax_Filial, iFax_Ccusto, iF1_CodNat, iFav_Tipo, nFav_Rateio, nFav_Valor, iRecnoSCL;
             End Loop;
             Close xNatureza;
             -- Atualiza status dos rateios por empresa e centro de custos
             Update [(fao)]
                Set fao_rateio_e = 1,
                    fao_rateio_c = Case When fao_ccusto < 1 Then 0 Else 1 End
              Where fao_origem_c = 'SAO'
                And fao_recno_c  = iRecnoSAO;

         End Loop;
         -- Deleta registro Flag do detalhamento por Natureza Financeira
         Perform mc_delflag####???( 'FDC', new.recno );
      End If;
      -- Atualiza a data de aprovacao com a data do Sistema
      new.fdc_daprova := dSysDate;
   End If;
   Return New;
End;
$$ LANGUAGE plpgsql;
