/*==================================================================================
  Rotina...: <l> mc_00666 </l>
  ----------------------------------------------------------------------------------
  Descrição: <d> Monta Mapa de Despesas Por Natureza Dentro da Categoria
  ----------------------------------------------------------------------------------
  Tipo.....: <t> Stored Procedure </t>
  ----------------------------------------------------------------------------------
  Empresa..: MultCont Informática
  ----------------------------------------------------------------------------------
  Autor....: Fabio Crepaldi Carvalho
  ----------------------------------------------------------------------------------
  Data.....: 16/06/2006 18:38:00
  ----------------------------------------------------------------------------------
  Parametros
   [Entrada]········································································
            iAno          Integer(4) Ano Base do Mapa
            iZerado       Integer(1) Se Vai Imprimir Categorias Com Valor Zero
            iPrevisto     Integer(1) 0=Previsto 1=Realizado    (0=Nao 1=Sim)
            iCategoria    Integer91) Categoria a Ser gerada
   [Saida ]·········································································
            out_res       Integer   Retorno da procedure 0-Falhou 1-Termino Normal
====================================================================================
*/

Create or Replace Function mc_00666####???
( In  iAno       Integer,
  In  iZerado    Integer,
  In  iPrevisto  Integer,
  In  iCategoria Integer,
  Out out_res    Integer )
As $$

Declare
-- {Parametros de saída}

-- {Variáveis para cursores}

-- {Variáveis de uso interno}
   -- Despesas
   nDespJaneiro     Numeric(15, 2);
   nDespFevereiro   Numeric(15, 2);
   nDespMarco       Numeric(15, 2);
   nDespAbril       Numeric(15, 2);
   nDespMaio        Numeric(15, 2);
   nDespJunho       Numeric(15, 2);
   nDespJulho       Numeric(15, 2);
   nDespAgosto      Numeric(15, 2);
   nDespSetembro    Numeric(15, 2);
   nDespOutubro     Numeric(15, 2);
   nDespNovembro    Numeric(15, 2);
   nDespDezembro    Numeric(15, 2);
   nDespTotal       Numeric(15, 2);
   nVerba           Numeric(15, 2);
Begin
   Out_res   := 0;

   -- Limpa os dados da Sessão antes de montar um novo relatório
   Delete From [(fr1)]
         Where session = sys_session();

   -- Cria Tabela FR1 pela Tabela SFB
   if iZerado = 0 Then
      -- Incluir Somente os Que Possuem Valores
      Insert Into [(fr1)] (session,       fr1_ordem,          fr1_texto01)
             Select        sys_session(), min(sf1.f1_codnat), min(sf1.f1_descri)
             From [(sfb)] sfb 
                  Join [(sf1)] sf1 on sf1.f1_codnat = sfb.f1_codnat 
             Where CASE WHEN iPrevisto = 0 Then sfb.sfb_previsto ELSE sfb.sfb_saldo END <> 0
               and   sfb.f2_codcat = iCategoria
               and   sf1.f1_mapa   = '1'
               and   sfb.sf6_ano   = iAno
           Group By sfb.f1_codnat;
   Else
      -- Incluir Todas as Naturezas 
      Insert Into [(fr1)] (session,       fr1_ordem, fr1_texto01)
           Select          sys_session(), f1_codnat, f1_descri
             From [(sf1)] sf1
            Where sf1.f2_codcat = iCategoria
              and sf1.f1_mapa   = '1'
         Order By sf1.f1_descri;
   End If;
  
   --Janeiro
    Update [(fr1)] 
       Set fr1_valor01 = fr1_valor01 + CASE WHEN iPrevisto = 0 Then mov.sfb_previsto ELSE mov.sfb_saldo END
      From [(sfb)] mov
     Where [(fr1)].fr1_ordem = mov.f1_codnat 
       and session = sys_session()
       and mov.sf6_mes = 01 
       and mov.sf6_ano = iAno;
  
   --Fevereiro
    Update [(fr1)] 
       Set fr1_valor02 = fr1_valor02 + CASE WHEN iPrevisto = 0 Then mov.sfb_previsto ELSE mov.sfb_saldo END
      From [(sfb)] mov
     Where [(fr1)].fr1_ordem = mov.f1_codnat 
       and session = sys_session()
       and mov.sf6_mes = 02 
       and mov.sf6_ano = iAno;

   --Março  
   Update [(fr1)] 
      Set fr1_valor03 = fr1_valor03 + CASE WHEN iPrevisto = 0 Then mov.sfb_previsto ELSE mov.sfb_saldo END
     From [(sfb)] mov
    Where [(fr1)].fr1_ordem = mov.f1_codnat 
      and session = sys_session()
      and mov.sf6_mes = 03 
      and mov.sf6_ano = iAno;

   --Abril  
   Update [(fr1)] 
      Set fr1_valor04 = fr1_valor04 + CASE WHEN iPrevisto = 0 Then mov.sfb_previsto ELSE mov.sfb_saldo END
     From [(sfb)] mov
    Where [(fr1)].fr1_ordem = mov.f1_codnat 
      and session = sys_session()
      and mov.sf6_mes = 04 
      and mov.sf6_ano = iAno;

   --Maio   
   Update [(fr1)] 
      Set fr1_valor05 = fr1_valor05 + CASE WHEN iPrevisto = 0 Then mov.sfb_previsto ELSE mov.sfb_saldo END
     From [(sfb)] mov
    Where [(fr1)].fr1_ordem = mov.f1_codnat 
      and session = sys_session()
      and mov.sf6_mes = 05 
      and mov.sf6_ano = iAno;

   --Junho  
   Update [(fr1)] 
      Set fr1_valor06 = fr1_valor06 + CASE WHEN iPrevisto = 0 Then mov.sfb_previsto ELSE mov.sfb_saldo END
     From [(sfb)] mov
    Where [(fr1)].fr1_ordem = mov.f1_codnat 
      and session = sys_session()
      and mov.sf6_mes = 06 
      and mov.sf6_ano = iAno;

   --Julho  
   Update [(fr1)] 
      Set fr1_valor07 = fr1_valor07 + CASE WHEN iPrevisto = 0 Then mov.sfb_previsto ELSE mov.sfb_saldo END
     From [(sfb)] mov
    Where [(fr1)].fr1_ordem = mov.f1_codnat 
      and session = sys_session()
      and mov.sf6_mes = 07 
      and mov.sf6_ano = iAno;

   --Agosto 
   Update [(fr1)] 
      Set fr1_valor08 = fr1_valor08 + CASE WHEN iPrevisto = 0 Then mov.sfb_previsto ELSE mov.sfb_saldo END
     From [(sfb)] mov
    Where [(fr1)].fr1_ordem = mov.f1_codnat 
      and session = sys_session()
      and mov.sf6_mes = 08 
      and mov.sf6_ano = iAno;

   --Setembro
   Update [(fr1)] 
      Set fr1_valor09 = fr1_valor09 + CASE WHEN iPrevisto = 0 Then mov.sfb_previsto ELSE mov.sfb_saldo END
     From [(sfb)] mov
    Where [(fr1)].fr1_ordem = mov.f1_codnat 
      and session = sys_session()
      and mov.sf6_mes = 09 
      and mov.sf6_ano = iAno;

   --Outubro
   Update [(fr1)] 
      Set fr1_valor10 = Fr1_valor10 + CASE WHEN iPrevisto = 0 Then mov.sfb_previsto ELSE mov.sfb_saldo END
     From [(sfb)] mov
    Where [(fr1)].fr1_ordem = mov.f1_codnat 
      and session = sys_session()
      and mov.sf6_mes = 10 
      and mov.sf6_ano = iAno;

   --Novembro
   Update [(fr1)] 
      Set fr1_valor11 = fr1_valor11 + CASE WHEN iPrevisto = 0 Then mov.sfb_previsto ELSE mov.sfb_saldo END
     From [(sfb)] mov
    Where [(fr1)].fr1_ordem = mov.f1_codnat 
      and session = sys_session()
      and mov.sf6_mes = 11 
      and mov.sf6_ano = iAno;
                 
   --Dezembro
   Update [(fr1)] 
      Set fr1_valor12 = fr1_valor12 + CASE WHEN iPrevisto = 0 Then mov.sfb_previsto ELSE mov.sfb_saldo END
     From [(sfb)] mov
    Where [(fr1)].fr1_ordem = mov.f1_codnat 
      and session = sys_session()
      and mov.sf6_mes = 12 
      and mov.sf6_ano = iAno;

   --Total Horizontal 
   Update [(fr1)] 
      Set fr1_valor13 = fr1_valor01 + fr1_valor02 + fr1_valor03 + fr1_valor04 + fr1_valor05 + fr1_valor06 +
                        fr1_valor07 + fr1_valor08 + fr1_valor09 + fr1_valor10 + fr1_valor11 + fr1_valor12
     From [(sfb)] mov
    Where [(fr1)].fr1_ordem = mov.f1_codnat 
      and session = sys_session()
      and mov.sf6_ano = iAno;
  
   -- Prepara Valores de Despesas Para Totalizacao Vertical
   Select sum(fr1_valor01), sum(fr1_valor02), sum(fr1_valor03), sum(fr1_valor04), sum(fr1_valor05),
          sum(fr1_valor06), sum(fr1_valor07), sum(fr1_valor08), sum(fr1_valor09), sum(fr1_valor10),
          sum(fr1_valor11), sum(fr1_valor12), sum(fr1_valor13)
     Into nDespJaneiro,     nDespFevereiro,   nDespMarco,       nDespAbril,       nDespMaio,
          nDespJunho,       nDespJulho,       nDespAgosto,      nDespSetembro,    nDespOutubro,
          nDespNovembro,    nDespDezembro,    nDespTotal
    From  [(fr1)] fr1
   Where  session = sys_session();

   -- Total Vertical Despesas
   Insert Into [(fr1)] (session,       fr1_ordem,   fr1_texto01, fr1_valor01, fr1_valor02,
                        fr1_valor03,   fr1_valor04, fr1_valor05, fr1_valor06, fr1_valor07,
                        fr1_valor08,   fr1_valor09, fr1_valor10, fr1_valor11, fr1_valor12,
                        fr1_valor13)
        Values         (sys_session(),  888888888,     ' TOTAL DESPESAS', nDespJaneiro,
                        nDespFevereiro, nDespMarco,    nDespAbril,        nDespMaio,        
                        nDespJunho,     nDespJulho,    nDespAgosto,       nDespSetembro,   
                        nDespOutubro,   nDespNovembro, nDespDezembro,     nDespTotal);

   -- Calcula a Coluna Media Mensal
   Update [(fr1)]
      Set fr1_valor14 = fr1_valor13 / 12
    Where session = sys_session()
      and fr1_valor13 <> 0;


   -- Calcula a Media do Ano Anterior
   Update [(fr1)] 
      Set fr1_valor15 = mov.sfb_saldo / 12
     From [(sfb)] mov
    Where [(fr1)].fr1_ordem = mov.f2_codcat 
      and session = sys_session()
      and mov.sf6_ano = iAno - 1;

   -- Calcula a Evolução da Media 
   Update [(fr1)]
      Set fr1_valor16 = 1 - fr1_valor14 / fr1_valor15
    Where session = sys_session()
      and fr1_valor15 <> 0;

   -- Altera a Descricao da Coluna 1 Colocando o Tipo de Categoria do Relatorio
   Update [(ss042)] 
      Set name_ = [(sf2)].f2_descri
     From [(sf2)]
    Where [(sf2)].f2_codcat = iCategoria
      and Columnname = 'fr1_texto01'
      and session = sys_session();

   -- Inclui o Total da Verba Estipulada
   nVerba := 0;
   Select f5_verba
     Into nVerba 
     From [(sf5)] sf5
    Where sf5.f2_codcat = iCategoria
      And coalesce(sf5.f5_data_fim, sf5.f5_data_ini) = 
         (select max(coalesce(f5_data_fim, f5_data_ini)) 
            from [(sf5)]
           where f2_codcat = iCategoria  
             and sys_year(coalesce(f5_data_fim, f5_data_ini)) <= iAno);

   Insert Into [(fr1)] (session,       fr1_ordem, fr1_texto01,         fr1_valor01)
        Values         (sys_session(), 999999999, ' VERBA ESTIPULADA', nVerba);

   Out_res := 1;
End;
$$ language 'plpgsql';