/*
  Empresa..: Conceitho Tecnologia
  Descrição: Procedure de Resumo Operacional
  Autor....: Fabio Carvalho
  Data.....: 31/05/2016
  Tipo.....: Procedure
  Tabela...:
*/
Create or Replace Function mc_00942####???
(  in  pDataIni      date,
   in  pDataFim      date,
   out out_res       integer )
As $$
Declare
   rRec   Record;
Begin
   out_res := 0;

   --Apaga a Sessao
   delete from [(tgj)]   where session = sys_session();
   delete from [(tgk)]   where session = sys_session();
   delete from [(tgl)]   where session = sys_session();
   delete from [(ss118)] where session = sys_session();

   --Insere os dados dos parametros do relatorio
   insert into [(ss118)] (ss118_nome_relat, ss118_data1, ss118_data2, session)
                  values ('tg_res_operac',  pDataIni,    pDataFim,    sys_session());

   --Insere os Dados Novamente
   insert into [(tgj)] (b1_codpro,      b1_nome,         aut_qtd,          aut_total,        aut_kgs,
                        pv_qtd,         pv_total,        pv_kgs,           por_qtd,          por_total,
                        por_kgs,        out_qtd,         out_total,        out_kgs,          tot_qtd,
                        tot_total,      
                        tot_kgs,         
                        session)
               select   f.b1_codpro,    g.b1_nome,       sum(f.aut_qtd),   sum(f.aut_total), sum(f.aut_kgs),
                        sum(f.pv_qtd),  sum(f.pv_total), sum(f.pv_kgs),    sum(f.por_qtd),   sum(f.por_total),
                        sum(f.por_kgs), sum(f.out_qtd),  sum(f.out_total), sum(f.out_kgs),   sum(f.aut_qtd   + f.pv_qtd   +
                                                                                                 f.por_qtd   + f.out_qtd),
                        sum(f.aut_total + f.pv_total + f.por_total + f.out_total),
                        sum(f.aut_kgs   + f.pv_kgs   + f.por_kgs   + f.out_kgs),
                        sys_session()
                 from (select a.b1_codpro,
                              sum(a.tg4_quantidade) as aut_qtd, sum(a.tg4_total) as aut_total, sum(a.tg4_quilos) as aut_kgs,
                              0                     as pv_qtd,  0                as pv_total,  0                 as pv_kgs,
                              0                     as por_qtd, 0                as por_total, 0                 as por_kgs,
                              0                     as out_qtd, 0                as out_total, 0                 as out_kgs
                         from [(tg4)] a
                         join [(tg3)] c on a.tg3_recno  = c.recno
                         join [(sfj)] d on d.sfj_pessoa = c.cod_cliente
                         join [(sa1)] e on e.a1_codcli  = d.sfj_pessoa
                        where e.aa_codsegui = 1
                          and c.tg3_data >= pDataIni
                          and c.tg3_data <= pDataFim
                        group by a.b1_codpro
                       union
                       select a.b1_codpro,
                              0                     as aut_qtd, 0                as aut_total, 0                 as aut_kgs,
                              sum(a.tg4_quantidade) as pv_qtd,  sum(a.tg4_total) as pv_total,  sum(a.tg4_quilos) as pv_kgs,
                              0                     as por_qtd, 0                as por_total, 0                 as por_kgs,
                              0                     as out_qtd, 0                as out_total, 0                 as out_kgs
                         from [(tg4)] a
                         join [(tg3)] c on a.tg3_recno = c.recno
                         join [(sfj)] d on d.sfj_pessoa = c.cod_cliente
                         join [(sa1)] e on e.a1_codcli = d.sfj_pessoa
                        where e.aa_codsegui = 2
                          and c.tg3_data >= pDataIni
                          and c.tg3_data <= pDataFim
                        group by a.b1_codpro
                       union
                       select a.b1_codpro,
                              0                     as aut_qtd, 0                as aut_total, 0                 as aut_kgs,
                              0                     as pv_qtd,  0                as pv_total,  0                 as pv_kgs,
                              sum(a.tg4_quantidade) as por_qtd, sum(a.tg4_total) as por_total, sum(a.tg4_quilos) as por_kgs,
                              0                     as out_qtd, 0                as out_total, 0                 as out_kgs
                         from [(tg4)] a
                         join [(tg3)] c on a.tg3_recno = c.recno
                         join [(sfj)] d on d.sfj_pessoa = c.cod_cliente
                         join [(sa1)] e on e.a1_codcli = d.sfj_pessoa
                        where e.aa_codsegui = 3
                          and c.tg3_data >= pDataIni
                          and c.tg3_data <= pDataFim
                        group by a.b1_codpro
                       union
                       select a.b1_codpro,
                              0                     as aut_qtd, 0                as aut_total, 0                 as aut_kgs,
                              0                     as pv_qtd,  0                as pv_total,  0                 as pv_kgs,
                              0                     as por_qtd, 0                as por_total, 0                 as por_kgs,
                              sum(a.tg4_quantidade) as out_qtd, sum(a.tg4_total) as out_total, sum(a.tg4_quilos) as out_kgs
                         from [(tg4)] a
                         join [(tg3)] c on a.tg3_recno = c.recno
                         join [(sfj)] d on d.sfj_pessoa = c.cod_cliente
                         join [(sa1)] e on e.a1_codcli = d.sfj_pessoa
                        where e.aa_codsegui not in (1,2,3) or e.aa_codsegui is null
                          and c.tg3_data >= pDataIni
                          and c.tg3_data <= pDataFim
                        group by a.b1_codpro) f
                 join [(sb1)] g on g.b1_codpro = f.b1_codpro
                group by f.b1_codpro, g.b1_nome
                order by f.b1_codpro;

   --Insere dados de Compras
   for rRec in (select a.b1_codpro,
                       min(b.b1_nome)       as b1_nome,
                       sum(a.a49_qtdu1)     as tgk_pquant,
                       sum(a.a49_qtdu2)     as tgk_squant,
                       sum(a.a49_valort_u1) as tgk_ptotal,
                       sum(a.a49_valort_u2) as tgk_stotal,
                       sum(a.a49_custou)    as tgk_pcustou
                   from [(a49)] a
                   join [(sb1)] b on b.b1_codpro = a.b1_codpro
                  where a.a49_data >= pDataIni
                    and a.a49_data <= pDataFim
                    and a.a49_tipo = 1
                  group by a.b1_codpro
                  order by a.b1_codpro) loop

        --Insere totais de compras do mes
        if not exists(select 1 from [(tgj)] where b1_codpro = rRec.b1_codpro) then
           insert into [(tgj)] (b1_codpro,      b1_nome,      session,       tot_custo_mes)
                        values (rRec.b1_codpro, rRec.b1_nome, sys_session(), rRec.tgk_ptotal);
        else
           update [(tgj)] set tot_custo_mes = rRec.tgk_ptotal
            where session = sys_session()
              and b1_codpro = rRec.b1_codpro;
        end if;

        --Insere Dados de Compras
        insert into [(tgk)] (b1_codpro,       b1_nome,         session,          tgk_pquant,      tgk_squant,
                             tgk_ptotal,      tgk_stotal,      tgk_pcustou,      tgk_scustou)
                     values (rRec.b1_codpro,  rRec.b1_nome,    sys_session(),    rRec.tgk_pquant, rRec.tgk_squant,
                             rRec.tgk_ptotal, rRec.tgk_stotal, rRec.tgk_pcustou, rRec.tgk_pcustou);
   end loop;

   --insere as naturezas
   insert into [(tgl)] (f1_codnat,   f1_descri,        tgl_valor,        sf1_tipo,       session)
                 select a.f1_codnat, min(b.f1_descri), sum(a.far_valor), min(b.f1_tipo), sys_session()
                   from [(far)] a
                   join [(sf1)] b on b.f1_codnat = a.f1_codnat
                  where sar_data >= pDataIni
                    and sar_data <= pDataFim
                    and sar_tipo in (1,3)            --Entrada/Saida
               group by a.f1_codnat
               order by a.f1_codnat;


    --Cursor aproveitando a tabela de vendas para lançar o custo contabil
    for rRec in (select a.b1_codpro, min(b.b1_nome)           as b1_nome,
                        sum(a.a12_custo_t)                    as custo_mes
                   from [(a12)] a
                   join [(sb1)] b on b.b1_codpro = a.b1_codpro
                  where a.a12_tipo = 1  --entrada
                    and a.a12_data >= pDataIni
                    and a.a12_data <= pDataFim
                  group by a.b1_codpro
                  order by a.b1_codpro) loop

        if not exists(select 1 from [(tgj)] where b1_codpro = rRec.b1_codpro) then
           insert into [(tgj)] (b1_codpro,      b1_nome,      session,       tot_custo_contabil, tot_custo_mes)
                        values (rRec.b1_codpro, rRec.b1_nome, sys_session(), 0,                  custo_mes);
        else
           update [(tgj)] set tot_custo_contabil = rRec.custo_mes
            where session = sys_session()
              and b1_codpro = rRec.b1_codpro;
        end if;
    end loop;

    --Processa o Saldo do Estoque
    perform mc_00001####???(pDataFim);

   out_res := 1;
End;
$$ language plpgsql;