/*============================================================================
  Empresa..: MultCont Informática
  Descrição: Procedure para validar Tabela tgc Before
  Autor....: Fabio Carvalho
  Data.....: 16/04/2010
  ---------------|------------------------------------------------------------
  out_res        | 0 - Falha / 1 - Sucesso
  ============================================================================*/
Create or Replace Function mc_01067####???()
Returns trigger
As $$
Declare
   rProduto       record;
   rTgb           record;
   rCfop          record;
   iStatus        integer;
   NValEst_trib   numeric(15,2);
   aICMS_IPI      Numeric(15, 2) ARRAY[17];     -- aICMS_IPI[01] = Base de Cálculo do ICMS
                                                -- aICMS_IPI[02] = Alíquota do ICMS
                                                -- aICMS_IPI[03] = Valor do ICMS
                                                -- aICMS_IPI[04] = Base de Cálculo do IPI
                                                -- aICMS_IPI[05] = Alíquota do IPI
                                                -- aICMS_IPI[06] = Valor do IPI
                                                -- aICMS_IPI[07] = Base de Cálculo do PIS/COFINS
                                                -- aICMS_IPI[08] = Alíquota do PIS
                                                -- aICMS_IPI[09] = Valor do PIS
                                                -- aICMS_IPI[10] = Alíquota do COFINS
                                                -- aICMS_IPI[11] = Valor do COFINS
                                                -- aICMS_IPI[12] = Total do Produto (Quanto * Unitário)
                                                -- aICMS_IPI[13] = Total do Item (Produto + IPI + ST)
                                                -- aICMS_IPI[14] = Valor da Fatura
                                                -- aICMS_IPI[15] = Base de Calculo da Substituição Tributária
                                                -- aICMS_IPI[16] = Alíquota de ICMS para calculo da Substituição Tributária
                                                -- aICMS_IPI[17] = Valor da Substituição Tributária
begin

   if    tg_op = 'DELETE' then
      return old;
   else
      if tg_op = 'INSERT' then
         -- Numera o item do Cupom Fiscal
         select coalesce(max(tgc_item),0) + 1
           into new.tgc_item
              from [(tgc)]
             where tgb_recno = new.tgb_recno;
      end if;

      if new.f4_tes is null then
         select f4_tes_vendas
           into new.f4_tes
           from [(tl0)];
      end if;

      -- Busca configurações da TES
      select sbn_codtrib,     sbx_st,     a0e_cod,     a0c_cod,     a0f_cod,     f4_redicms,       f4_redipi,        a1c_codigo
        into new.sbn_codtrib, new.sbx_st, new.a0e_cod, new.a0c_cod, new.a0f_cod, new.tgc_redu_icm, new.tgc_redu_ipi, new.a1c_codigo
        From [(sf4)]
       Where f4_tes = new.f4_tes;

      -- Recupera informação do material
      select a.b1_nome,     a.b1_ativo,      b.a2h_cod,     b.a2h_descri, b.a2h_natureza, c.sbf_rastro, c.sbf_numser,
             c.sbf_localiz, c.sbf_estocavel, a.b1_anp_prod, a.b1_anp_uf
        into rProduto
        from [(sb1)] a
             join [(a2h)] b on b.a2h_cod   = a.a2h_cod
             join [(sbf)] c on c.b1_codpro = a.b1_codpro
        left join [(sbm)] d on d.sbm_clf = a.sbm_clf
       where a.b1_codpro = new.b1_codpro;

      -- verifica se produto disponivel para venda
--    if rProduto.b1_fatura = 0 then
--       raise '[[O Material: % não está disponivel para Venda. Verifique!]]',new.b1_codpro;
--    end if;

      -- Verifica se o material está ativo
      if rProduto.b1_ativo != 1  then
         raise '[[O material % - % não pode ser incluído na nota porque está inativo.]]', new.b1_codpro, rm.b1_nome;
      end if;

      -- Verifica a natureza financeira do produto
      new.f1_codnat := mc_valnatureza####???( new.b1_codpro, new.f1_codnat );

      --Recupera informação do Registro Pai
      select coalesce(sfj_pessoa,0) as sfj_pessoa, tgb_crt
        into rTgb
        from [(tgb)]
       where recno = new.tgb_recno;

      --caso nao tenha pessoa identificada, retorna 0 (filial)
      new.f8_cfop = (mc_00040####???(rTgb.sfj_pessoa, mc_00205####???(rTgb.sfj_pessoa), new.f4_tes))[1];

      -- Recupera informação da cfop
      select f8_descri, f8_tipo, f8_consumo, f8_estoque, f8_3os
        into rCfop
        from [(sf8)]
       where f8_cfop = new.f8_cfop;

      --Valida se Cfop é de Saida
      if rCfop.f8_tipo != 2 then
         raise '[[A CFOP "% - %" é inválida para operações de saida]]', new.f8_cfop, rCfop.f8_descri;
      end if;

      -- Verifica se o tipo de material suporta a CFOP
      if not exists(
         select 1
           from [(a4g)] a
               join [(sb1)] b
                 on b.a2h_cod = a.a2h_cod
                and b.b1_codpro = new.b1_codpro
          where f8_cfop = new.f8_cfop)
      then
         raise '[[O tipo "% - %", associado ao material "% - %", não suporta a operação "% - %".]]',
            rProduto.a2h_cod, rProduto.a2h_descri, trim(new.b1_codpro), trim(rProduto.b1_nome), new.f8_cfop, rCfop.f8_descri;
      end if;

      -- Chama procedure de calcula Bases, confirma Alíquotas e calcula Impostos
      aICMS_IPI := mc_icms_ipi_pis####???(0,                new.f4_tes,         new.tgc_unitario, new.tgc_quantidade,
                                          0,                new.tgc_aliq_icm,   new.tgc_redu_icm, new.tgc_aliq_ipi,
                                          new.tgc_redu_ipi, new.a0f_cod,        new.tgc_aliq_pis, new.a0e_cod,
                                          new.tgc_aliq_fin, new.tgc_total,      new.tgc_frete,    new.tgc_seguro,
                                          new.tgc_encargos, new.tgc_acessorias, rTgb.tgb_crt,
                                          Array[new.tgc_vbcst, new.tgc_aliq_st, new.tgc_vicmsst, 0.00 ],
                                          rTgb.sfj_pessoa, new.tgc_bs_pisfin, new.tgc_bse_icm);

      -- Zera alíquota informada caso a TES não permita ICMS
      If aICMS_IPI[01] <= 0.00 Then
         new.tgc_bse_icm  := 0;
         new.tgc_aliq_icm := 0;
         new.tgc_vlr_icm  := 0;
      End If;

      -- ICMS Substituição
      new.tgc_vbcst   := aICMS_IPI[15];
      new.tgc_aliq_st := aICMS_IPI[16];
      new.tgc_vicmsst := aICMS_IPI[17];

      -- Zera alíquota informada caso a TES não permita IPI
      IF aICMS_IPI[04] <= 0 Then
         new.tgc_bse_ipi  := 0;
         new.tgc_aliq_ipi := 0;
         new.tgc_vlr_ipi  := 0;
      End If;

      -- Zera alíquota informada caso a TES não permita PIS / COFINS
      IF aICMS_IPI[07] <= 0.00 Then
         new.tgc_bs_pisfin := 0;
         new.tgc_aliq_pis  := 0;
         new.tgc_vlr_pis   := 0;
         new.tgc_aliq_fin  := 0;
         new.tgc_vlr_fin   := 0;
      Else
         new.tgc_bs_pisfin := aICMS_IPI[07];
         new.tgc_aliq_pis  := aICMS_IPI[08];
         new.tgc_vlr_pis   := aICMS_IPI[09];
         new.tgc_aliq_fin  := aICMS_IPI[10];
         new.tgc_vlr_fin   := aICMS_IPI[11];
      End If;

      -- Calcula o valor total do item considerando o Desconto
      new.tgc_total  := aICMS_IPI[12];
      -- Preenchimento dos valores aproximados de tributo de acordo com a norma do IPBT
      if new.sbn_codtrib in ('1','2','3','8') then -- Se Importado

         select coalesce(sbm_trib_imp,0)
           into NValEst_trib
           from [(sbm)] sbm
               join [(sb1)] sb1 on sb1.sbm_clf = sbm.sbm_clf
          where sb1.b1_codpro = new.b1_codpro;
         new.tgc_aliq_tributos := NValEst_trib;
         new.tgc_tt_tributos = coalesce(new.tgc_total,0) * (NValEst_trib / 100);
      else
         select coalesce(sbm_trib_nac,0)
           into NValEst_trib
           from [(sbm)] sbm
               join [(sb1)] sb1
                 on sb1.sbm_clf = sbm.sbm_clf
          where sb1.b1_codpro = new.b1_codpro;

         new.tgc_aliq_tributos := NValEst_trib;
         new.tgc_tt_tributos   := coalesce(new.tgc_total,0) * (NValEst_trib/ 100);
      end if;

      -- verifica se status do disk é como cancelado
      select tgb_status
        into iStatus
        from [(tgb)]
       Where recno = new.tgb_recno;

      if iStatus = 2 then
         raise '[[Não é possivel incluir/alterar item de venda com Status Cancelado. Verifique!]]';
      end if;

      --Codigos ANP
      new.tgc_anp_prod := rProduto.b1_anp_prod;
      new.tgc_anp_uf   := rProduto.b1_anp_uf;

      return new;
   end if;

end;
$$ language 'plpgsql'
