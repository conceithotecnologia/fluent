/**
   Importação da estrutura do XML disponível na tabela FR1 para tabela NFK (NFSe)

	@author    Wagner Mobile Costa
	@date      29/04/2011 23:30:00
	@function

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso

   06/07/2012 07:45:00  v1    Wagner Mobile Costa
      [+] Inclusão de cliente quando não for localizado
*/
Create or Replace Function mc_00433####???
( Out out_res     Integer )
As $$
Declare
-- {Variáveis para cursores}
   rRec        Record;
   isfj_pessoa [(sfj)].sfj_pessoa%type;  -- Código da Pessoa
   iNotas      integer;
Begin
   iNotas := 0; 
   for rRec in (select fr1.fr1_numero01 as nfk_nfs_numero, 
                       max(case when fr1_texto01 = 'CodigoVerificacao' 
                                then cast(fr1_texto02 as varchar(9)) 
                                else null end) as nfk_cod_verif,            
                       max(case when fr1_texto01 = 'DataEmissao' 
                                then cast(fr1_texto02 as timestamp) 
                                else null end) as nfk_nfs_emissao,
                       max(case when fr1_texto01 = 'IdentificacaoRps.Numero' 
                                then cast(fr1_texto02 as integer) 
                                else null end) as nfk_rps_numero,
                       max(case when fr1_texto01 = 'IdentificacaoRps.Serie' 
                                then cast(fr1_texto02 as varchar(5)) 
                                else null end) as szt_serie,
                       coalesce(max(case when fr1_texto01 = 'IdentificacaoRps.Tipo' 
                                         then cast(fr1_texto02 as integer)
                                         else null end), 1) as nfk_rps_tipo,
                       max(case when fr1_texto01 = 'DataEmissaoRps' 
                                then cast(fr1_texto02 as timestamp) 
                                else null end) as nfk_rps_emissao,
                       coalesce(max(case when fr1_texto01 = 'NaturezaOperacao' 
                                         then cast(fr1_texto02 as integer) 
                                         else null end), 1) as nfk_nat_oper,
                       max(case when fr1_texto01 = 'RegimeEspecialTributacao'
                                then cast(fr1_texto02 as integer) 
                                else null end) as nfk_reg_esp,
                       max(case when fr1_texto01 = 'OptanteSimplesNacional' 
                                then cast(fr1_texto02 as integer) 
                                else null end) as nfk_simples,
                       max(case when fr1_texto01 = 'IncentivadorCultural' 
                                then cast(fr1_texto02 as integer) 
                                else null end) as nfk_incentivador,
                       max(case when fr1_texto01 = 'Competencia'
                                then cast(fr1_texto02 as varchar(6))
                                else null end) as nfk_compet,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.ValorServicos'
                                then cast(fr1_texto02 as numeric(18,2))
                                else null end), 0) as nfk_vr_servicos,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.ValorDeducoes'
                                then cast(fr1_texto02 as numeric(18,2))
                                else null end), 0) as nfk_vr_deducoes,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.ValorPis'
                                then cast(fr1_texto02 as numeric(18,2))
                                else null end), 0) as nfk_vr_pis,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.ValorCofins'
                                then cast(fr1_texto02 as numeric(18,2))
                                else null end), 0) as nfk_vr_cofins,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.ValorInss'
                                then cast(fr1_texto02 as numeric(18,2))
                                else null end), 0) as nfk_vr_inss,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.ValorIr'
                                then cast(fr1_texto02 as numeric(18,2))
                                else null end), 0) as nfk_vr_ir,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.ValorCsll'
                                then cast(fr1_texto02 as numeric(18,2)) 
                                else null end), 0) as nfk_vr_csll,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.IssRetido' 
                                then cast(fr1_texto02 as integer) 
                                else null end), 0) as nfk_iss_retido,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.ValorIss' 
                                then cast(fr1_texto02 as numeric(18,2)) 
                                else null end), 0) as nfk_vr_iss,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.ValorIssRetido' 
                                then cast(fr1_texto02 as numeric(18,2)) 
                                else null end), 0) as nfk_vr_iss_retido,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.OutrasRetencoes' 
                                then cast(fr1_texto02 as numeric(18,2))
                                else null end), 0) as nfk_vr_outras,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.BaseCalculo' 
                                then cast(fr1_texto02 as numeric(18,2))
                                else null end), 0) as nfk_vr_b_calculo,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.Aliquota' 
                                then cast(fr1_texto02 as numeric(18,2)) 
                                else null end), 0) as nfk_iss_aliq,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.ValorLiquidoNfse'
                                then cast(fr1_texto02 as numeric(18,2))
                                else null end), 0) as nfk_vr_liquido,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.DescontoIncondicionado'
                                then cast(fr1_texto02 as numeric(18,2))
                                else null end), 0) as nfk_vr_desc_incond,
                       coalesce(max(case when fr1_texto01 = 'Servico.Valores.DescontoCondicionado'
                                then cast(fr1_texto02 as numeric(18,2))
                                else null end), 0) as nfk_vr_desc_cond,
                       max(case when fr1_texto01 = 'ItemListaServico'
                                then cast(fr1_texto02 as varchar(5))
                                else null end) as nfk_list_serv,
                       max(case when fr1_texto01 = 'Servico.CodigoTributacaoMunicipio'
                                then cast(fr1_texto02 as varchar(20))
                                else null end) as nfk_cod_trib_mun,
                       max(case when fr1_texto01 = 'Servico.Discriminacao'
                                then cast(fr1_texto02 as varchar(255)) 
                                else null end) as nfk_discriminacao,
                       max(case when fr1_texto01 = 'Servico.CodigoMunicipio' 
                                then cast(fr1_texto02 as varchar(7)) 
                                else null end) as nfk_mun_prest_serv,
                       max(case when fr1_texto01 = 'Servico.CodigoObra'
                                then cast(fr1_texto02 as varchar(15))
                                else null end) as nfk_obra,
                       max(case when fr1_texto01 = 'Servico.Art'
                                then cast(fr1_texto02 as varchar(15))
                                else null end) as nfk_art,
                       max(case when fr1_texto01 = 'TomadorServico.IdentificacaoTomador.CpfCnpj.Cnpj'
                                then cast(fr1_texto02 as varchar(14))
                                else null end) as sfh_cnpj,
                       max(case when fr1_texto01 = 'TomadorServico.IdentificacaoTomador.CpfCnpj.Cpf'
                                then cast(fr1_texto02 as varchar(11))
                                else null end) as sfi_cpf,
                       max(case when fr1_texto01 = 'TomadorServico.RazaoSocial'
                                then cast(fr1_texto02 as varchar(100))
                                else null end) as sfj_nome,
                       max(case when fr1_texto01 = 'TomadorServico.Endereco.Endereco'
                                then cast(fr1_texto02 as varchar(60))
                                else null end) as se2_ender,
                       max(case when fr1_texto01 = 'TomadorServico.Endereco.Numero'
                                then cast(fr1_texto02 as varchar(6))
                                else null end) as se2_num,
                       max(case when fr1_texto01 = 'TomadorServico.Endereco.Bairro'
                                then cast(fr1_texto02 as varchar(50))
                                else null end) as se2_bairro,
                       max(case when fr1_texto01 = 'TomadorServico.Endereco.CodigoMunicipio'
                                then cast(fr1_texto02 as varchar(7))
                                else null end) as CodigoMunicipio,
                       max(case when fr1_texto01 = 'TomadorServico.Endereco.Cep'
                                then sys_strzero(cast(fr1_texto02 as varchar(8))::integer, 8)
                                else null end) as se2_cep,
                       max(case when fr1_texto01 = 'Confirmacao.InfConfirmacaoCancelamento.DataHora'
                                then cast(fr1_texto02 as timestamp)
                                else null end) as nfk_data_cancelamento,
                       coalesce(max(case when fr1_texto01 = 'Confirmacao.InfConfirmacaoCancelamento.CodigoCancelamento'
                                         then cast(fr1_texto02 as integer)
                                         else null end), 0) as nfk_pedcancelamento,
                       max(a2b.recno) as recno_a2b, max(a2b.a2a_cod) as a2a_cod,  
                       max(sz9.sz9_municipio) as sz9_municipio                                       
                  from [(fr1)] fr1
                  left join (select a2b.a14_cod, a2b.a2b_cod_municipio, min(a2b.a2a_cod) as a2a_cod, min(a2b.recno) as recno
                               from [(a2b)] a2b
                               join (select a2b_cod_municipio, a14_cod
                                       from (
                                    (select cast(max(case when fr1_texto01 = 'Servico.CodigoTributacaoMunicipio' 
                                                          then cast(fr1_texto02 as varchar(20)) else null end) as varchar(20)) as a2b_cod_municipio, 
                                            cast(max(case when fr1_texto01 = 'Servico.ItemListaServico' then cast(fr1_texto02 as varchar(5)) 
                                                          else null end) as varchar(5)) as a14_cod 
                                       from [(fr1)] fr1
                                      where fr1.session = sys_session() 
                                        and fr1_texto01 in ('Servico.CodigoTributacaoMunicipio', 'Servico.ItemListaServico')
                                      group by fr1_numero01)) fr1
                                      group by a2b_cod_municipio, a14_cod) fr1 on fr1.a14_cod = rtrim(ltrim(a2b.a14_cod))
                                and fr1.a2b_cod_municipio = a2b.a2b_cod_municipio          
                              group by a2b.a14_cod, a2b.a2b_cod_municipio) a2b
                         on a2b.a2b_cod_municipio = case when fr1_texto01 = 'Servico.CodigoTributacaoMunicipio'
                                                         then cast(fr1_texto02 as varchar(20)) else null end
                  left join [(sz9)] sz9 on sz9.sz9_municipio = case when fr1_texto01 = 'Servico.CodigoMunicipio' 
                                                               then cast(fr1_texto02 as varchar(7)) 
                                                               else null end
                  left join [(nfk)] nfk on nfk.nfk_nfs_numero::integer = fr1.fr1_numero01                                                
                 where fr1.session = sys_session() and nfk.nfk_nfs_numero is null         
              group by fr1.fr1_numero01
              order by fr1.fr1_numero01 ) loop

       -- Recupera o código da pessoa utilizando o CNPJ/CPF
       isfj_pessoa := null;
       if not rRec.sfh_cnpj is null then
          select sfj_pessoa into isfj_pessoa from [(sfh)] where sfh_cnpj = rRec.sfh_cnpj;
       elsif not rRec.sfi_cpf is null then                                                          
          select sfj_pessoa into isfj_pessoa from [(sfi)] sfi where sfi_cpf = rRec.sfi_cpf;
       end if;                                                         
                                                         
       -- Código do Municipio não encontrado
       if rRec.sz9_municipio is null then
          perform sys_msg####???(3, 'O código do municipio [' || rRec.CodigoMunicipio || '] ' ||
                                                   'da nota [' || rRec.nfk_nfs_numero || '] não foi encontrado !');
       end if;
                                                          
       if isfj_pessoa is null and not rRec.sz9_municipio is null then
          isfj_pessoa:= nextval('[(sfj)]_sfj_pessoa_seq'::regclass);

          -- Cadastro da Pessoa
          insert into [(sfj)](sfj_pessoa, sfj_nome, sfj_cadastro, sfj_tipo, sfj_situacao)
                      values (isfj_pessoa, rRec.sfj_nome,
                              cast(case when not rRec.nfk_compet is null
                                        then cast(rRec.nfk_compet || '01' as timestamp)
                                        else current_timestamp end as date),
                              case when not rRec.sfh_cnpj is null then 2 else 1 end, 1);

          -- Pessoa Juridica
          if not rRec.sfh_cnpj is null then
             insert into [(sfh)] ( sfj_pessoa, sfh_cnpj )
                          values ( isfj_pessoa, rRec.sfh_cnpj ); 
          else 
             insert into [(sfi)] ( sfj_pessoa, sfi_cpf )
                          values ( isfj_pessoa, rRec.sfi_cpf ); 
          end if;
          
          -- Cadastro do Endereço
          insert into [(se2)] ( a1_codcli, se2_vigencia, se2_cep, se2_ender, se2_num,
                                se2_bairro, sz9_municipio )
          values( isfj_pessoa, cast(case when not rRec.nfk_compet is null
                                         then cast(rRec.nfk_compet || '01' as timestamp)
                                         else current_timestamp end as date), rRec.se2_cep, rRec.se2_ender, rRec.se2_num,
                   rRec.se2_bairro, rRec.sz9_municipio);

          -- Perfil de Cliente
          insert into [(sa1)] ( a1_codcli, a1_dtcad, ae_codorg)
          values( isfj_pessoa, cast(case when not rRec.nfk_compet is null
                                         then cast(rRec.nfk_compet || '01' as timestamp)
                                         else current_timestamp end as date), 1);
       end if;

       -- Código do Serviço Prestado não encontrado
       if rRec.recno_a2b is null then
          perform sys_msg####???(3, 'O código de tributação [' || coalesce(rRec.nfk_cod_trib_mun, '') || '] e serviço [' ||
                                                                  coalesce(rRec.nfk_list_serv, '') || '] ' ||
                                                   'da nota [' || rRec.nfk_nfs_numero || '] não foi encontrada !');
       elsif not isfj_pessoa is null then
          iNotas := iNotas + 1; 
          insert into [(nfk)] ( nfk_status_fat, nfk_nfs_numero, nfk_cod_verif, nfk_nfs_emissao,
                                nfk_rps_numero, szt_serie, nfk_rps_tipo, nfk_rps_emissao,
                                nfk_nat_oper, nfk_reg_esp, nfk_simples, nfk_incentivador,
                                nfk_compet, nfk_vr_servicos, nfk_vr_deducoes, nfk_vr_pis,
                                nfk_vr_cofins, nfk_vr_inss, nfk_vr_ir, nfk_vr_csll,
                                nfk_iss_retido, nfk_vr_iss, nfk_vr_iss_retido,
                                nfk_vr_outras, nfk_vr_b_calculo, nfk_iss_aliq, nfk_vr_liquido,
                                nfk_vr_desc_incond, nfk_vr_desc_cond, nfk_list_serv, a2a_cod,
                                nfk_cod_trib_mun, nfk_discriminacao, nfk_mun_prest_serv,
                                nfk_obra, nfk_art, nfk_pedcancelamento, nfk_data_cancelamento,
                                nfk_situacao, sfj_pessoa, a1_codcli, se2_ctrl )
                       values ( 1, rRec.nfk_nfs_numero, rRec.nfk_cod_verif, rRec.nfk_nfs_emissao,   
                                rRec.nfk_rps_numero, rRec.szt_serie, rRec.nfk_rps_tipo, 
                                rRec.nfk_rps_emissao, rRec.nfk_nat_oper, rRec.nfk_reg_esp,
                                rRec.nfk_simples, rRec.nfk_incentivador,
                                case when not rRec.nfk_compet is null
                                     then cast(rRec.nfk_compet || '01' as timestamp)
                                     else current_timestamp end,
                                rRec.nfk_vr_servicos, rRec.nfk_vr_deducoes, rRec.nfk_vr_pis,
                                rRec.nfk_vr_cofins, rRec.nfk_vr_inss, rRec.nfk_vr_ir,
                                rRec.nfk_vr_csll, rRec.nfk_iss_retido, rRec.nfk_vr_iss,
                                rRec.nfk_vr_iss_retido, rRec.nfk_vr_outras, rRec.nfk_vr_b_calculo,
                                rRec.nfk_iss_aliq, rRec.nfk_vr_liquido, rRec.nfk_vr_desc_incond,
                                rRec.nfk_vr_desc_cond, rRec.nfk_list_serv, rRec.a2a_cod,
                                rRec.recno_a2b, rRec.nfk_discriminacao, rRec.nfk_mun_prest_serv,
                                rRec.nfk_obra, rRec.nfk_art,
                                case when rRec.nfk_pedcancelamento is null
                                      and not rRec.nfk_data_cancelamento is null then 1
                                     else rRec.nfk_pedcancelamento end, rRec.nfk_data_cancelamento,
                                case when rRec.nfk_data_cancelamento is null then 4 else 5 end,
                                isfj_pessoa, isfj_pessoa,
                                mc_00204####???(isfj_pessoa, rRec.nfk_nfs_emissao::date, 1, 1) );
       end if;
   end loop;

   perform sys_msg####???(3, iNotas::varchar || ' nota(s) foram importadas');

   out_res := 1;
End;
$$ language 'plpgsql';
