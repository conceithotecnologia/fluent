/**
   Salva evento no banco de dados

	@author    Ricardo Gonçalves
	@date      29/04/2019
	@trigger

   @param in_servico nome do serviço que precisa ser ativado

   @return 1 em caso de sucesso 0 em outros casos

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso

   26/03/2019  Ricardo Gonçalves
      [*] Recuperação das informações do certificado a partir do repositório
*/
CREATE OR REPLACE FUNCTION sys_00044####???(
   in in_pessoa integer, 
   in in_chdfe varchar,   
   in in_status integer, 
   in in_cstat integer, 
   in in_xmotivo varchar,
   in in_dhregevento timestamp, 
   in in_id varchar, 
   in in_veraplic varchar, 
   in in_nseqevento integer, 
   in in_nsu varchar, 
   in in_xml text,
   in in_nprot varchar,
   in in_tpevento varchar,
   in in_xevento varchar,
   in in_dhrecbto timestamp,
   in in_evento integer)
RETURNS integer AS
$$
BEGIN

   if not exists(
      select 1
        from [(a0z)]
       where a0z_tipo = in_tpevento)
   then
      insert into [(a0z)] (a0z_tipo,    a0z_descri)
           values         (in_tpevento, in_xevento);
   end if;

   if in_nsu = '' then
      in_nsu := null;
   end if;

   -- O campo a0x_status preenchido com 0 indica que o documento está em processamento. 
   -- Quando o monitor finaliza o lote, ele marca todos os documentos com 1 (prontos)
   if not exists(
      select 1     
        from [(a0y)]
       where sfj_pessoa = in_pessoa
         and a0x_chdfe = in_chdfe
         and a0y_nprot = in_nprot) 
   then
      if exists(
         select 1     
         from [(a0x)]
         where sfj_pessoa = in_pessoa
            and a0x_chdfe = in_chdfe)
      then         

         if not exists(
            select 1
              from [(a0y)]
             where recno = in_evento)
         then
            insert into [(a0y)] 
               (sfj_pessoa,   a0x_chdfe,     a0y_status, a0y_cstat, a0y_xmotivo,   a0y_dhregevento, a0y_id, 
               a0y_veraplic, a0y_nseqevento, a0y_nsu,  a0y_xml,     a0y_nprot, a0y_tpevento, a0y_dhrecbto) 
            values 
               (in_pessoa,    in_chdfe,      in_status,  in_cstat, in_xmotivo,     in_dhregevento,   in_id, 
                in_veraplic,  in_nseqevento, in_nsu,     in_xml,   in_nprot,       in_tpevento,      in_dhrecbto);
         else
            update [(a0y)] 
               set a0y_nsu = in_nsu,  a0y_xml = in_xml, a0y_cstat = in_cstat, a0y_nprot = in_nprot, a0y_nseqevento = in_nseqevento, a0y_xmotivo = in_xmotivo
             where recno = in_evento;
         end if;
      end if;
   else
      update [(a0y)] 
         set a0y_nsu = in_nsu,  a0y_xml = in_xml, a0y_cstat = in_cstat 
       where sfj_pessoa = in_pessoa
         and a0x_chdfe = in_chdfe
         and a0y_nprot = in_nprot; 
   end if;

   return 1;
END;
$$
LANGUAGE 'plpgsql' VOLATILE;