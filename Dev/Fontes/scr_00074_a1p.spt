/**
   Trigger de Tela da tabela A1P

	@author    Fabio Carvalho
	@date      07/01/2011
	@trigger

	@param

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso

*/
Create or Replace Function scr_00074_a1p####???()
Returns Integer
As $$
Declare
   cSessao    [(ss029)].session%type;       -- Nome da sessao

   rParametro Record;

   iTabela    Integer;
   iStatus    Integer;
   iTes       Integer;
   iObs       Integer;
   iRem       Integer;
   iRemEnd    Integer;
   iDes       Integer;
   iDesEnd    Integer;
   iPgt       Integer;
   iLote      Integer;
   iConh      Integer;
   iResp      Integer;
   iSegu      Integer;
   iToma      Integer;
   iModal     Integer;
   iLotacao   integer;
   iExp       integer;
   iExpEnd    integer;
   iRec       integer;
   iRecEnd    integer;
   iForma     integer;
   sProduto   varchar;
   sSat       varchar;
   sMunIni    varchar;
   sMunFim    varchar;
Begin
   cSessao := sys_session();

   -- verifica se as configurações estão preenchidas.
   perform mc_01035####???();

   -- recupera valores
   iModal   := sys_042string2####??? ('A1P', 'a1p_modal');
   sSat     := sys_042string2####??? ('A1P', 'at_serie');
   iToma    := sys_042integer2####???('A1P', 'ide_toma');
   iTes     := sys_042integer2####???('A1P', 'f4_tes');
   iResp    := sys_042integer2####???('A1P', 'a1p_respseg');
   iSegu    := sys_042integer2####???('A1P', 'a21_recno');
   iObs     := sys_042integer2####???('A1P', 'z8_codtxt');
   sProduto := sys_042string2####??? ('A1P', 'a1p_produto');
   iLotacao := sys_042integer2####???('A1P', 'a1p_lotacao');
   iRem     := sys_042integer2####???('A1P', 'a1p_remetente');
   iRemEnd  := sys_042integer2####???('A1P', 'a1p_rem_end');
   iDes     := sys_042integer2####???('A1P', 'a1p_destinatario');
   iDesEnd  := sys_042integer2####???('A1P', 'a1p_dest_end');
   iLote    := sys_042integer2####???('A1P', 'a1s_recno');
   iConh    := sys_042integer2####???('A1P', 'a1p_id');
   sMunIni  := sys_042string2####??? ('A1P', 'ide_cmunini');
   sMunFim  := sys_042string2####??? ('A1P', 'ide_cmunfim');
   iExp     := sys_042integer2####???('A1P', 'a1p_expedidor');
   iExpEnd  := sys_042integer2####???('A1P', 'a1p_exp_end');
   iRec     := sys_042integer2####???('A1P', 'a1p_recebedor');
   iRecEnd  := sys_042integer2####???('A1P', 'a1p_rec_end');
   iStatus  := sys_042integer2####???('A1P', 'cstat');

   -- Se Conhecimento/Lote Gerados, nao permite edicao exceto motorista, veiculo atribuido, data entrega e obs
   if iStatus in (100,101) then
      update [(ss042)] set enabled = 2
       where session = cSessao
         and codtable = 'A1P'
         and columnname not in ('a1k_id_new', 'lo8_id_new', 'a1p_entrega_datahora', 'a1p_entrega_obs');
      return 1;
   end if;

   -- recupera valores da tabela de configurações
   select fcc_modal, fcc_tra_sat,     fcc_tomador_padrao, fcc_tra_tes,   z8_codtxt,
          a21_recno, fcc_resp_seguro, fcc_tra_produto,    fcc_lotacao
     from [(fcc)]
     into rParametro;

   -- Modal
   if iModal is null then
      perform sys_042integer_wr####???('A1P', 'a1p_modal', rParametro.fcc_modal);
   end if;

   -- serie do Cte
   if sSat is null then
      perform sys_042string_wr####???('A1P', 'at_serie', rParametro.fcc_tra_sat);
   end if;

   -- Tomador Padrao
   if iToma is null then
      perform sys_042integer_wr####???('A1P', 'ide_toma', rParametro.fcc_tomador_padrao);
   end if;

   -- Tes padrao
   if iTes is null then
      perform sys_042integer_wr####???('A1P', 'f4_tes',  rParametro.fcc_tra_tes);
   end if;

   -- responsavel Pelo seguro
   if iResp is null then
      perform sys_042integer_wr####???('A1P', 'a1p_respseg', rParametro.fcc_resp_seguro);
   end if;

   -- Seguro Padrao
   if iSegu is null then
      perform sys_042integer_wr####???('A1P', 'a21_recno', rParametro.a21_recno);
   end if;

   -- Obs padrao
   if iObs is null then
      perform sys_042integer_wr####???('A1P', 'z8_codtxt', rParametro.z8_codtxt);
   end if;

   -- Produto Preponderante
   if sProduto is null then
      perform sys_042string_wr####???('A1P', 'a1p_produto', rParametro.fcc_tra_produto);
   end if;

   if iRem is not null and iDes is not null then
      -- 0-Remetente
      if iToma = 0 then
         perform sys_042integer_wr####???('A1P', 'a1p_devedor',iRem);
      -- 1-Expedidor
      elsif iToma = 1 then
         perform sys_042integer_wr####???('A1P', 'a1p_devedor',iExp);
      -- 2-Recebedor
      elsif iToma = 2 then
         perform sys_042integer_wr####???('A1P', 'a1p_devedor',iRec);
      -- 3-Destinatario
      elsif iToma = 3 then
         perform sys_042integer_wr####???('A1P', 'a1p_devedor',iDes);
      end if;
   end if;

   -- Indicador de Lotacao
   if iLotacao is null then
      perform sys_042integer_wr####???('A1P', 'a1p_lotacao', rParametro.fcc_lotacao);
   end if;

   -- Propoe Endereco Padrao Remetente
   if iRem is not null and iRemEnd is null then
      iRemEnd := mc_00206####???(iRem);
      perform sys_042integer_wr####???('A1P', 'a1p_rem_end',iRemEnd);
   end if;

   -- Propoe Endereco Padrao Destinatario
   if iDes is not null and iDesEnd is null then
      iDesEnd := mc_00206####???(iDes);
      perform sys_042integer_wr####???('A1P', 'a1p_dest_end',iDesEnd );
   end if;

   -- Propoe Endereco Padrao Expedidor
   if iExp is not null and iExpEnd is null then
      iExpEnd := mc_00206####???(iExp);
      perform sys_042integer_wr####???('A1P', 'a1p_exp_end',iExpEnd );
   end if;

   -- Propoe Endereco Padrao Recebedor
   if iRec is not null and iRecEnd is null then
      iRecEnd := mc_00206####???(iRec);
      perform sys_042integer_wr####???('A1P', 'a1p_rec_end',iRecEnd );
   end if;

   --Recupera Municipio Inicio Prestacao
--   if coalesce(iExpEnd, iExpEnd) is not null then
      select sz9_municipio
        from [(vse2)]
        into sMunIni
       where se2_ctrl  = coalesce(iExpEnd,iRemEnd)
         and a1_codcli = coalesce(iExp,   iRem);
      perform sys_042string_wr####???('A1P', 'ide_cmunini', sMunIni);

--   end if;

   --Recupera Municipio Fim Prestacao
--   if sys_042string2####???('A1P', 'ide_cmunfim') is null and coalesce(iRecEnd,iDesEnd) is not null then
      select sz9_municipio
        from [(vse2)]
        into sMunFim
       where se2_ctrl  = coalesce(iRecEnd,iDesEnd)
         and a1_codcli = coalesce(iRec, iDes);
      perform sys_042string_wr####???('A1P', 'ide_cmunfim', sMunFim);
--   end if;

   -- Habilita Campos se for calculo manual
   iTabela := sys_042integer2####???('A1P', 'a1l_recno');

   -- Recupera Status Conhecimento
   iStatus := sys_042integer2####???('A1P', 'a1p_status');
   if iTabela is not null then

      -- Tipo de Frete (0-Manual 1-Integrada ou 2-Individual)
      select coalesce(a1l.a1l_forma,0)
        into iForma
        from [(a1l)] a1l
       Where a1l.recno = iTabela
         and iStatus in (0,2);

      --0-MANUAL
      if iForma = 0 then   -- Habilita Campos
          update [(ss042)] set enabled = 1
           where codtable = 'A1P'
             and session  = sys_session()
             and columnname in ('a1p_vr_fvalor', 'a1p_vr_fpeso', 'a1p_vr_tde', 'a1p_vr_tas',
                                'a1p_vr_seguro', 'a1p_vr_pedagio', 'a1p_vr_gris');
      --1-integrada ou 2-individual
      else  -- desabilita campos
          update [(ss042)] set enabled = 0
           where codtable = 'A1P'
             and session  = sys_session()
             and columnname in ('a1p_vr_fvalor', 'a1p_vr_fpeso', 'a1p_vr_tde', 'a1p_vr_tas',
                                'a1p_vr_seguro', 'a1p_vr_pedagio', 'a1p_vr_gris');
      end if;
   end if;

   -- Atualiza o Valor Total do Frete
   perform scr_00075_a1p####???();

   return 1;
End;
$$ language plpgsql;