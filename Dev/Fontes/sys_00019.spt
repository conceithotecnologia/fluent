
/**
   Cria um parâmetro de sessão

	@author    Ricardo Gonçalves
	@date      04/08/2015
	@trigger   

   @param in_group código do grupo do parâmetro
   @param in_param nome do parâmetro que deverá ser criado
   @param in_value valor do parâmetro
   
   @return código o grupo de parâmetro criado
   
	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso

*/
create or replace function sys_00019####???(
   in in_group integer,
   in in_param varchar(50),
   in in_value text)
returns integer as
$$
Begin   
   update [(ss116)]
      set text_ = in_value
    where session = sys_session()
      and group_ = in_group
      and param = upper(in_param);
 
   if not Found then
      insert into [(ss116)] (session,       group_,   param,           text_)
                     values (sys_session(), in_group, upper(in_param), in_value);
   end if;

   return 1;
End;
$$
language 'plpgsql';

create or replace function sys_00019####???(
   in in_group integer,
   in in_param varchar(50),
   in in_value varchar(255))
returns integer as
$$
Begin   
   update [(ss116)]
      set string_ = in_value
    where session = sys_session()
      and group_ = in_group
      and param = upper(in_param);
 
   if not Found then
      insert into [(ss116)] (session,       group_,   param,    string_)
                     values (sys_session(), in_group, upper(in_param), in_value);
   end if;

   return 1;
End;
$$
language 'plpgsql';

create or replace function sys_00019####???(
   in in_group integer,
   in in_param varchar(50),
   in in_value integer)
returns integer as
$$
Begin   
   update [(ss116)]
      set integer_ = in_value
    where session = sys_session()
      and group_ = in_group
      and param = upper(in_param);
 
   if not Found then
      insert into [(ss116)] (session,       group_,   param,    integer_)
                     values (sys_session(), in_group, upper(in_param), in_value);
   end if;

   return 1;
End;
$$
language 'plpgsql';

create or replace function sys_00019####???(
   in in_group integer,
   in in_param varchar(50),
   in in_value date)
returns integer as
$$
Begin   
   update [(ss116)]
      set date_ = in_value
    where session = sys_session()
      and group_ = in_group
      and param = upper(in_param);
 
   if not Found then
      insert into [(ss116)] (session,       group_,   param,    date_)
                     values (sys_session(), in_group, upper(in_param), in_value);
   end if;

   return 1;
End;
$$
language 'plpgsql';
 
create or replace function sys_00019####???(
   in in_group integer,
   in in_param varchar(50),
   in in_value numeric)
returns integer as
$$
Begin   
   update [(ss116)]
      set numeric_ = in_value
    where session = sys_session()
      and group_ = in_group
      and param = upper(in_param);
 
   if not Found then
      insert into [(ss116)] (session,       group_,   param,    numeric_)
                     values (sys_session(), in_group, upper(in_param), in_value);
   end if;

   return 1;
End;
$$
language 'plpgsql'; 