/*==================================================================================================================================
  Rotina...: <l> mc_00952 </l>
  --------------------------------------------------------------------------------------------------------------------------------
  Descrição: <d> Exporta dados do faturamento da empresa para sua matriz no exterior  </d>
  --------------------------------------------------------------------------------------------------------------------------------
  Tipo.....: <t> Stored Procedure </t>
  --------------------------------------------------------------------------------------------------------------------------------
  Empresa..: Conceitho Tecnologia
  --------------------------------------------------------------------------------------------------------------------------------
  Autor....: Jurandy da Silva Costa
  --------------------------------------------------------------------------------------------------------------------------------
  Data.....: 06/07/2016 14:00:00                                    Alterado.: 31/10/2016
  --------------------------------------------------------------------------------------------------------------------------------
  Parametros
   [Entrada ]---------------------------------------------------------------------------------------------------------------------
            in_Data_I:       Date                Data inicial para a exportacao
            in_Data_F:       Date                Data final para a exportacao
            in_Inclui_F:     Integer             Inclui Documentos Faturados no Periodo? 0-Nao 1-Sim
            in_Inclui_E:     Integer             Inclui Exportacoes com Data Confirmada? 0-Nao 1-Sim
   [Saida ]-----------------------------------------------------------------------------------------------------------------------
            out_res:         Integer
==================================================================================================================================*/
Create or Replace Function mc_00952####???
( In  in_Data_I     Date,
  In  in_Data_F     Date,
  In  in_Inclui_F   Integer,
  In  in_Inclui_E   Integer,
  in  in_Origem     varchar,
  Out out_res       Integer )
As $$
Declare

-- {Variaveis de uso interno}
   cSessao   [(fsb)].session%type;         -- Sessão atual do usuário
Begin   
	
   if in_Origem <> 'MC_01082' then
      in_Origem = 'mc_00952';
   end if;
   
   -- Recupera a sessao do usuário
   cSessao := sys_session();

   -- Limpa os dados da Sessao antes de montar uma nova selecao
   Delete From [(fsb)] Where session = cSessao;

   -- Transfere os registros selecionados para a tabela temporaria do usuario
   INSERT INTO [(fsb)] (fsb_empresa, fsb_nota, fsb_emissao, fsb_cnpj_cpf, fsb_nome, fsb_estabele,  
            fsb_destino, fsb_cidade, fsb_quantos, fsb_unidade, fsb_unid_inv,  
            fsb_uni_fob_r, fsb_uni_ven_r, fsb_moeda, fsb_cambio, fsb_vlr_func,  
            fsb_ven_func, fsb_uni_fob_d, fsb_uni_ven_d, fsb_tot_fob_r, fsb_tot_ven_r,  
            fsb_tot_fob_d, fsb_tot_ven_d, fsb_produto, fsb_bloom, fsb_malha,  
            fsb_lote, fsb_ati_clie, fsb_uso_clie, fsb_condpag, fsb_tpfrete,  
            fsb_chegada, fsb_embarque, fsb_chegou_ok, fsb_envio_ok,   
            session, fsb_tpdoc, fsb_emprel, fsb_identcon, fsb_pcontato, fsb_scontato, 
            sfm_ender, se2_cep, sfj_fone, sfj_email, sfj_site, z7_descri, 
            fa_condpgto)
   SELECT '04' as empresa, sai.sai_nf, sai.sai_dtemissao, (Case When sfh.sfh_cnpj Is Null Then Case When sfi.sfi_cpf Is Null 
                                                           Then sai.a1_codcli::varchar(6) Else mask_00003((Case When a2k.coduser Is Null 
                                                           Then sfi.sfi_cpf Else '99999999999' End)) End Else mask_00002(sfh.sfh_cnpj) End), 
          (Case When a2k.coduser Is Null Then sfj.sfj_nome Else 'VENDA FUNCIONARIO' End), '1' as estabelecimento, 
          (Case When (sfh.sfh_cnpj Is Null And sfi.sfi_cpf Is Null) Then 'Exportación' Else 'Nacional' End) as destino, 
          ( mc_00209####???(sai.a1_codcli)).municipio_ex, sys_ret_quantos(saj.saj_quantos, sb1.z2_coduni, sb1.b1_coduni, sb1.b1_fator), 0 as unidade, 0 as unidade_inv,
          Round(((saj.saj_total + saj.saj_frete - saj.saj_vlr_icm - saj.saj_vlr_ipi - saj.saj_vlr_pis - saj.saj_vlr_fin) /
          sys_ret_quantos(saj.saj_quantos, sb1.z2_coduni, sb1.b1_coduni, sb1.b1_fator)) - sag.sag_despe_ex, 8) as unitario_fob,
          Round((saj.saj_total + saj.saj_frete - saj.saj_vlr_icm - saj.saj_vlr_ipi - saj.saj_vlr_pis - saj.saj_vlr_fin) / 
          sys_ret_quantos(saj.saj_quantos, sb1.z2_coduni, sb1.b1_coduni, sb1.b1_fator), 8) as unitario_venda, 'BRL' as moeda, 1.00 as cambio,
          Round(((saj.saj_total + saj.saj_frete - saj.saj_vlr_icm - saj.saj_vlr_ipi - saj.saj_vlr_pis - saj.saj_vlr_fin) / 
          sys_ret_quantos(saj.saj_quantos, sb1.z2_coduni, sb1.b1_coduni, sb1.b1_fator)) - sag.sag_despe_ex, 8) as valor_17,
          Round((saj.saj_total + saj.saj_frete - saj.saj_vlr_icm - saj.saj_vlr_ipi - saj.saj_vlr_pis - saj.saj_vlr_fin) / 
          sys_ret_quantos(saj.saj_quantos, sb1.z2_coduni, sb1.b1_coduni, sb1.b1_fator), 8) as valor_18,
          sys_converte_moeda####???(Round((saj.saj_total + saj.saj_frete - saj.saj_vlr_icm - saj.saj_vlr_ipi -
                                           saj.saj_vlr_pis - saj.saj_vlr_fin) /
          saj.saj_quantos, 8) - sag.sag_despe_ex, sai.sai_dtemissao - 1, 'USD', '/', 0, 'C') as valor_19,
          sys_converte_moeda####???(Round((saj.saj_total + saj.saj_frete - saj.saj_vlr_icm - saj.saj_vlr_ipi -
                                           saj.saj_vlr_pis - saj.saj_vlr_fin) /
          saj.saj_quantos, 8), sai.sai_dtemissao - 1, 'USD', '/', 0, 'C') as valor_20,
          Round(saj.saj_total + saj.saj_frete - saj.saj_vlr_icm - saj.saj_vlr_ipi - saj.saj_vlr_pis - saj.saj_vlr_fin -
          (saj.saj_quantos * sag.sag_despe_ex), 8) as valor_21,
          Round(saj.saj_total + saj.saj_frete - saj.saj_vlr_icm - saj.saj_vlr_ipi - saj.saj_vlr_pis - saj.saj_vlr_fin, 8) as valor_22,
          sys_converte_moeda####???((saj.saj_total + saj.saj_frete - saj.saj_vlr_icm - saj.saj_vlr_ipi - saj.saj_vlr_pis - saj.saj_vlr_fin -
          (saj.saj_quantos * sag.sag_despe_ex)), sai.sai_dtemissao - 1, 'USD', '/', 0, 'C') as valor_23, 
          sys_converte_moeda####???((saj.saj_total + saj.saj_frete - saj.saj_vlr_icm - saj.saj_vlr_ipi - saj.saj_vlr_pis - saj.saj_vlr_fin),
          sai.sai_dtemissao - 1, 'USD', '/', 0, 'C') as valor_24,
          sb1.b1_codmatriz, sag.sag_bloom, sag.sag_malha, sag.sag_nrlote, a0k.a0k_descri as coluna_29, a0m.a0m_descri as coluna_30, sai.fa_codcond as coluna_31,
          (Case When (sfh.sfh_cnpj Is Null And sfi.sfi_cpf Is Null) Then saf.a0n_frete Else 'FOB' End) as tipo_frete, 
          (Case When (sfh.sfh_cnpj Is Null And sfi.sfi_cpf Is Null) Then saf.saf_chegada Else Coalesce(saf.saf_chegada, sai.sai_dtemissao) End) as data_chegada, 
          (Case When (sfh.sfh_cnpj Is Null And sfi.sfi_cpf Is Null) Then saf.saf_embarque Else Coalesce(saf.saf_embarque, sai.sai_dtemissao) End) as data_embarque,
          (Case When (sfh.sfh_cnpj Is Null And sfi.sfi_cpf Is Null) Then saf.saf_chegada_ok Else 1 End) as data_chegada_ok,
          (Case When (sfh.sfh_cnpj Is Null And sfi.sfi_cpf Is Null) Then saf.saf_embarque_ok Else 1 End) as data_embarque_ok, 
          cSessao,
          Case When sfh.sfh_cnpj Is Null Then 'CPF' else 'CNPJ' end as fsb_tpdoc,
          Case When (sfj.sfj_nome ilike '%Progel%' or sfj.sfj_nome ilike '%Prodegel%' or sfj.sfj_nome ilike '%Gelco Colombia%') then
          1 else 0 end as fsb_emprel,
          '          ', 
          sa21.sa2_nome,
          substring(sa22.sa2_nome,1,30),
          mc_00265####???(sfj.sfj_pessoa) as sfm_ender, 
          SE2_CEP, 
          coalesce(se2_fone, sfj_fone),
          sfj_email, 
          sfj_site, 
          substring(z7_descri,1,30),
          fa_condpgto
     FROM [(saj)] saj
     JOIN [(sai)] sai
       ON saj.sai_serial = sai.sai_serial
     JOIN [(sfa)] sfa
       on sfa.fa_codcond = sai.fa_codcond
     LEFT JOIN lateral (select sa2_nome from [(sa2)] where a1_codcli = sai.a1_codcli order by recno limit 1) sa21
       on 1 = 1
     LEFT JOIN lateral (select sa2_nome from [(sa2)] where a1_codcli = sai.a1_codcli order by recno desc limit 1) sa22
       on 1 = 1
     JOIN [(se2)] se2
       on se2.se2_ctrl = sai.sai_faturar
     JOIN [(sz9)] sz9
       on se2.sz9_municipio = sz9.sz9_municipio
     JOIN [(sz7)] sz7
       on sz7.z7_uf = sz9.z7_uf
     JOIN [(sfj)] sfj
       ON sai.a1_codcli = sfj.sfj_pessoa  
     LEFT JOIN [(sfi)] sfi
       ON sai.a1_codcli = sfi.sfj_pessoa  
     LEFT JOIN [(a2k)] a2k
       ON a2k.sfj_pessoa = sfi.sfj_pessoa  
     LEFT JOIN [(sfh)] sfh
       ON sai.a1_codcli = sfh.sfj_pessoa  
     JOIN [(sf4)] sf4
       ON saj.f4_tes = sf4.f4_tes
     JOIN [(sb1)] sb1
       ON saj.b1_codpro = sb1.b1_codpro
     JOIN [(a2h)] a2h
       ON sb1.a2h_cod = a2h.a2h_cod
     JOIN [(saf)] saf
       ON sai.sai_recno = saf.recno
     JOIN [(sag)] sag
       ON saf.saf_codped = sag.saf_codped AND saj.b1_codpro = sag.b1_codpro AND saj.saj_recno = sag.recno
     LEFT JOIN [(a0k)] a0k
       ON sag.a0k_codigo = a0k.a0k_codigo
     LEFT JOIN [(a0m)] a0m
       ON sag.a0m_codigo = a0m.a0m_codigo       
    WHERE ((sai.sai_dtemissao > in_Data_I AND sai.sai_dtemissao < in_Data_F AND in_Inclui_F = 1) OR 
           (saf.saf_chegada > in_Data_I AND saf.saf_chegada < in_Data_F AND in_Inclui_E = 1) OR
           (saf.saf_embarque > in_Data_I AND saf.saf_embarque < in_Data_F AND in_Inclui_E = 1)) AND 
           sf4.f4_geradupl = 1 AND a2h.a2h_cod = '04' AND sai.nf0_cod = 100
    UNION ALL
   SELECT '04' as empresa, sal.al_coddoc, sal.al_dtentrada, (Case When sfh.sfh_cnpj Is Null Then Case When sfi.sfi_cpf Is Null Then sai.a1_codcli::varchar(6) Else mask_00003(sfi.sfi_cpf) End Else mask_00002(sfh.sfh_cnpj) End), 
          sfj.sfj_nome, '1' as estabelecimento, (Case When (sfh.sfh_cnpj Is Null And sfi.sfi_cpf Is Null) Then 'Exportación' Else 'Nacional' End) as destino, 
          ( mc_00209####???(sai.a1_codcli)).municipio_ex, sys_ret_quantos(sam.am_qtd, sb1.z2_coduni, sb1.b1_coduni, sb1.b1_fator) * -1, 0 as unidade, 0 as unidade_inv,
          Round((sam.am_total - sam.am_vl_icms - sam.am_vl_ipi - (sam.am_total * (sam.sam_pis + sam.sam_cofins) / 100)) / sys_ret_quantos(sam.am_qtd, sb1.z2_coduni, sb1.b1_coduni, sb1.b1_fator)  - sag.sag_despe_ex, 8) as unitario_fob,
          Round((sam.am_total - sam.am_vl_icms - sam.am_vl_ipi - (sam.am_total * (sam.sam_pis + sam.sam_cofins) / 100)) / sys_ret_quantos(sam.am_qtd, sb1.z2_coduni, sb1.b1_coduni, sb1.b1_fator), 8) as unitario_venda, 
          'BRL' as moeda, 1.00 as cambio,
          Round((sam.am_total - sam.am_vl_icms - sam.am_vl_ipi - (sam.am_total * (sam.sam_pis + sam.sam_cofins) / 100)) / sys_ret_quantos(sam.am_qtd, sb1.z2_coduni, sb1.b1_coduni, sb1.b1_fator) - sag.sag_despe_ex, 8) as valor_17,
          Round((sam.am_total - sam.am_vl_icms - sam.am_vl_ipi - (sam.am_total * (sam.sam_pis + sam.sam_cofins) / 100)) / sys_ret_quantos(sam.am_qtd, sb1.z2_coduni, sb1.b1_coduni, sb1.b1_fator), 8) as valor_18,
          sys_converte_moeda####???(Round((sam.am_total - sam.am_vl_icms - sam.am_vl_ipi - (sam.am_total * (sam.sam_pis + sam.sam_cofins) / 100)) / sam.am_qtd - sag.sag_despe_ex, 8), sal.al_dtentrada - 1, 'USD', '/', 0, 'C') as valor_19,
          sys_converte_moeda####???(Round((sam.am_total - sam.am_vl_icms - sam.am_vl_ipi - (sam.am_total * (sam.sam_pis + sam.sam_cofins) / 100)) / sam.am_qtd, 8), sal.al_dtentrada - 1, 'USD', '/', 0, 'C') as valor_20,
          Round(sam.am_total - sam.am_vl_icms - sam.am_vl_ipi - (sam.am_total * (sam.sam_pis + sam.sam_cofins) / 100) - (sam.am_qtd * sag.sag_despe_ex), 8) * -1 as valor_21,
          Round(sam.am_total - sam.am_vl_icms - sam.am_vl_ipi - (sam.am_total * (sam.sam_pis + sam.sam_cofins) / 100), 8) * -1 as valor_22,
          sys_converte_moeda####???(sam.am_total - sam.am_vl_icms - sam.am_vl_ipi - (sam.am_total * (sam.sam_pis + sam.sam_cofins) / 100) - (sam.am_qtd * sag.sag_despe_ex), sal.al_dtentrada - 1, 'USD', '/', 0, 'C') * -1 as valor_23,
          sys_converte_moeda####???(sam.am_total - sam.am_vl_icms - sam.am_vl_ipi - (sam.am_total * (sam.sam_pis + sam.sam_cofins) / 100), sal.al_dtentrada - 1, 'USD', '/', 0, 'C') * -1 as valor_24,
          sb1.b1_codmatriz, sag.sag_bloom, sag.sag_malha, sag.sag_nrlote, a0k.a0k_descri as coluna_29, a0m.a0m_descri as coluna_30, sai.fa_codcond as coluna_31,
          (Case When (sfh.sfh_cnpj Is Null And sfi.sfi_cpf Is Null) Then saf.a0n_frete Else 'FOB' End) as tipo_frete, 
          sal.al_dtentrada as data_chegada, sal.al_dtentrada as data_embarque, 1 as data_chegada_ok, 1 as data_embarque_ok, 
          cSessao ,
          Case When sfh.sfh_cnpj Is Null Then 'CPF' else 'CNPJ' end as fsb_tpdoc,
          Case When (sfj.sfj_nome ilike '%Progel%' or sfj.sfj_nome ilike '%Prodegel%' or sfj.sfj_nome ilike '%Gelco Colombia%') then
          1 else 0 end as fsb_emprel,
          '          ', 
          sa21.sa2_nome,
          substring(sa22.sa2_nome,1,30),
          mc_00265####???(sfj.sfj_pessoa) as sfm_ender, 
          SE2_CEP, 
          coalesce(se2_fone, sfj_fone),
          sfj_email, 
          sfj_site, 
          substring(z7_descri,1,30),
          fa_condpgto
     FROM [(saj)] saj
     JOIN [(sai)] sai
       ON saj.sai_serial = sai.sai_serial
     JOIN [(sfa)] sfa
       on sfa.fa_codcond = sai.fa_codcond
     LEFT JOIN lateral (select sa2_nome from [(sa2)] where a1_codcli = sai.a1_codcli order by recno limit 1) sa21
       on 1 = 1
     LEFT JOIN lateral (select sa2_nome from [(sa2)] where a1_codcli = sai.a1_codcli order by recno desc limit 1) sa22
       on 1 = 1
     JOIN [(se2)] se2
       on se2.se2_ctrl = sai.sai_faturar
     JOIN [(sz9)] sz9
       on se2.sz9_municipio = sz9.sz9_municipio
     JOIN [(sz7)] sz7
       on sz7.z7_uf = sz9.z7_uf
     JOIN [(sfj)] sfj
       ON sai.a1_codcli = sfj.sfj_pessoa  
     LEFT JOIN [(sfi)] sfi
       ON sai.a1_codcli = sfi.sfj_pessoa  
     LEFT JOIN [(sfh)] sfh
       ON sai.a1_codcli = sfh.sfj_pessoa  
     JOIN [(sal)] sal
       ON sai.sai_serial = sal.sai_serial
     JOIN [(sam)] sam
       ON sal.al_serial = sam.al_serial AND saj.b1_codpro = sam.b1_codpro
     JOIN [(sf4)] sf4
       ON saj.f4_tes = sf4.f4_tes
     JOIN [(sb1)] sb1
       ON saj.b1_codpro = sb1.b1_codpro
     JOIN [(a2h)] a2h
       ON sb1.a2h_cod = a2h.a2h_cod
     JOIN [(saf)] saf
       ON sai.sai_recno = saf.recno
     JOIN [(sag)] sag
       ON saf.saf_codped = sag.saf_codped AND saj.b1_codpro = sag.b1_codpro
     LEFT JOIN [(a0k)] a0k
       ON sag.a0k_codigo = a0k.a0k_codigo
     LEFT JOIN [(a0m)] a0m
       ON sag.a0m_codigo = a0m.a0m_codigo           
    WHERE sal.sai_serial Is Not Null AND (sal.al_dtentrada > in_Data_I AND sal.al_dtentrada < in_Data_F AND in_Inclui_F = 1)  
      AND sf4.f4_geradupl = 1 AND a2h.a2h_cod = '04' AND sal.al_status = 2
    ORDER BY 3, 2;
	
--    PERFORM mc_01253####???();
    
    out_res := 1;
End;
$$ language 'plpgsql';
