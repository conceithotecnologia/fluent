/*==================================================================================================================================
  Rotina...: <l> mc_00527 </l>
  --------------------------------------------------------------------------------------------------------------------------------
  Descrição: <d> Atualiza movimento de caixa consolidado FA5 pelo movimento da empresa FA2 </d>
  --------------------------------------------------------------------------------------------------------------------------------
  Tipo.....: <t> Stored Procedure </t>
  --------------------------------------------------------------------------------------------------------------------------------
  Empresa..: MultCont Informática
  --------------------------------------------------------------------------------------------------------------------------------
  Autor....: Jurandy da Silva Costa
  --------------------------------------------------------------------------------------------------------------------------------
  Data.....: 18/09/2004 16:30:00                                  Alterado.: 29/05/2010
  --------------------------------------------------------------------------------------------------------------------------------
==================================================================================================================================*/
Create or Replace Function mc_00527####???() Returns trigger As $$
Declare

-- {Variáveis de uso interno}
   nEntradas      [(fa2)].fa2_valor%type;       -- Valor das entradas
   nSaidas        [(fa2)].fa2_valor%type;       -- Valor das saidas
   iFilial        [(fa5)].fa8_filial%type;      -- Código da filial
   iRecno01       [(fa2)].fa2_recno%type;       -- Numero do registro
   iRecno02       [(fa2)].recno%type;           -- Numero do registro
   iRecno03       [(fa2)].recno%type;           -- Numero do registro
   cOrigem        [(fa2)].fa2_origem%type;      -- Origem do lançamento
   iFc2_Tipo      [(fc2)].fc2_tipo%type;        -- Tipo do lançamento
   cNomeCli       [(fc2)].fc2_cli_for%type;     -- Descricao da entrada ou saida
   cCompete       [(fc2)].fc2_compete%type;     -- Competencia para o fluxo de caixa

   iAltera        Integer;

Begin
   If tg_op = 'INSERT' Then
      cOrigem  := new.fa2_origem;
      iRecno02 := new.recno;
   Else
      If tg_op = 'UPDATE' Then
         -- Verifica se o indicador de contabilizado foi alterado e retorna
         If (old.fa2_contabilizado Is Null And new.fa2_contabilizado Is Not Null) Or
            (old.fa2_contabilizado <> new.fa2_contabilizado) Then
            Return New;
         End If;
      End If;
      cOrigem  := old.fa2_origem;
      iRecno02 := old.recno;
   End If;
   -- Fixa o código da filial
   iFilial := ???;
   If tg_op <> 'DELETE' Then
      If tg_op = 'INSERT' Then
         -- Verifica se já existe um lançamento
         Select recno Into iRecno01
           From [(fa5)]
          Where fa8_filial = iFilial
            And fa5_origem = new.fa2_origem
            And fa5_recno  = new.fa2_recno
            And fa5_data   = new.fa2_data
            And fa5_tipo   = new.fa2_tipo;
         -- Inclui registro com dados do cabeçalho para uso nos rateios
         Insert Into [(faj)] ( faj_origem,   faj_recno,     faj_historico,
                               faj_data,     faj_opera,     faj_conta )
              Values         ( 'FA2',        new.recno,     new.fa2_historico,
                               new.fa2_data, new.fa2_tipo, 'Caixa ' || new.fa1_caixa );
      Else
         -- Verifica se já existe um lançamento
         Select recno Into iRecno01
           From [(fa5)]
          Where fa8_filial = iFilial
            And fa5_origem = old.fa2_origem
            And fa5_recno  = old.fa2_recno
            And fa5_data   = old.fa2_data
            And fa5_tipo   = old.fa2_tipo;
         -- Se mudou data ou tipo de operação atualiza rateios para forçar novo acumulado
         If (old.fa2_data <> new.fa2_data)          Or (old.fa2_historico <> new.fa2_historico) Or
            (old.fa2_tipo < 3 And new.fa2_tipo > 2) Or (old.fa2_tipo > 2 And new.fa2_tipo < 3)  Or
            (old.fa1_caixa <> new.fa1_caixa) Then
            -- Atualiza registro com dados do cabeçalho para uso nos rateios
            Update [(faj)]
               Set faj_data  = new.fa2_data, faj_historico = new.fa2_historico,
                   faj_opera = new.fa2_tipo, faj_conta     = 'Caixa ' || new.fa1_caixa
             Where faj_origem = 'FA2'
               And faj_recno  = new.recno;
            If sys_month(old.fa2_data) <> sys_month(new.fa2_data) Or
               sys_year(old.fa2_data)  <> sys_year(new.fa2_data) Or (old.fa2_tipo <> new.fa2_tipo) Then
               -- Altera o Status dos rateios para permitir a manutenção
               Update [(fao)]
                  Set fao_rateio_e = 0, fao_rateio_c = 0
                Where fao_origem_c = 'FA2'
                  And fao_recno_c  = new.recno;

               -- Atualiza Rateio por Centro de Custo
               Update [(fas)]
                  Set recno = recno
                Where fas_origem = 'FA2'
                  And fas_recno  = new.recno;
               -- Atualiza Rateio por Centro de Custo
               Update [(fav)]
                  Set recno = recno
                Where fav_origem = 'FA2'
                  And fav_recno  = new.recno;

               -- Altera o Status dos rateios para indicar final da manutenção
               Update [(fao)]
                  Set fao_rateio_e = 1,
                      fao_rateio_c = (Case When fao_ccusto < 1 Then 0 Else 1 End)
                Where fao_origem_c = 'FA2'
                  And fao_recno_c  = new.recno;
            End If;
         End If;
      End If;
      If iRecno01 Is Null Then
         -- Cria o movimento de caixa consolidado
         Insert Into [(fa5)] ( fa8_caixa,     fa5_data,      fa5_origem,     fa5_historico,     fa5_desdobra,
                               fa5_tipo,      fa5_docto,     fa5_recno,      fa5_observar,      f1_codnat,
                               fa8_filial,    fa5_valor,     sfj_pessoa,     fa5_nome )
              Values         ( new.fa1_caixa, new.fa2_data,  new.fa2_origem, new.fa2_historico, new.fa2_desdobra,
                               new.fa2_tipo,  new.fa2_docto, new.fa2_recno,  new.fa2_observar,  new.f1_codnat,
                               iFilial,       new.fa2_valor, new.sfj_pessoa, new.fa2_nome );
      Else
         -- Atualiza o movimento de caixa consolidado
         Update [(fa5)]
            Set fa8_caixa = new.fa1_caixa, fa5_data      = new.fa2_data,
                fa5_valor = new.fa2_valor, fa5_historico = new.fa2_historico,
                fa5_docto = new.fa2_docto, fa5_observar  = new.fa2_observar,
                fa5_tipo  = new.fa2_tipo,  sfj_pessoa    = new.sfj_pessoa,
                fa5_nome  = new.fa2_nome,  fa5_desdobra  = new.fa2_desdobra,
                f1_codnat = new.f1_codnat
          Where recno = iRecno01;
      End If;
   Else
      -- Exclui registro com dados do cabeçalho para uso nos rateios
      Delete From [(faj)]
       Where faj_origem = 'FA2'
         And faj_recno  = old.recno;
      -- Exclui movimento de caixa consolidado
      Delete From [(fa5)]
       Where fa8_filial = iFilial
         And fa5_origem = old.fa2_origem
         And fa5_recno  = old.fa2_recno
         And fa5_data   = old.fa2_data
         And fa5_tipo   = old.fa2_tipo;
   End If;
   -- Insere ou atualiza registro nas tabela do Fluxo de Caixa quando a origem for o próprio Caixa
   If cOrigem = 'FA2' Then

      -- Insere registro Flag do detalhamento por Natureza Financeira
      Perform mc_setflag####???( 'FA2', iRecno02);
      If tg_op <> 'DELETE' Then
         -- Verifica a existência de lancamento no Fluxo
         Select recno Into iRecno03
           From [(fc2)]
          Where fc2_origem = 'FA2'
            And fc2_recno  = new.recno;
            
         new.fa2_recno  = new.recno;
         
         -- Inicializa os valores para o Fluxo de Caixa
         nEntradas := 0;
         nSaidas   := 0;
         -- Define o tipo de operação para o Fluxo de Caixa
         -- Se tipo no Movimento Bancario < 3 = Entrada, > 2 = Saída
         If new.fa2_tipo < 3 Then
            iFc2_Tipo := 2; -- Outras Entradas
            nEntradas := new.fa2_valor;
            cNomeCli  := 'OUTRAS ENTRADAS NO CAIXA';
         Else
            iFc2_Tipo := 8; -- Outras Saídas
            nSaidas   := new.fa2_valor;
            cNomeCli  := 'OUTRAS SAIDAS NO CAIXA';
         End If;
         cCompete := sys_compete(new.fa2_data);
      End If;
      If tg_op = 'DELETE' Then
         -- Exclui registro na tabela Fluxo de Caixa
         Delete From [(fc2)]
          Where fc2_origem = 'FA2'
            And fc2_recno  = old.recno;
      ElsIf iRecno03 Is Null Then
         -- Insere registro na tabela Fluxo de Caixa
         Insert Into [(fc2)] ( fc2_origem,   fc2_recno,     fc2_tipo,    fc2_compete, fa1_caixa,
                               fc2_data,     fc2_entrada,   fc2_saida,   fc2_status,  fc2_historico ,
                               fc2_cli_for,  fc2_vbaixa,    fc2_dbaixa,  fc2_dfluxo )
              Values         ( 'FA2',        new.recno,     iFc2_Tipo,   cCompete,    new.fa1_caixa,
                               new.fa2_data, nEntradas,     nSaidas,     1,           new.fa2_historico,
                               cNomeCli,     new.fa2_valor, new.fa2_data, new.fa2_data );
      Else
         -- Atualiza registro na tabela Fluxo de Caixa
         Update [(fc2)]
            Set fc2_compete = cCompete,     fa1_caixa     = new.fa1_caixa,
                fc2_data    = new.fa2_data, fc2_entrada   = nEntradas,
                fc2_saida   = nSaidas,      fc2_historico = new.fa2_historico,
                fc2_cli_for = cNomeCli,     fc2_vbaixa    = new.fa2_valor,
                fc2_tipo    = iFc2_Tipo,    fc2_dbaixa    = new.fa2_data,
                fc2_dfluxo  = new.fa2_data
          Where recno = iRecno03;
      End If;
      If tg_op <> 'DELETE' Then
         iAltera := 0;
         If new.fa2_origem = 'FA2' And new.fa2_desdobra = 0 And tg_op = 'UPDATE' Then
            If old.fa2_valor <> new.fa2_valor And
               (Select fa4_valor From [(fa4)]
                 Where fa2_origem = new.fa2_origem And fa2_recno = new.fa2_recno) <> new.fa2_valor Then
               iAltera := 1;
            End If;
            If old.f1_codnat <> new.f1_codnat And
               (Select f1_codnat From [(fa4)]
                 Where fa2_origem = new.fa2_origem And fa2_recno = new.fa2_recno) <> new.f1_codnat Then
               iAltera := 1;
            End If;
         End If;
         -- Se lançamento avulso com apenas uma natureza atualiza detalhe quando atualizado cabeçalho
         If new.fa2_origem = 'FA2' And new.fa2_desdobra = 0 And (tg_op = 'INSERT' Or iAltera = 1) Then
            -- Verifica se o lançamento tem apenas uma natureza financeira
            -- Se tiver apenas uma natureza inclui um registro de detalhe
            If new.f1_codnat Is Null Then
               Raise '[[ATENÇÃO. Faltou informar a natureza financeira do lançamento. Favor verificar.]]';
            End If;
            If new.fa2_valor = 0.00 Or new.fa2_valor Is Null Then
               Raise '[[ATENÇÃO. Faltou informar o valor do lançamento. Favor verificar.]]';
            End If;
            If (Select Count(*) From [(fa4)] Where fa2_origem = new.fa2_origem And fa2_recno = new.fa2_recno) < 1 Then
               Insert Into [(fa4)] ( fa2_origem, fa2_recno,     fa2_data,     fa2_tipo,     f1_codnat,     fa4_valor, fa4_recno )
                    Values         ( 'FA2',      new.fa2_recno, new.fa2_data, new.fa2_tipo, new.f1_codnat, new.fa2_valor, new.recno );
            End If;
            If tg_op = 'UPDATE' Then
               If old.f1_codnat <> new.f1_codnat Or old.fa2_valor <> new.fa2_valor Then
                  -- Altera o Status dos rateios para permitir a manutenção
                  Update [(fao)]
                     Set fao_rateio_e = 0, fao_rateio_c = 0
                   Where fao_origem_c = 'FA2'
                     And fao_recno_c  = new.recno;
                  -- Atualiza a natureza financeira e o valor no detalhe
                  Update [(fa4)]
                     Set f1_codnat = new.f1_codnat, fa4_valor = new.fa2_valor
                   Where fa2_origem = new.fa2_origem
                     And fa2_recno  = new.fa2_recno;
                  -- Altera o Status dos rateios para indicar final da manutenção
                  Update [(fao)]
                     Set fao_rateio_e = 1,
                         fao_rateio_c = (Case When fao_ccusto < 1 Then 0 Else 1 End)
                   Where fao_origem_c = 'FA2'
                     And fao_recno_c  = new.recno;
               End If;
            End If;
         
         elsif new.fa2_origem = 'FA2' And tg_op = 'UPDATE' Then
            Update [(fa4)]
               Set fa2_tipo  = new.fa2_tipo,
                   fa2_data  = new.fa2_data
             Where fa2_origem = new.fa2_origem
               And fa2_recno  = new.fa2_recno;
         End If;
      End If;
      -- Deleta registro Flag do detalhamento por Natureza Financeira
      Perform mc_delflag####???( 'FA2', iRecno02);
   End If;

   -- Atualiza tabela de saldo dos Caixas FA3 a partir da manutenção em FA2
   If tg_op = 'INSERT' Then
      If new.fa2_tipo < 3 Then
         nEntradas := new.fa2_valor;
         nSaidas   := 0;
      Else
         nEntradas := 0;
         nSaidas   := new.fa2_valor;
      End If;
      Perform mc_00539####???(new.fa1_caixa, new.fa2_data, nEntradas, nSaidas, 0);
   ElsIf tg_op = 'UPDATE' Then
      If old.fa2_tipo < 3 Then
         nEntradas := (old.fa2_valor * -1);
         nSaidas   := 0;
      Else
         nEntradas := 0;
         nSaidas   := (old.fa2_valor * - 1);
      End If;
      Perform mc_00539####???(old.fa1_caixa, old.fa2_data, nEntradas, nSaidas, 0);
      If new.fa2_tipo < 3 Then
         nEntradas := new.fa2_valor;
         nSaidas   := 0;
      Else
         nEntradas := 0;
         nSaidas   := new.fa2_valor;
      End If;
      Perform mc_00539####???(new.fa1_caixa, new.fa2_data, nEntradas, nSaidas, 0);
   Else
      If old.fa2_tipo < 3 Then
         nEntradas := (old.fa2_valor * -1);
         nSaidas   := 0;
      Else
         nEntradas := 0;
         nSaidas   := (old.fa2_valor * -1);
      End If;
      Perform mc_00539####???(old.fa1_caixa, old.fa2_data, nEntradas, nSaidas, 0);
   End If;

   If tg_op <> 'DELETE' Then
      --Atualiza o Movimento de Caixa
      perform mc_00457####???(new.fa2_data, case when tg_op = 'INSERT' then new.fa2_data else old.fa2_data end);

      Return new;
   Else
      --Atualiza o Movimento de Caixa
      perform mc_00457####???(old.fa2_data, old.fa2_data);

      Return old;
   End If;
End;
$$ language plpgsql;
