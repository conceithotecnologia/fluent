/**
   Rotina Para Gerar E-Mails marcados

	@author    Fabio Carvalho
	@date      25/01/2017
	@trigger

	@param

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
*/
Create or Replace Function mc_00991####???
(  in  pData  Date,
   in  pQual  integer,
   out outres integer )
As $$
Declare
   iItem      [(ss118)].recno%type;
   iFilial    [(ss063)].filial%type;
   vsubject   [(ss108)].subject%type;   -- Título do e-mail
   rFilial    Record;
   rRec       Record;
   mailhead   text;                     -- Cabeçalho do e-mail
   mailfooter text;
   mailbody   text;
   vfrom_     text;                     -- vfrom_ := 'MONITOR' || trim(to_char(ifil, '999'));
   sType      varchar;

Begin
   --Verifica se Foi Marcado Algum Contrato de Invoice Para Calcular a Variacao Cambial
   if not exists (select 1
                    from [(ss029)]
                   where session  = sys_session()
                     and codform  = 'VSA2TM0_01'
                     and codtable = 'VSA2TM0') then
      raise '[[ATENÇÃO. Não foi marcado nenhum registro para processamento. Verifique!]]';
   end if;

   --Teste de Filial
   iFilial := sys_filial####???();
   if iFilial is null then
      raise '[[Não foi possível obter o código da filial para sessão ativa (%).]]', sys_session();
   end if;

   -- recupera informacoes da filial corrente
   select razao, tel, home, ss063_email_financ as email, smtp_login
     into rFilial
     from [(ss063)]
    where filial = iFilial;

   --Teste de parametro x email
   if rFilial.email is null then
      raise '[[ATENÇÃO. Não foi definido o email do financeiro. Verifique.]]';
   end if;

   --Executa Loop dos Registros Selecionados
   for rRec in (select c.tm0_assunto, b.sfj_nome, b.sa2_email, b.sa2_nome, b.sfj_pessoa, b.recno, c.tm0_tipo,
                       b.sa2_depto,   c.tm0_tipo, c.tm0_corpo
                  from [(ss029)]   a
                  join [(vsa2tm0)] b on b.recno = a.recfile
                  join [(tm0)]     c on c.recno = pQual
                 where session = sys_session()
                   and a.codtable = 'VSA2TM0'
                   and a.codform  = 'VSA2TM0_01') loop

       --cabecalho do Email      --Tipo de ContentType    0-Plano 1-html
       if rRec.tm0_tipo = 0 then
          sType := 'text/plain';
          mailhead := '';
       else
          sType := 'text/html';
          mailhead := doc_00001();
       end if;

       --Titulo do Email
       vsubject :=  rRec.tm0_assunto;

       --Monta Corpo do Email
       if rRec.tm0_tipo = 0 then
          mailfooter := 'Prezado(a) ' || rRec.sfj_nome || chr(13) || chr(10) || rRec.tm0_corpo;
       else
          mailfooter := '<p> Prezado(a) ' || rRec.sfj_nome || ', </p>';
          mailfooter := mailfooter || rRec.tm0_corpo || doc_00002();
       end if;

       mailbody := mailhead || mailfooter;

       --Proximo registro de email
       iItem := nextval('[(ss108)]_recno_seq'::regclass);

       -- Cria a mensagem
       insert into [(ss108)] (from_user,          contenttype, charset_,     type_, subject,  message,  recno,
                              codtable,           src_recno,   schedule)
                      values (rfilial.smtp_login, sType,       'iso-8859-1', 2,     vsubject, mailbody, iItem,
                              'SA2',              rRec.recno,  pData );
       --Inserir o Contato
       insert into [(ss109)](ss108_recno,   to_,            type_,    to_name)
                     values (iItem,         rRec.sa2_email, 1,        rRec.sa2_nome);

       -- Configura a mensagem para ser transmitida
       update [(ss108)] set status = 1
        where recno = iItem;

   end loop;

   outres := 1;
End;
$$ language plpgsql;
