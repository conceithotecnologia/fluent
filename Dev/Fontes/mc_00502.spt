/**
   Processamento da ordem de movimentação

	@author    Ricardo Gonçalves
	@date      27/03/2014 14:24
	@trigger   A49 B IUD

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
   27/05/2015 Ricardo Gonçalves.
      [+] Inclusão do tratamento de reservas.
      
   01/09/2015 Ricardo Gonçalves.
      [+] Inclusão do tratamento a registros vindos do pedido de venda A5W.

   21/07/2016 Jurandy da Silva Costa.
      [+] Inclusão do tratamento a registros vindos da tela de caldeação SEN.

   04/08/2017 Ricardo Gonçalves
      [*] Troca dos parâmetros na rotina mc_00047####??? por um tipo composto                        
      
   14/02/2018  Ricardo Gonçalves
      [*] Remoção da verificação da data de conciliação do estoque
*/
Create or Replace Function mc_00502####???() 
Returns trigger As 
$$
Declare
   r           record;
   rt          record;
   ra5r        record;   
   vdescricao  ss009.descricao%type;   
   dData       date;
   bSetStatus  boolean;
   xconv       econv;
   rmov        mov;
   ifilial     [(ss063)].filial%type;
Begin
   -- Fluent NF-e não suporta movimentação de estoque
   if sys_mod####???() = 'TN' then
      raise  '[[Movimentação de estoque não suportada para este tipo de produto.]]';
   end if;


   if tg_op = 'DELETE' then
      -- baixando reservas
	  
      if old.a49_tipo = 2 and old.a49_estado <> 2 then

         -- Informações básicas da movimentação de reserva
         rmov.material = old.b1_codpro; 
         rmov.unidade = old.z2_coduni; 		   
         rmov.tabela = 'A49'; 
         rmov.data := old.a49_data;
         rmov.recno = old.recno;
         rmov.pessoa = old.sfj_pessoa; 
         rmov.ficha = old.a4i_tipo;
         rmov.qtd := old.a49_qtd;
         rmov.operac := 2;
		   rmov.evento := 0;
        
         perform mc_00968####???(rmov);
		
         if rmov.data >= '2018-05-03' then
            rmov.tabela := 'A5R';
         end if;	
		
         rmov.mfilial := 0;
		
         for ra5r in ( 
            select b3_endereco, sd3_lote, a44_numser, a5r_qtd, recno from [(a5r)] where a49_recno = old.recno )
         loop
            -- Estorno da reserva
            rmov.ender  := ra5r.b3_endereco;
            rmov.lote   := ra5r.sd3_lote;
            rmov.numser := ra5r.a44_numser;
            rmov.qtd    := ra5r.a5r_qtd;
            rmov.mlote  := sys_iif(ra5r.sd3_lote is null, 0, 1);
            rmov.mender := sys_iif(ra5r.b3_endereco is null, 0, 1);
            rmov.mser   := sys_iif(ra5r.a44_numser is null, 0, 1);
            
            if rmov.data >= '2018-05-03' then
               rmov.recno := ra5r.recno;
            end if;
         
            perform mc_00968####???(rmov);
            
         end loop;
      end if;
      return old;
   else
      if tg_op != 'INSERT' then
         if old.a49_estado = 2 and mc_getflag####???('A49', old.recno) != 1 then
            return new;
         end if;
      end if;      
   end if;
   
   new.a49_competencia := to_char(new.a49_data, 'yyyymm');
   
   select p.b1_nome, pc.sbf_estocavel
     into r
     from [(sb1)] p
          join [(sbf)] pc
            on pc.b1_codpro = p.b1_codpro          
    where p.b1_codpro = new.b1_codpro; 
    
   if r.sbf_estocavel = 0 then
      raise '[[O material % - % não é estocável, portanto, não pode gerar ordens de movimentação.]]', 
         new.b1_codpro, r.b1_nome;
   end if;
   
   -- Preenche o custo unitário
   if new.a49_custou = 0 then
      new.a49_custou := mc_00550####???(new.b1_codpro, new.z2_coduni, new.a49_data);
   end if;
   
   if new.a49_custou = 0 then
      raise '[[Não foi possível obter o custo unitário para o material "% - %", unidade "%", para data "%"]]', 
         new.b1_codpro, trim(r.b1_nome), new.z2_coduni, new.a49_data;
   end if;
   
   -- Valida unidade de medida
   if ck_00001####???(new.b1_codpro, new.z2_coduni) = 0 then
      raise  '[[Unidade de medida "%" inválida para o material % - %.]]', new.z2_coduni, new.b1_codpro, r.b1_nome;
   end if;

   if tg_op = 'INSERT' then      
      bSetStatus := true;
      -- Valida a origem de dados
      if not new.codtable in ('SAM', 'SAJ', 'TLE', 'SCY', 'A1B', 'SDN', 'A27', 'A28', 'SD1', 'SD2', 'SE7', 'A5W', 'SEN', 'TG8', 'SDY', 'SED') then
         select descricao
           into vdescricao
           from ss009
          where codtable = new.codtable;
          
         raise '[[A rotina (%) não pode movimentar estoque]]', vdescricao;             
      end if;
      
      new.a49_recno := coalesce(new.a49_recno, new.recno);
      
      if new.codtable = 'SAM' then -- documento de entrada
         new.sam_recno := new.a49_recno;               
      elsif new.codtable = 'SAJ' then
         new.saj_recno := new.a49_recno;
      elsif new.codtable = 'TLE' then 
         new.tle_recno := new.a49_recno;
      elsif new.codtable = 'SCY' then 
         new.scy_recno := new.a49_recno;
      elsif new.codtable = 'A1B' then 
         new.a1b_recno := new.a49_recno;
      elsif new.codtable = 'SDN' then 
         new.sdn_recno := new.a49_recno;
      elsif new.codtable = 'A27' then 
         new.a27_recno := new.a49_recno;
      elsif new.codtable = 'A28' then
         new.a28_recno := new.a49_recno;
      elsif new.codtable = 'SD1' then
         new.sd1_recno := new.a49_recno;   
      elsif new.codtable = 'SD2' then
         new.sd2_recno := new.a49_recno;
      elsif new.codtable = 'SE7' then
         new.se7_recno := new.a49_recno;
      elsif new.codtable = 'A5W' then
         new.a5w_recno := new.a49_recno;
      elsif new.codtable = 'SDY' then
         new.sdy_recno := new.a49_recno;
      elsif new.codtable = 'SEN' then -- tela de caldeação
         new.sen_recno := new.a49_recno;
      elsif new.codtable = 'TG8' then -- fechamento de caixa Disk Gas
         new.tg8_recno := new.a49_recno;
      elsif new.codtable = 'SED' then -- fechamento de caixa Disk Gas
         new.sed_recno := new.a49_recno;
      end if;         
      
      new.a49_estado := coalesce(new.a49_estado, 0);
      new.a49_emissao := sys_timestamp();      
      new.a49_recno_item := coalesce(new.a49_recno_item, new.recno);      
      new.a49_data := coalesce(new.a49_data, sys_getdatabase####???());
      new.a3k_tipo := mc_00479####???(new.codtable, new.f8_cfop);         
      new.a49_qtd := mc_00304####???(new.z2_coduni, new.a49_qtd);      
   else         
      bSetStatus := new.a4i_tipo != old.a4i_tipo;
      
      -- Altera estado da ordem para "1.Separando"
      if (new.a49_qtdsep != old.a49_qtdsep) and
         old.a49_estado = 0
      then
         new.a49_estado := 1;
      end if;

      -- Aguardando para separando
      if new.a49_estado = 1 and old.a49_estado = 0 then
         new.a49_inicio := sys_timestamp();
      end if;

      if new.a49_qtd = new.a49_qtdsep then            
         new.a49_estado := 2;
      end if;

      -- Separando para finalizado
      if new.a49_estado = 2 and old.a49_estado != 2 then         
         new.a49_termino := sys_timestamp();
      end if;      
   end if;

   -- Atualizando valor da operação
   new.a49_custo := new.a49_qtd * new.a49_custou;
   new.a49_valor := new.a49_qtd * new.a49_valoru;
   
   xconv.material := new.b1_codpro;
   xconv.unidade := new.z2_coduni;
   xconv.qtd := new.a49_qtd;
   xconv.custo := new.a49_custou;
   xconv.valor := new.a49_valoru;

   -- Atualiza quantidades e custos para saldo
   xconv := mc_00047####???(xconv);

   new.a49_qtdu1 := xconv.qtd_u1;
   new.a49_custou_u1 := xconv.custo_u1;
   new.a49_valoru_u1 := xconv.valor_u1;     
   new.a49_custot_u1 := new.a49_qtdu1 * new.a49_custou_u1;  
   new.a49_valort_u1 := new.a49_qtdu1 * new.a49_valoru_u1;
   
   new.a49_qtdu2 := xconv.qtd_u2;
   new.a49_custou_u2 := xconv.custo_u2;
   new.a49_valoru_u2 := xconv.valor_u2;   
   new.a49_custot_u2 := new.a49_qtdu2 * new.a49_custou_u2;   
   new.a49_valort_u2 := new.a49_qtdu2 * new.a49_valoru_u2;  
   
   if bSetStatus then
      -- Preechimento da indicação se o custo deve ser agregado ao custo do estoque atual
      select a4i_tipoest
        into rt
        from [(a4i)] 
       where a4i_tipo = new.a4i_tipo;
            
      new.a49_3os := coalesce(rt.a4i_tipoest, new.a49_3os);

      -- Preenche o código da pessoa que está com o material quando não for movimento de terceiros
      if (new.sfj_pessoa is null and rt.a4i_tipoest < 2) or rt.a4i_tipoest = 0 then
         ifilial := sys_filial####???();
         select sfj_pessoa
           into new.sfj_pessoa
           from [(ss063)]
          where filial = ifilial; 
      end if;
      
      -- Tratamento de estoque de terceiros
      if new.a49_3os != 0 then
         if new.a49_tipo = 3 then
            raise '[[A ordem de movimentação % não pode ser gravada porque o estoque de terceiros não da suporte a registros do tipo 3 - Inventário]]',
               new.recno;
         end if;
         
         -- Entrada / Devolução
         -- 0 Estoque próprio em meu poder
         -- 1 Estoque próprio em poder de terceiros
         -- 2 Estoque de terceiros em meu poder
        
         -- Verifica se o código do terceiro foi informado
         if new.sfj_pessoa is null then
            raise '[[A ordem de movimentação % não pode ser gravada porque o código do terceiro não foi informado!]]',
               new.recno;
         end if;

         -- Entrada / Remessa
         if new.a49_tipo = 1 and new.a49_3os = 2 then
            new.a49_saldo_u1 := new.a49_qtdu1;
            new.a49_saldo_u2 := new.a49_qtdu2;
            new.a49_saldor_u1 := 0;            
            new.a49_saldor_u2 := 0;
         end if;
         
         -- Retorno / Devolução
         if new.a49_tipo = 2 and new.a49_3os = 2 then
            new.a49_saldo_u1 := 0;
            new.a49_saldor_u1 := 0;
            new.a49_saldo_u2 := 0;
            new.a49_saldor_u2 := 0;
         end if;
      end if;
   end if;
   
   return new;
END;
$$
LANGUAGE 'plpgsql' VOLATILE;