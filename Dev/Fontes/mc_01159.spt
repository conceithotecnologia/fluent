/**
   Estoque - Atualização do arquivos de saldos diários por lote e endereço

	@author    Ricardo Gonçalves
	@date      29/05/2018
	@trigger   
   
   @param in_pessoa código do proprietário do movimento de estoque   
   @param in_material código do material que será reprocessado
   @param in_lote código do lote
   @param in_ender código do endereço
   @param in_data data inicial para o reprocessamento.   

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
*/
CREATE OR REPLACE FUNCTION mc_01159####???(
   in_pessoa integer,
   in_material varchar,
   in_lote integer,
   in_ender varchar,
   in_data date)
RETURNS integer AS
$$
Declare
   xCur     refcursor;
   r        record;
   r17      [(e17)]%rowtype;      
   bFound   boolean;
BEGIN    
   delete 
     from [(e17)]
    where sfj_pessoa = in_pessoa
      and b1_codpro = in_material
      and sd3_lote = in_lote
      and b3_endereco = in_ender
      and e17_data >= in_data;

   open xCur for
      select e26_data, e26_tipo, e26_qtd_u1, e26_qtd_u2, e26_competencia
        from [(e26)]
       where sfj_pessoa = in_pessoa
         and b1_codpro = in_material
         and sd3_lote = in_lote
         and b3_endereco = in_ender
         and e26_data >= in_data
         and e26_evento >= 0
       order by e26_data, e26_tipo;

   fetch xcur into r;
   bFound := FOUND;

   r17.e17_data := r.e26_data;
   r17.e17_qtde_u1 := 0; r17.e17_qtde_u2 := 0;
   r17.e17_qtds_u1 := 0; r17.e17_qtds_u2 := 0;

   while bFound loop
      if r.e26_tipo = 1 then
         -- Entrada
         r17.e17_qtde_u1 := r17.e17_qtde_u1 + r.e26_qtd_u1;
         r17.e17_qtde_u2 := r17.e17_qtde_u2 + r.e26_qtd_u2;
      else
         -- Saída
         r17.e17_qtds_u1 := r17.e17_qtds_u1 + r.e26_qtd_u1;
         r17.e17_qtds_u2 := r17.e17_qtds_u2 + r.e26_qtd_u2;
      end if;

      fetch xcur into r;
      bFound := FOUND;

      -- Criando linha de saldo
      if r.e26_data <> r17.e17_data or not bFound then
         insert into [(e17)]
            (sfj_pessoa,      b1_codpro,       sd3_lote, b3_endereco,  e17_data,     e17_qtde_u1,     e17_qtde_u2,
             e17_qtds_u1,     e17_qtds_u2,     e17_competencia)
         values
            (in_pessoa,       in_material,     in_lote,  in_ender,     r17.e17_data, r17.e17_qtde_u1, r17.e17_qtde_u2,
             r17.e17_qtds_u1, r17.e17_qtds_u2, r17.e17_competencia);

         r17.e17_qtde_u1 := 0; r17.e17_qtde_u2 := 0;
         r17.e17_qtds_u1 := 0; r17.e17_qtds_u2 := 0;
         r17.e17_data := r.e26_data;
      end if;
   end loop;

   close xcur;

   return 1;
END;
$$
  LANGUAGE 'plpgsql' VOLATILE;