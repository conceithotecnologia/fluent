/**
   Envio de e-mail do boleto como anexo

	@author    Gabriel Montes
	@date      01/12/2014
	@function

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso

   04/05/2015 10:00:00  v2    Fabio Carvalho.
      [*] Inclusão de verificação se todos os titulos tem a conta corrente informada

   09/05/2015 18:45:00  v3    Wagner Mobile Costa
      [*] Inclusão de verificação se todos os titulos tem a conta corrente informada

*/
Create or Replace Function mc_00051####???
( in  pNotificar integer,
  out out_res    integer )
As $$
Declare
   iFilial     [(ss063)].filial%type;    -- Recebe a filial
   rFilial     record;
   rRec        record;
   rTit        record;
   rContatos   record;
   vfrom_      text;                     -- vfrom_ := 'MONITOR' || trim(to_char(ifil, '999'));
   mailhead    text;                     -- Cabeçalho do e-mail
   mailfooter  text;
   mailbody    text;
   vsubject    [(ss108)].subject%type;   -- Título do e-mail
   iItem       [(ss108)].recno%type;     -- Item
   in_data     timestamp;
   vTabela     varchar(30);
   vDir        Varchar(007);
   vTitREP     varchar(100);
   vDirFile    Varchar(255);
   vBranch     Varchar(004);
   iMaxParce   integer;
   in_id       varchar(50);
   iFcrItem    [(fcr)].fcr_item%type;    -- Item
begin
   --Verifica se Houve Algum registro Marcado
   if not exists(
      select 1    
        from [(ss029)] s29
        join [(san)] san on s29.recfile = san.recno
         and exists(select 1 from [(sa2)] sa2
                     where sa2.a1_codcli = san.a1_codcli
                       and sa2.sa2_mail_boleto = 1
                       and sa2.sa2_ativo = 1)
       where s29.session = sys_session()
         and s29.codtable = 'SAN')
   then
      raise '[[ATENÇÃO. Não foi marcado nenhum registro para envio de e-mail do boleto. Verifique!!]]';
   end if;

   --Teste de Filial
   iFilial := sys_filial####???();
   if iFilial is null then
      raise '[[Não foi possível obter o código da filial para sessão ativa (%).]]', sys_session();
   end if;

   -- recupera informacoes da filial corrente
   select razao, tel, home, ss063_email_financ as email, smtp_login
     into rFilial
     from [(ss063)]
    where filial = iFilial;

   --Teste de parametro x email
   if rFilial.email is null then
      raise '[[ATENÇÃO. Não foi definido o email do financeiro. Verifique.]]';
   end if;

   --Verifica se Todos os Titulos Possuem c/c Digitados
   if exists (select 1
                from [(ss029)] s29
                join [(san)] san on s29.recfile = san.recno
               where san.ak_cc is null
                 and session = sys_session()
                 and s29.codtable = 'SAN') then
      raise '[[ATENÇÃO. Há título(s) selecionado(s) sem a conta de cobrança.]]';
   end if;
   
   --Verifica se Todos os Titulos Possuem c/c Digitados
   if exists (select 1
                from [(ss029)] s29
                    join [(san)] san 
                      on s29.recfile = san.recno
                    left join [(se2)] se2
                      on se2.a1_codcli = san.a1_codcli
               where s29.codtable = 'SAN'
                 and session = sys_session()
                 and (se2_ctrl is null or se2_vigencia >= an_emissao)) then
      raise '[[ATENÇÃO. Verifique, pois há clientes sem endereço cadastrado ou com vigência posterior a emissão do título.]]';
   end if;

   vfrom_  := 'MONITOR' || trim(to_char(iFilial, '999'));
   vBranch := ####;

   -- =================================================================================================================
   -- Cabeçalho do e-mail
   -- =================================================================================================================
   mailhead:= '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"> ';
   mailhead:= mailhead|| '<html><header>';
   mailhead:= mailhead|| '<META http-equiv=Content-Type content="text/html; charset=iso-8859-1">';
   mailhead:= mailhead|| '<style type="text/css">';
   mailhead:= mailhead|| ' body {font-family: arial, helvetica, serif;}';
   mailhead:= mailhead|| 'td {display: table-cell; vertical-align: middle;}';
   mailhead:= mailhead|| '.titulo {font-size: medium; font-weight: bold; padding: 0.5%; border: 1px solid #FF9933;}';
   mailhead:= mailhead|| '.secao {font-size: medium;  font-style:italic; color: #FFFFFF; background: #FF9933; padding: 0.4em 0.4em 0.4em 0.4em;}';
   mailhead:= mailhead|| '.campo {font-size: xx-small; background: #FFCC99; border: 1px solid #FF9933; padding: 0.4em 0.4em 0.4em 0.4em;}';
   mailhead:= mailhead|| '.campo_centro {font-size: xx-small; background: #FFCC99; border: 1px solid #FF9933; padding: 0.4em 0.4em 0.4em 0.4em; text-align:center;}';
   mailhead:= mailhead|| '.conteudo {font-size: x-small; background: #FFFFFF; border: 1px solid #FF9933; padding: 0.4em 0.4em 0.4em 0.4em;}';
   mailhead:= mailhead|| '.conteudo_centro {font-size: xx-small; background: #FFFFFF; border: 1px solid #FF9933; padding: 0.4em 0.4em 0.4em 0.4em; text-align:center;}';
   mailhead:= mailhead|| '.conteudo_justificado {font-size: x-small; background: #FFFFFF; border: 1px solid #FF9933; padding: 0.4em 0.4em 0.4em 0.4em; text-align:justify; white-space: pre;}';
   mailhead:= mailhead|| '.centro {text-align:center;}';
   mailhead:= mailhead|| '.esquerda {text-align:left;}';
   mailhead:= mailhead|| '.direita {text-align:right;}';
   mailhead:= mailhead|| '.justificado {text-align:justify;}';
   mailhead:= mailhead|| '</style>';
   mailhead:= mailhead|| '</header><body>';

   in_data  := current_date::timestamp;

   --Porquice? Gero 1o os PDF dos boletos para monitor disparar impressao antes de anexar no email
   for rRec in (select san.an_codtit, san.an_parce, san.recno
                  from [(ss029)] s29
                  join [(san)]   san on s29.recfile = san.recno
                 where session = sys_session()
                   and s29.codtable = 'SAN') loop

       --Anexa o Arquivo
       select max(an_parce)
         into iMaxParce
         from [(san)] san
        where an_codtit = rRec.an_codtit;

       in_id    := 'Boleto_' || rRec.an_codtit || '_' || rRec.an_parce || '_' || iMaxParce;
       vDirFile := '_' || vBranch || '\_' || sys_strzero(iFilial, 3) || '\Boletos\' ||
                   sys_year(in_data)::varchar(4) || '\' ||
                   sys_strzero(sys_month(in_data), 2) || '-' ||
                   sys_monthname(sys_month(in_data)) || '\' || in_id || '.pdf';

       --gera relatorio do boleto para arquivo
       insert into [(ss136)] (report, filename, print_to_file, print_to_device, estado, descri, codtable, ss136_recno)
                     values  (446,    vDirFile, 1,             0,               1,      in_id,  'SAN',    rRec.recno);

   end loop;





   -- Executa Loop dos registros Selecionados
   for rRec in (select san.an_codtit, san.an_parce, san.a1_codcli, san.recno, san.an_emissao, san.an_vencto, san.an_saldo,
                       sfj.sfj_nome,  coalesce(san.an_digitavel,'') as an_digitavel
                  from [(ss029)] s29
                  join [(san)] san on s29.recfile    = san.recno
                  join [(sfj)] sfj on sfj.sfj_pessoa = san.a1_codcli
                 where session = sys_session()
                   and s29.codtable = 'SAN') loop

       --Anexa o Arquivo
       select max(an_parce)
         into iMaxParce
         from [(san)] san
        where an_codtit = rRec.an_codtit;

       in_id    := 'Boleto_' || rRec.an_codtit || '_' || rRec.an_parce || '_' || iMaxParce;
       vDirFile := '_' || vBranch || '\_' || sys_strzero(iFilial, 3) || '\Boletos\' ||
                   sys_year(in_data)::varchar(4) || '\' ||
                   sys_strzero(sys_month(in_data), 2) || '-' ||
                   sys_monthname(sys_month(in_data)) || '\' || in_id || '.pdf';

       --Titulo do Email
       vsubject :=  'Boleto ' || rRec.an_codtit || ' - ' || rFilial.razao || ' - Vecto: ' || to_char(rRec.an_vencto, 'DD/MM/YYYY');

       --Monta Corpo do Email
       mailfooter := ' ';
       mailfooter := mailfooter || '<h4 class="secao">Este e-mail &eacute; enviado autom&aacute;ticamente e N&Atilde;O deve ser respondido!</h4>';
       mailfooter := mailfooter || '<p> Prezado(a) ' || rRec.sfj_nome || ', </p>';
       mailfooter := mailfooter || '<p> Segue boleto de cobrança conforme dados abaixo e,</p>';
       mailfooter := mailfooter || '<p> j&aacute; est&aacute; de acordo com as normas do Banco Central (inclusive DDA): </p>';

       --dados do Titulo
       mailfooter := mailfooter || '<table>';
       mailfooter := mailfooter || '<tr>';
       mailfooter := mailfooter || '<td class="campo_centro">Titulo</td>';
       mailfooter := mailfooter || '<td class="campo_centro">Parcela</td>';
       mailfooter := mailfooter || '<td class="campo_centro">Emiss&atilde;o</td>';
       mailfooter := mailfooter || '<td class="campo_centro">Vencimento</td>';
       mailfooter := mailfooter || '<td class="campo_centro">Valor R$</td>';

       if rRec.an_digitavel <> '' then
          mailfooter := mailfooter || '<td class="campo_centro">Linha Digit&aacute;vel</td>';
       end if;
       mailfooter := mailfooter || '</tr>';

       mailfooter := mailfooter || '<tr>';
       mailfooter := mailfooter || format('<td class="conteudo_centro">%s</td>', rRec.an_codtit);
       mailfooter := mailfooter || format('<td class="conteudo_centro">%s</td>', rRec.an_parce);
       mailfooter := mailfooter || format('<td class="conteudo_centro">%s</td>', to_char(rRec.an_emissao, 'DD/MM/YYYY'));
       mailfooter := mailfooter || format('<td class="conteudo_centro">%s</td>', to_char(rRec.an_vencto,  'DD/MM/YYYY'));
       mailfooter := mailfooter || format('<td class="conteudo_centro">%s</td>', mask_00006(rRec.an_saldo));

       if rRec.an_digitavel <> '' then
          mailfooter := mailfooter || format('<td class="conteudo_centro">%s</td>', rRec.an_digitavel);
       end if;
       mailfooter := mailfooter || '</tr>';

       --Rodape de Assinatura
       mailfooter := mailfooter || '</table>';
       mailfooter := mailfooter || '<br></br>';
       mailfooter := mailfooter || '<br> Sem mais, </br>';
       mailfooter := mailfooter || '<br> </br>';
       mailfooter := mailfooter || '<br> Atenciosamente, </br>';
       mailfooter := mailfooter || '<br> </br>';
       mailfooter := mailfooter || '<br> Departamento Financeiro </br>';
       mailfooter := mailfooter || '<br> Telefone: '            || rFilial.tel   || '</br>';
       mailfooter := mailfooter || '<br class="right"><strong>' || rFilial.razao || '</br>';
       mailfooter := mailfooter || '<br>'                       || rFilial.home  || '</br>';
       mailfooter := mailfooter || doc_00002();

        -- Início do html
       mailbody := '';
       mailbody := mailhead || mailfooter;

       --Proximo registro de email
       iItem := nextval('[(ss108)]_recno_seq'::regclass);

       -- Cria a mensagem
       insert into [(ss108)] (from_user,  contenttype, charset_,     type_, subject,  message,  recno, codtable, src_recno)
                      values ('MONITOR1', 'text/html', 'iso-8859-1', 2,     vsubject, mailbody, iItem, 'SAN',    rRec.recno);

       for rContatos in (select sa2.sa2_email, sa2.sa2_nome
                           from [(sa2)] sa2
                          where sa2.a1_codcli       = rRec.a1_codcli
                            and sa2.sa2_mail_boleto = 1
                            and sa2.sa2_ativo       = 1) loop

           -- Inserindo contato
         insert into [(ss109)](ss108_recno,   to_,                 type_,    to_name)
                       values (iItem,         rContatos.sa2_email, 1,        rContatos.sa2_nome);

           --Insere Registro no Historico do Titulo
         perform sys_log####???('SAN', rRec.recno, format('Enviado boleto para ' ||
                                rContatos.sa2_nome || ' - ' || rContatos.sa2_email ||
                                ' - Vecto: ' || to_char(rRec.an_vencto, 'DD/MM/YYYY')));
       end loop;

       --Envia email ao proprio financeiro
       insert into [(ss109)](ss108_recno,   to_,                 type_,    to_name)
                     values (iItem,         rFilial.email,       1,        'Financeiro');

--     vTabela  := 'SAN';
--     vDir     := 'Boletos';
--     vTitREP  := 'Boleto ' || rRec.recno;

       insert into [(ss110)] (ss108_recno, contenttype,       attach_name,     attach,   obj_id,     session,
                              codform,                        codtable,        src_recno)
                      values (iItem,       'application/pdf', in_id || '.pdf', vDirFile, '00008830', sys_session(),
                              'CONTAS_RECEBER_ATIVOS',        'SAN',           rRec.recno);

       -- Configura a mensagem para ser transmitida
       update [(ss108)] set status = 1
        where recno = iItem;

   end loop;

   --Verificacao da Notificacao do Email de Vencimento
   if pNotificar = 1 then
       --Titulo do Email
       vsubject :=  'Aviso de Vencimento de Boleto de ' || rFilial.razao;

       for rTit in (select san.an_codtit, san.an_parce, san.an_emissao, san.an_vencto, san.an_valor,
                           sa2.sa2_email, sa2.sa2_nome, sfj.sfj_nome,   san.recno,     san.an_saldo,
                           coalesce(san.an_digitavel,'') as an_digitavel
                      from [(ss029)] s29
                      join [(san)]   san on san.recno = s29.recfile
                      join [(sa2)]   sa2 on sa2.a1_codcli  = san.a1_codcli and sa2.sa2_mail_boleto = 1
                      join [(sfj)]   sfj on sfj.sfj_pessoa = san.a1_codcli
                     where session = sys_session()
                       and s29.codtable = 'SAN') loop

           --Verifica se já esta no balde e nao gera email
           if not exists (select 1
                            from [(ss108)]
                           where codtable  = 'SAN'
                             and src_recno = rTit.recno
                             and status    = 1) then

              --Monta Corpo do Email
              mailfooter := ' ';
              mailfooter := mailfooter || '<h4 class="secao">Este e-mail &eacute; enviado autom&aacute;ticamente e N&Atilde;O deve ser respondido!</h4>';
              mailfooter := mailfooter || '<p> Prezado(a) ' || rTit.sfj_nome || ', </p>';
              mailfooter := mailfooter || '<p> Serve o presente e-mail para lembra-lo do vencimento de nosso boleto, conforme abaixo, </p>';
              mailfooter := mailfooter || '<p> j&aacute; est&aacute; de acordo com as normas do Banco Central (inclusive DDA): </p>';
              mailfooter := mailfooter || '<table>';
              mailfooter := mailfooter || '<tr>';
              mailfooter := mailfooter || '<td class="campo_centro">Titulo</td>';
              mailfooter := mailfooter || '<td class="campo_centro">Parcela</td>';
              mailfooter := mailfooter || '<td class="campo_centro">Emiss&atilde;o</td>';
              mailfooter := mailfooter || '<td class="campo_centro">Vencimento</td>';
              mailfooter := mailfooter || '<td class="campo_centro">Valor R$</td>';
              mailfooter := mailfooter || '<td class="campo_centro">Linha Digitavel</td>';
              mailfooter := mailfooter || '</tr>';

              mailfooter := mailfooter || '<tr>';
              mailfooter := mailfooter || format('<td class="conteudo_centro">%s</td>', rTit.an_codtit);
              mailfooter := mailfooter || format('<td class="conteudo_centro">%s</td>', rTit.an_parce);
              mailfooter := mailfooter || format('<td class="conteudo_centro">%s</td>', to_char(rTit.an_emissao, 'DD/MM/YYYY'));
              mailfooter := mailfooter || format('<td class="conteudo_centro">%s</td>', to_char(rTit.an_vencto,  'DD/MM/YYYY'));
              mailfooter := mailfooter || format('<td class="conteudo_centro">%s</td>', mask_00006(rTit.an_saldo));
              mailfooter := mailfooter || format('<td class="conteudo_centro">%s</td>', rTit.an_digitavel);
              mailfooter := mailfooter || '</tr>';


              --Rodape de Assinatura
              mailfooter := mailfooter || '</table>';
              mailfooter := mailfooter || '<br></br>';
              mailfooter := mailfooter || '<br> Sem mais, </br>';
              mailfooter := mailfooter || '<br> </br>';
              mailfooter := mailfooter || '<br> Atenciosamente, </br>';
              mailfooter := mailfooter || '<br> </br>';
              mailfooter := mailfooter || '<br> Departamento Financeiro </br>';
              mailfooter := mailfooter || '<br> Telefone: '            || rFilial.tel   || '</br>';
              mailfooter := mailfooter || '<br class="right"><strong>' || rFilial.razao || '</br>';
              mailfooter := mailfooter || '<br>'                       || rFilial.home  || '</br>';
              mailfooter := mailfooter || doc_00002();

              -- Início do html
              mailbody := '';
              mailbody := mailhead || mailfooter;

              --Proximo registro de email
              iItem := nextval('[(ss108)]_recno_seq'::regclass);

              -- Cria a mensagem
              insert into [(ss108)] (from_user,          contenttype, charset_,     type_, subject,  message,  recno,
                                     codtable,           src_recno)
                             values (rfilial.smtp_login, 'text/html', 'iso-8859-1', 2,     vsubject, mailbody, iItem,
                                     'NFK',              rTit.recno);
              --Insere o Destinatario
              insert into [(ss109)](ss108_recno,   to_,            type_, to_name)
                            values (iItem,         rTit.sa2_email, 1,     rTit.sa2_nome);

              --Envia email ao proprio financeiro
              insert into [(ss109)](ss108_recno,   to_,                 type_,    to_name)
                            values (iItem,         rFilial.email,       1,        'Financeiro');

              -- Configura a mensagem para ser transmitida
              update [(ss108)] set status = 1, schedule = rTit.an_vencto - interval '72 hours'
               where recno = iItem;

              -- Insere registro no historico do titulo
              perform sys_log####???('SAN', rTit.recno, format('Enviado email automatico de lembrete para ' ||
                                     rTit.sa2_nome || ' - ' || rTit.sa2_email));
           end if;

       end loop;
   end if;

   --desmarca registros Marcados
   delete from [(ss029)] where session = sys_session();

   out_res := 1;
End;
$$
language plpgsql;