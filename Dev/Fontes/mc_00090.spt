/**
   Retorna a quantidade para unidade informada

   Autor	   Ricardo Gonçalves
   Data     06/05/2008 11:33:26

   Param    ab1_codpro     Código do produto
   Param    aunidade_ent   Unidade de entrada - valor fornecido nesta unidade
   Param    aunidade_sai   Unidade de saída - valor retornado nesta unidade
   Param    aqtd           Quantidade fornecida
   Param    aQtdCst        Quantidade retonada

	Histórico
	--------------------------------------------------------------------------------------------------------------------
	11/12/2006 18:03:59 v1.1  Ricardo Gonçalves.
      [*] Inclusão deste cabeçalho.
      
   04/08/2017 16:05  Ricardo Gonçalves
      [*] Troca dos parâmetros na rotina mc_00047####??? por um tipo composto           
*/
Create or Replace Function mc_00090####???(  
   ab1_codpro  varchar,
   aunidade_ent varchar,
   aunidade_sai varchar,
   aqtd  numeric)
Returns numeric(18, 4) As
$$
Declare
   xconv econv;    
   idx   integer;
Begin
   xconv.material := ab1_codpro;
   xconv.unidade := aunidade_ent;
   xconv.qtd := aqtd;
   
   -- Caso a unidade de saída não seja informada retorna a quantidade informada
   if aunidade_sai is null then
      return 0;
   end if;

   select case when z2_coduni = aunidade_sai then 1
               when b1_coduni = aunidade_sai then 2
          else
            null
          end
     into idx
     from [(sb1)]
    where b1_codpro = ab1_codpro;

   if idx is null or not FOUND then
      raise '[[Não foi possível fazer a conversão entre as unidades % para % do produto %. Verifique se a unidades são válidas para o produto.]]', aunidade_ent, aunidade_sai, ab1_codpro;
   end if;

   xconv := mc_00047####???(xconv);
   Return sys_iif(idx = 1, xconv.qtd_u1, xconv.qtd_u2);
End
$$
language plpgsql;