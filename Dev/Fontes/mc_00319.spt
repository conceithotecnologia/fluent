/**
   Rotina que avalia se a data para faturamento atende o critério de faturamento cadastrada para o cliente 

   @author    Wagner Mobile Costa
   @date      21/04/2011 12:00:00
   @function
   
   @param     in_dt_faturar  = Indica a data base para seleção das OS´s a serem faturadas, irá respeitar o critério
                               definido em SA8.A8_PERFATOS
              in_fat_todas   = Indica que todas as OS´S com estágio de executadas podem ser faturadas (a03_etapa = 2)                       
              in_a8_perfatos = Periodo para faturamento do cliente             
                               0=Diário (Todos os Dias), 1=Semanal (Toda Segunda-Feira), 2=Quinzenal (16 do próprio Mes e 01 do Próximo Mes) e
                               3=Mensal (Dia 1 do próximo mes)                       
 
   Histórico
   ---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso

   22/07/2011 12:00     v2    Wagner Mobile Costa
      [-] Corrigir formato de verificação de datas

   22/07/2011 12:00     v3    Wagner Mobile Costa
      [-] Bug 843 - Corrigir teste para faturamento de OS da segunda quinzena e mensal

   18/08/2011 17:00     v4    Wagner Mobile Costa
      [-] Bug 843 - Corrigir teste para separação de faturamento da primeira ou segunda quinzena

   02/01/2013 13:00     v5    Wagner Mobile Costa
      [-] Atendimento 1659 - Corrigir teste para faturamento da segunda quinzena ou mensal utilizando o operador inverval
*/
Create or Replace Function mc_00319(in in_emissao date,
                                    in in_fat_todas integer,
                                    in in_dt_faturar date,
                                    in in_a8_perfatos integer)
Returns integer
As
$$
Declare
   iReturn integer;
begin
   iReturn := 0;

   -- Faturar todas as OS´S executadas ou periodo de faturamento diario
   -- Periodo de faturamento semanal (Toda Segunda-Feira) e Quinzenal (Dia 16) ou Mensal/Quinzenal (Dia 01)
   -- in_a8_perfatos -> 0-Diário
   --                   1-Semanal
   --                   2-Quinzenal
   --                   3-Mensal

   if in_fat_todas = 1 or in_a8_perfatos = 0 or
     (in_a8_perfatos = 1 and sys_month(in_dt_faturar) = sys_month(in_emissao) and sys_year(in_dt_faturar) = sys_year(in_emissao) and
                             sys_parte_data(in_dt_faturar, 2) = 1) or
     (in_a8_perfatos = 2 and sys_month(in_dt_faturar) = sys_month(in_emissao) and sys_year(in_dt_faturar) = sys_year(in_emissao) and
                             sys_parte_data(in_emissao, 1) <= 15 and sys_parte_data(in_dt_faturar, 1) = 16) or
     (in_a8_perfatos = 2 and sys_left(in_dt_faturar::varchar(10), 7) = sys_left((in_emissao::date + interval '1 month')::varchar(10), 7) and
                             sys_parte_data(in_emissao, 1) >= 16 and sys_parte_data(in_dt_faturar, 1) = 1) or
     (in_a8_perfatos = 3 and sys_left(in_dt_faturar::varchar(10), 7) = sys_left((in_emissao::date + interval '1 month')::varchar(10), 7) and 
                             sys_parte_data(in_dt_faturar, 1) = 1) then
      iReturn := 1;
   end if;
   
   return iReturn;
End;
$$
language plpgsql;