/*============================================================================
  Empresa..: MultCont Informática
  Descrição: Impressao da Nota Fiscal - Fluent Light     
  Autor....: Fabio Carvalho
  Data.....: 17/04/2007           
  ---------------|------------------------------------------------------------
  out_res        | 0 - Falha / 1 - Sucesso
  ============================================================================*/
Create or Replace Function mc_01010####???
(  in nNFInicial Integer,
  out out_res    Integer )
As $$
Declare
   xCur                RefCursor;
   xCurItem            RefCursor;
   xCurVecto           RefCursor;
   xCurCF              RefCursor;
   cSessao             [(ss029)].session%type;         -- Nome da sessao
   
   itlc_numero         [(tlc)].tlc_numero%type;        -- numero do processo
   itlc_nota           [(tlc)].tlc_nota%type;          -- numero da nota
   itlc_nota_          [(tlc)].tlc_nota%type;          -- numero da nota para reemissao
   stlc_serie          [(tlc)].tlc_serie%type;         -- numero da serie
   stlc_serie_int      [(tlc)].tlc_serie_int%type;     -- codigo da serie interno
   if4_tes             [(tlc)].f4_tes%type;            -- numero da TES     
   ia1_codcli          [(tlc)].a1_codcli%type;         -- codigo do cliente 
   dtlc_dt_nota        [(tlc)].tlc_dt_nota%type;       -- data da nota      
   dtlc_dt_saida       [(tlc)].tlc_dt_saida%type;      -- data da saida      
   stlc_s_pedido       [(tlc)].tlc_s_pedido%type;      -- seu pedido       
   stlc_n_pedido       [(tlc)].tlc_n_pedido%type;      -- nosso pedido       
   ia7_codvend         [(tlc)].a7_codvend%type;        -- codigo do vendedor
   sz8_codtxt_1        [(tlc)].z8_codtxt_1%type;       -- observacao no corpo-1
   sz8_codtxt_2        [(tlc)].z8_codtxt_2%type;       -- observacao no corpo-2
   stlc_observac       [(tlc)].tlc_observac%type;      -- observacao
   ntlc_vr_produtos    [(tlc)].tlc_vr_produtos%type;   -- valor dos produtos
   ntlc_base_icms      [(tlc)].tlc_base_icms%type;     -- valor base do icms
   ntlc_vr_icms        [(tlc)].tlc_vr_icms%type;       -- valor do icms     
   ntlc_vr_ipi         [(tlc)].tlc_vr_ipi%type;        -- valor do ipi      
   ntlc_vr_frete       [(tlc)].tlc_vr_frete%type;      -- valor do frete   
   ntlc_vr_seguro      [(tlc)].tlc_vr_seguro%type;     -- valor do seguro    
   ntlc_out_desp       [(tlc)].tlc_out_desp%type;      -- valor de outras despesas
   ntlc_vr_servicos    [(tlc)].tlc_vr_servicos%type;   -- valor dos servicos 
   ntlc_base_iss       [(tlc)].tlc_base_iss%type;      -- valor base do iss 
   ntlc_vr_iss         [(tlc)].tlc_vr_iss%type;        -- valor do iss    
   ntlc_vr_total       [(tlc)].tlc_vr_total%type;      -- valor total da nf
   iab_codtrans        [(tlc)].ab_codtrans%type;       -- codigo do transportador
   stlc_t_frete        [(tlc)].tlc_t_frete%type;       -- tipo de frete
   stlc_veic_placa     [(tlc)].tlc_veic_placa%type;    -- placa do veiculo  
   stlc_veic_uf        [(tlc)].tlc_veic_uf%type;       -- uf da placa       
   itlc_quant          [(tlc)].tlc_quant%type;         -- quantidade         
   stlc_especie        [(tlc)].tlc_especie%type;       -- especie          
   stlc_marca          [(tlc)].tlc_marca%type;         -- marca              
   stlc_num_pac        [(tlc)].tlc_num_pac%type;       -- numero de pacotes  
   ntlc_peso_bruto     [(tlc)].tlc_peso_bruto%type;    -- peso bruto         
   ntlc_peso_liquido   [(tlc)].tlc_peso_liquido%type;  -- peso liquido
   itlc_quant_2        [(tlc)].tlc_quant_2%type;       -- quantidade-2
   stlc_especie_2      [(tlc)].tlc_especie_2%type;     -- especie          
   stlc_marca_2        [(tlc)].tlc_marca_2%type;       -- marca              
   stlc_num_pac_2      [(tlc)].tlc_num_pac_2%type;     -- numero de pacotes  
   ntlc_peso_bruto_2   [(tlc)].tlc_peso_bruto_2%type;  -- peso bruto         
   ntlc_peso_liquido_2 [(tlc)].tlc_peso_liquido_2%type;-- peso liquido
   itlc_recno          [(tlc)].recno%type;             -- recno
   itlc_faturar        [(tlc)].tlc_faturar%type;     -- endereco de faturamento  
          
   sf8_cfop            [(sf8)].f8_cfop%type;           -- codigo da cfop    
   sf8_descri          [(sf8)].f8_descri%type;         -- descricao da cfop
   
   sRazao              [(sfj)].sfj_nome%type;          -- razao social
   sCnpj               varchar(18);                    -- cnpj
   sIe                 varchar(25);                    -- Inscricao estadual

   sCep                [(se2)].se2_cep%type;         -- cep
   sEndereco           [(se2)].se2_ender%type;       -- endereco
   sNumero             [(se2)].se2_num%type;         -- numero
   sCompl              [(se2)].se2_compl%type;       -- complemento
   sBairro             [(se2)].se2_bairro%type;      -- bairro
   sCidade             [(sz9)].sz9_descri%type;      -- cidade
   sEstado             [(sz7)].z7_uf%type;           -- estado
   sFone               [(se2)].se2_fone%type;        -- telefone
          
   sTra_nome           [(sfj)].sfj_nome%type;         -- Nome Transportadora
   sTra_ender          [(se2)].se2_ender%type;        -- endereco
   sTra_num            [(se2)].se2_num%type;          -- numero
   sTra_cidade         [(sz9)].sz9_descri%type;       -- cidade
   sTra_estado         [(sz7)].z7_uf%type;            -- estado
   sTra_cnpj           varchar(18);                   -- cnpj
   sTra_ie             varchar(25);                   -- ie
   
   sCodProduto         [(tle)].b1_codpro%type;
   nQtde               [(tle)].tle_qtde%type;
   nUnitario           [(tle)].tle_unitario%type;
   nTotal              [(tle)].tle_total%type;
   nAliqipi            [(tle)].tle_aliq_ipi%type;
   nVrIpi              [(tle)].tle_vr_ipi%type;
   nAliqIcms           [(tle)].tle_aliq_icms%type;
   sDescricao          [(tle)].tle_descricao%type;
   sz2_coduni          [(tle)].z2_coduni%type;
   itemf4_tes          [(tle)].f4_tes%type; 
   
   sUnidade            [(sb1)].z2_coduni%type;         -- codigo da unidade
   sSTOrigem           [(tle)].sbn_codtrib%type;       -- cod class fiscal
   sSTTrib             [(tle)].sbx_st%type;            -- cod sit trib
    
   ntld_valor          [(tld)].tld_valor%type;         -- total dos vencimentos
   itld_parcela        [(tld)].tld_parcela%type;       -- parcela              
   dtld_dt_vecto       [(tld)].tld_dt_vecto%type;      -- data do vencimento   
   dtld_vcto_real      [(tld)].tld_vcto_real%type;     -- vencimento real

   ssbm_descri         [(sbm)].sbm_descri%type;
   ssbm_clf            [(sbm)].sbm_clf%type;

   ssf4_obs            [(sf4)].sf4_obs_nf%type;        -- Observacao TES
   
   sTes                varchar array[4]; 
   nLinha              Integer;
   nPosicao            Integer;
   nQuantos            Integer;
Begin
   out_res   := 0;
   cSessao   := sys_session();
   itlc_nota := nNfInicial;
   
   -- valida tabela fcc ( configurações )
   perform mc_01035####???();
   
   -- Limpa os dados da Sessão antes de montar uma nova impressão
   Delete From [(ss053)]
    Where session = cSessao;
    
   -- Verificacoes de marcacoes
   if (Select count(session)
         From [(ss029)] ss029
         Join [(tlc)]   tlc on tlc.recno = ss029.recfile
        Where ss029.session = cSessao and ss029.codtable = 'TLC') = 0 then
      raise '[[ATENÇÃO. Não foi selecionada nenhuma nota fiscal para impressão. Favor verificar.]]';
   End if;
  
   -- Testar se usuario selecionou + de uma serie de NF
   If (Select count(*)
         From (Select tlc.tlc_serie
                 From [(ss029)] ss029, [(tlc)] tlc
                Where ss029.session = cSessao and ss029.codtable = 'TLC' and ss029.recfile = tlc.tlc_numero
                Group by tlc.tlc_serie) as lixo) > 1 Then
      raise '[[ATENÇÃO. Foi selecionada mais de uma série de NF. Favor verificar.]]';
   End If;

   -- Verifica se usuario marcou alguma NF cancelada
   if (select count(*)
         From [(ss029)] ss029
         Join [(tlc)] tlc on tlc.recno = ss029.recfile
        Where ss029.session = cSessao and ss029.codtable = 'TLC' and tlc.tlc_cancelada = 1) > 0 then
      raise '[[ATENÇÃO. Foi selecionada NF Cancelada. Favor Verificar.]]';
   end if;
   
   -- Verifica se usuario marcou NF eletronica
   if (select sat.at_nfe
         from [(ss029)] ss029
         join [(tlc)] tlc on tlc.recno = ss029.recfile
         join [(sat)] sat on sat.at_serie = tlc.tlc_serie
        where ss029.session = cSessao and ss029.codtable = 'TLC') = 1 then
      raise '[[ATENÇÃO. Foi selecionada NF eletrônica. Utilize a opção específica.]]';
   end if;
      
   -- fazer todo o posicionamento dos campos da nota fiscal a ser impressa
   insert into [(ss053)] (session, page, row, col, Text_,       cmd)
          Values         (cSessao, 001,  000, 000, 'mrtext', 'reportmode');
             
   insert into [(ss053)] (session, page, row, col, Text_,       cmd)
          Values         (cSessao, 001,  000, 000, 'Impressão da Nota Fiscal', 'reporttitle');

   -- condensado off               
   insert into [(ss053)] (session, page,    row, col, cmd, text_)
                  values (cSessao, 001,  000, 000, 'condensed', 'off');
   -- Configura o tamanho do formulário
   insert into [(ss053)] (session, page,    row, col, cmd, text_)
                  values (cSessao, 001,  000, 000, 'height', '65');

   if (select tlc.tlc_gerar_vctos
         From [(ss029)] ss029
              Join [(tlc)] tlc on tlc.recno = ss029.recfile
        Where ss029.session = cSessao and ss029.codtable = 'TLC') = 1 then
      
      -- Abro cursor para validacao dos vencimentos
      Open xCur For
      Select tlc.tlc_numero, tlc.f4_tes, tlc.tlc_vr_total
        From [(ss029)] ss029
             Join [(tlc)]   tlc   on tlc.recno     = ss029.recfile
             Join [(ss027)] ss027 on ss027.session = sys_session()
             Join [(sf4)]   sf4   on sf4.f4_tes    = tlc.f4_tes
       Where ss029.session = cSessao and ss029.codtable = 'TLC'
         and sf4.f4_geradupl = 1;
      
      Fetch xCur Into itlc_numero, if4_tes, ntlc_vr_total;

      While Found Loop

         Select coalesce(sum(tld.tld_valor),0)
           Into ntld_valor
           From [(tld)] tld
          Where tld.tlc_numero = itlc_numero;

         if ntlc_vr_total <> ntld_valor Then
--            perform sys_msg####???(2,'Há diferença no valor com o total informado em vencimento(s).');
            raise '[[Há diferença no valor com o total informado em vencimento(s) no Processo: %.]]',itlc_numero;
         end if;

         Fetch xCur Into itlc_numero, if4_tes, ntlc_vr_total;
      End Loop;
      Close xCur;
   end if;

   -- Abro Cursor para montagem das NFs.
   Open   xCur For
   select tlc.tlc_numero,      tlc.tlc_serie,      tlc.tlc_serie_int,    tlc.f4_tes,             tlc.tlc_nota,
          tlc.a1_codcli,       tlc.tlc_dt_nota,    tlc.tlc_dt_saida,     tlc.tlc_s_pedido,       tlc.tlc_n_pedido,
          tlc.a7_codvend,      tlc.z8_codtxt_1,    tlc.z8_codtxt_2,      tlc.tlc_vr_produtos,    tlc.tlc_base_icms,
          tlc.tlc_vr_icms,     tlc.tlc_vr_ipi,     tlc.tlc_vr_frete,     tlc.tlc_vr_seguro,      tlc.tlc_out_desp,
          tlc.tlc_vr_servicos, tlc.tlc_base_iss,   tlc.tlc_vr_iss,       tlc.tlc_vr_total,       tlc.ab_codtrans,
          tlc.tlc_veic_placa,  tlc.tlc_veic_uf,    tlc.tlc_quant,        tlc.tlc_especie,        tlc.tlc_marca,
          tlc.tlc_num_pac,     tlc.tlc_peso_bruto, tlc.tlc_peso_liquido, tlc.tlc_quant_2,        tlc.tlc_especie_2,
          tlc.tlc_marca_2,     tlc.tlc_num_pac_2,  tlc.tlc_peso_bruto_2, tlc.tlc_peso_liquido_2, tlc.tlc_t_frete,
          tlc.tlc_observac,    tlc.tlc_faturar
     from [(ss029)] ss029
          Join [(tlc)]   tlc   on tlc.recno     = ss029.recfile
          Join [(ss027)] ss027 on ss027.session = sys_session()
    Where ss029.session = cSessao;

    Fetch xCur Into itlc_numero,      stlc_serie,       stlc_serie_int,   if4_tes,          itlc_nota_,
                    ia1_codcli,       dtlc_dt_nota,     dtlc_dt_saida,    stlc_s_pedido,    stlc_n_pedido,
                    ia7_codvend,      sz8_codtxt_1,     sz8_codtxt_2,     ntlc_vr_produtos, ntlc_base_icms,
                    ntlc_vr_icms,     ntlc_vr_ipi,      ntlc_vr_frete,    ntlc_vr_seguro,   ntlc_out_desp,
                    ntlc_vr_servicos, ntlc_base_iss,    ntlc_vr_iss,      ntlc_vr_total,    iab_codtrans,
                    stlc_veic_placa,  stlc_veic_uf,     itlc_quant,       stlc_especie,     stlc_marca,
                    stlc_num_pac,     ntlc_peso_bruto,  ntlc_peso_liquido,itlc_quant_2,     stlc_especie_2,
                    stlc_marca_2,     stlc_num_pac_2,   ntlc_peso_bruto_2,ntlc_peso_liquido_2, stlc_t_frete,
                    stlc_observac,    itlc_faturar;

   While Found Loop

      -- Numero da NF
      if itlc_nota_ > 0 Then     -- reemissao
         perform sys_ins_ss053####???(001,000,106,sys_strzero(itlc_nota_,6));
      else
         perform sys_ins_ss053####???(001,000,106,sys_strzero(itlc_nota, 6));
      end if;

      -- verifica se NF é do tipo de entrada/saida (1/2)
      if (Select sf4.f4_tipo
            From [(sf4)] sf4
           Where sf4.f4_tes = if4_tes) = 1 Then     -- Entrada
         perform sys_ins_ss053####???(001,002,093,'X');
      else
         perform sys_ins_ss053####???(001,002,085,'X');
      end if;

      -- Nome do Cliente
      Select sfm.sfj_nome,               sfm.cnpj_cpf,                se2.se2_rg || se2.se2_ie,
             se2.se2_cep,                coalesce(se2.se2_ender,''),  coalesce(se2.se2_num,''),
             coalesce(se2.se2_compl,''), coalesce(se2.se2_bairro,''), sz9.sz9_descri,
             sz9.z7_uf,                  se2.se2_fone
        Into sRazao, sCnpj, sIe, sCep, sEndereco, sNumero, sCompl, sBairro, sCidade, sEstado, sFone
        From [(sa1)] sa1
             Join [(se2)] se2 on se2.a1_codcli     = sa1.a1_codcli
             Join [(sz9)] sz9 on sz9.sz9_municipio = se2.sz9_municipio
             Join [(sfm)] sfm on sfm.sfj_pessoa    = sa1.a1_codcli
       Where sa1.a1_codcli = ia1_codcli;

      -- Seleciona dados para CFOP
      Select sf8.f8_cfop, sf8.f8_descri, sf4.sf4_obs_nf
        Into sf8_cfop,    sf8_descri,    ssf4_obs
        From [(sf8)] sf8
             join [(sf4)] sf4 on sf4.f8_cfop_de = sf8.f8_cfop
       Where sf4.f4_tes = if4_tes;

      -- Insere a Descricao da CFOP
      perform sys_ins_ss053####???(001,006,028,lpad(sf8_descri,29));
      -- Insere a CFOP
      perform sys_ins_ss053####???(001,006,058,sf8_cfop);

      -- codigo do cliente
      perform sys_ins_ss053####???(001,008,042,'(' || ia1_codcli || ')');


      -- nome do vendedor
      perform sys_ins_ss053####???(001,009,002,(Select lpad(sfj_nome,25)
                                                  From [(sfj)]
                                                 Where sfj_pessoa = ia7_codvend));
      -- Razao Social
      perform sys_ins_ss053####???(001,009,028,sRazao);
      -- CNPJ/CPF
      perform sys_ins_ss053####???(001,009,084,sCnpj);
      -- Data da Emissao
      perform sys_ins_ss053####???(001,009,105,to_char(dtlc_dt_nota,'DD/MM/YYYY'));

      -- Nosso Pedido
      perform sys_ins_ss053####???(001,011,002,stlc_n_pedido);
      -- Endereco
      perform sys_ins_ss053####???(001,011,028,sEndereco || ',' || sNumero);
      -- Bairro
      perform sys_ins_ss053####???(001,011,078,sBairro);
      -- Cep
      perform sys_ins_ss053####???(001,011,094,mask_00001(sCep));

      -- Seu pedido
      perform sys_ins_ss053####???(001,013,002,stlc_s_pedido);
      -- Municipio
      perform sys_ins_ss053####???(001,013,028,sCidade);
      -- Fone / Fax
      perform sys_ins_ss053####???(001,013,064,sFone);
      -- Estado              
      perform sys_ins_ss053####???(001,013,079,sEstado);
      -- Ie / Rg
      perform sys_ins_ss053####???(001,013,084,sIe);
      
--    -- Data de Saida
--    perform sys_ins_ss053####???(001,011,077,to_char(dtlc_dt_saida,'DD/MM/YYYY'));
--    -- Complemento
--    perform sys_ins_ss053####???(001,013,001,sCompl);

      -- Cursor para Classificacao Fiscal
      Open xCurCf For
           Select max(sbm.sbm_descri), max(sbm.sbm_clf)
             From [(tle)] tle
                  join [(sb1)] sb1 on sb1.b1_codpro = tle.b1_codpro
                  join [(sbm)] sbm on sbm.sbm_clf   = sb1.sbm_clf       
            where tle.tlc_numero = itlc_numero
            group by sbm.sbm_descri;
      Fetch xCurCf Into ssbm_descri, ssbm_clf;
             
      nLinha   := 15;

      While Found Loop
         perform sys_ins_ss053####???(001,nLinha,002, ssbm_descri || '-' || ssbm_clf);
         nLinha := nLinha + 1;
         if nLinha > 17 then
            exit;
         end if;
         Fetch xCurCf Into ssbm_descri, ssbm_clf;
      End Loop;
      Close xCurCf;

      -- Cursor Para Datas de vencimento
      Select count(*)
        Into nQuantos
        from [(tld)]
       Where tlc_numero = itlc_numero;

      if nQuantos > 0 then
         Open   xCurVecto For
         Select tld.tld_parcela, tld.tld_dt_vecto, tld.tld_valor
           From [(ss029)] ss029
                Join [(tlc)]   tlc   on tlc.recno      = ss029.recfile
                Join [(tld)]   tld   on tld.tlc_numero = itlc_numero
                Join [(ss027)] ss027 on ss027.session  = cSessao
          Where ss029.session   = cSessao
            and tld.tlc_numero  = itlc_numero
            and tld.tld_valor > 0;

          Fetch xCurVecto Into itld_parcela, dtld_dt_vecto, ntld_valor;
             
          nLinha   := 16;
          nPosicao := 39;
          While Found Loop
             if nQuantos > 1 then
                perform sys_ins_ss053####???(001,nLinha,nPosicao,sys_strzero(itlc_nota_,6) || '/' || itld_parcela);
             else
                perform sys_ins_ss053####???(001,nLinha,nPosicao,sys_strzero(itlc_nota_,6));
             end if;      
             perform sys_ins_ss053####???(001,nLinha,nPosicao + 11,lpad(sys_to_char(ntld_valor,'9,999,990.00'),12));
             perform sys_ins_ss053####???(001,nLinha,nPosicao + 26,to_char(dtld_dt_vecto,'DD/MM/YYYY'));
      
             if    nLinha = 16 and nPosicao = 39 Then
                nPosicao := 80;
             elsif nLinha = 16 and nPosicao = 80 then   -- redundante mas claro
                nLinha   := 17;
                nPosicao := 39;
             elsif nLinha = 17 and nPosicao = 39 then
                nPosicao := 78;
             elsif nLinha = 17 and nPosicao = 80 then
                exit;
             end if;
                
             Fetch xCurVecto Into itld_parcela, dtld_dt_vecto, ntld_valor;
         End Loop;
         Close xCurVecto;
      end if;
      
      -- Cursor para Itens
      Open xCurItem For
      Select tle.b1_codpro,    tle.tle_qtde,    tle.tle_unitario,  tle.tle_total, 
             tle.tle_aliq_ipi, tle.tle_vr_ipi,  tle.tle_aliq_icms, tle.tle_descricao,
             tle.z2_coduni,    tle.sbn_codtrib, tle.sbx_st,        tle.sbm_clf,
             tle.f4_tes   
        from [(tle)] tle
       Where tle.tlc_numero = itlc_numero;
     
      Fetch xCurItem
       Into sCodProduto, nQtde, nUnitario,  nTotal, nAliqIpi, nVrIpi, nAliqIcms, sDescricao, sUnidade,
            sSTOrigem,   sSTTrib, ssbm_clf, itemf4_tes;
   
      nLinha := 20;
      
      While Found Loop
         -- busca cfop e obs corpo da nota (item)
         sTes := mc_00040####???(ia1_codcli, itlc_faturar,itemf4_Tes);
          
         perform sys_ins_ss053####???(001,nLinha,002,sCodProduto);
         perform sys_ins_ss053####???(001,nLinha,014,sDescricao || ' (Cfop: ' || sTes[1] || ')' );
         perform sys_ins_ss053####???(001,nLinha,061,sStOrigem || sStTrib);
         perform sys_ins_ss053####???(001,nLinha,069,sUnidade);
         perform sys_ins_ss053####???(001,nLinha,072,lpad(sys_to_char(nQtde,     '999,990.0') ,09) || ' ' ||
                                                     lpad(sys_to_char(nUnitario, '999,990.00'),10) || ' ' ||
                                                     lpad(sys_to_char(nTotal,    '999,990.00'),10) || ' ' ||
                                                     lpad(sys_to_char(nAliqIcms, '99.00')     ,06) || ' ' ||
                                                     lpad(sys_to_char(nAliqIpi,  '99.00')     ,06) || ' ' ||
                                                     lpad(sys_to_char(nVripi,    '9990.00')   ,07));
          
         nLinha := nLinha + 1;
         
         -- observacao da tes no item
         if sTes[2] is not null then
            while sTes[2] <> '' and nLinha < 42 loop
               perform sys_ins_ss053####???(001,nLinha,014, substr(sTes[2],001,070));
               if length(sTes[2]) > 070 then
                  sTes[2] := substr(sTes[2],071,length(sTes[2]) - 070);
               else
                  sTes[2] := '';
               end if;
               nLinha := nLinha + 1;
            End Loop;
         end if;
         
         Fetch xCurItem 
          Into sCodProduto, nQtde,     nUnitario, nTotal, nAliqIpi, nVrIpi, nAliqIcms, sDescricao,
               sUnidade,    sStOrigem, sSTTrib,   itemf4_tes;
      End Loop;
      Close xCurItem;
      
      -- observações do corpo da nota
      stlc_observac := trim(stlc_observac);

      while stlc_observac <> '' and nLinha < 42 loop
         perform sys_ins_ss053####???(001,nLinha,013, substr(stlc_observac,001,070));
         if length(stlc_observac) > 070 then
            stlc_observac := substr(stlc_observac, 071, length(stlc_observac) - 070);
         else
            stlc_observac := '';
         end if;
         nLinha := nLinha + 1;
      End Loop;
      
--      perform sys_ins_ss053####???(001,nLinha + 00,013,stlc_obs_1);
--      perform sys_ins_ss053####???(001,nLinha + 01,013,stlc_obs_2);
--      perform sys_ins_ss053####???(001,nLinha + 02,013,stlc_obs_3);
--      perform sys_ins_ss053####???(001,nLinha + 03,013,stlc_obs_4);
--      perform sys_ins_ss053####???(001,nLinha + 04,013,stlc_obs_5);
      
      -- Base de Calculo do Icms  
      perform sys_ins_ss053####???(001,045,003,lpad(sys_to_char(nTlc_base_icms, '9,999,990.00'), 12));
      -- Valor do Icms  
      perform sys_ins_ss053####???(001,045,017,lpad(sys_to_char(nTlc_vr_icms,   '9,999,990.00'), 12));
      -- Base de Calculo da ST
      perform sys_ins_ss053####???(001,045,033,lpad(sys_to_char(0,              '9,999,990.00'), 12));
      -- Valor do Icms da ST
      perform sys_ins_ss053####???(001,045,049,lpad(sys_to_char(0,              '9,999,990.00'), 12));           
      -- Valor Total dos produtos
      perform sys_ins_ss053####???(001,045,066,lpad(sys_to_char(nTlc_base_icms, '9,999,990.00'), 12));
      -- Valor do frete           
      perform sys_ins_ss053####???(001,047,003,lpad(sys_to_char(nTlc_vr_frete,  '9,999,990.00'), 12));
      -- Valor do seguro
      perform sys_ins_ss053####???(001,047,017,lpad(sys_to_char(nTlc_vr_seguro, '9,999,990.00'), 12));
      -- valor de despesas Acessorias
      perform sys_ins_ss053####???(001,047,033,lpad(sys_to_char(ntlc_out_desp,  '9,999,990.00'), 12));
      -- Valor do Ipi             
      perform sys_ins_ss053####???(001,047,049,lpad(sys_to_char(ntlc_vr_ipi,    '9,999,990.00'), 12));
      -- Valor Total da NF
      perform sys_ins_ss053####???(001,047,066,lpad(sys_to_char(nTlc_vr_total,  '9,999,990.00'), 12));
      
      -- Seleciona dados para Transportadora
      select sfp.sfj_nome, se2.se2_ender, se2.se2_num, sz9_descri,  sz9.z7_uf,   sfp.cnpj_cpf, se2.se2_ie || se2.se2_rg
        into sTra_nome,    sTra_Ender,    sTra_Num,    sTra_Cidade, sTra_Estado, sTra_Cnpj,    sTra_IE
        from [(sfp)] sfp
             left join [(se2)] se2 on se2.a1_codcli = sfp.sfj_pessoa
             left join [(sz9)] sz9 on sz9.sz9_municipio = se2.sz9_municipio
        where sfp.sfj_pessoa = iab_codtrans;
                
      -- Transportadora
      perform sys_ins_ss053####???(001,049,028,'(' || iab_codtrans || ')');
      perform sys_ins_ss053####???(001,050,003,sTra_Nome);
      perform sys_ins_ss053####???(001,050,045,stlc_t_frete);
      perform sys_ins_ss053####???(001,050,049,stlc_veic_placa);
      perform sys_ins_ss053####???(001,050,058,stlc_veic_uf);
      if sTra_Cnpj <> '__ESTRANGEIRO__' then
         perform sys_ins_ss053####???(001,050,061,sTra_Cnpj);
      end if;   
      perform sys_ins_ss053####???(001,052,003,sTra_Ender || ',' || sTra_Num);
      perform sys_ins_ss053####???(001,052,037,sTra_Cidade);
      perform sys_ins_ss053####???(001,052,058,sTra_Estado);
      perform sys_ins_ss053####???(001,052,061,sTra_Ie);
        
      -- totalizador dos campos de entrega
      if itlc_quant > 0 then
         perform sys_ins_ss053####???(001,054,003,lpad(sys_to_char(itlc_quant,        '999,999.9'),09));
         perform sys_ins_ss053####???(001,054,015,stlc_especie);
         perform sys_ins_ss053####???(001,054,031,stlc_marca);
         perform sys_ins_ss053####???(001,054,044,stlc_num_pac);
         perform sys_ins_ss053####???(001,054,056,lpad(sys_to_char(ntlc_peso_bruto,   '999,990.000'),11));
         perform sys_ins_ss053####???(001,054,069,lpad(sys_to_char(ntlc_peso_liquido, '999,990.000'),11));
      end if; 
         
      -- segundo campo de entrega
      if itlc_quant_2 > 0 then
         perform sys_ins_ss053####???(001,055,003,lpad(sys_to_char(itlc_quant_2,       '999,999.9'),09));
         perform sys_ins_ss053####???(001,055,015,stlc_especie_2);
         perform sys_ins_ss053####???(001,055,031,stlc_marca_2);
         perform sys_ins_ss053####???(001,055,044,stlc_num_pac_2);
         perform sys_ins_ss053####???(001,055,056,lpad(sys_to_char(ntlc_peso_bruto_2,  '999,990.000'),11));
         perform sys_ins_ss053####???(001,055,069,lpad(sys_to_char(ntlc_peso_liquido_2,'999,990.000'),11));
      end if;

      -- numero da nota no canhoto
      if itlc_nota_ > 0 Then     -- reemissao
         perform sys_ins_ss053####???(001,059,108,sys_strzero(itlc_nota_,6));
      else
         perform sys_ins_ss053####???(001,059,108,sys_strzero(itlc_nota,6));
      end if;

      -- nome do cliente no canhoto
      perform sys_ins_ss053####???(001,061,042,sRazao);
      -- salto do papel
      perform sys_ins_ss053####???(001,065,000,' ');

      if coalesce(itlc_nota_,0) = 0 Then   -- NF nova
         -- muda status da NF para NF Emitida
         Update [(tlc)]
            Set tlc_nota   = itlc_nota,
                tlc_financas = 1,
                tlc_status = 2,
                tlc_estado = 3
          Where tlc_numero = itlc_numero;

         -- incrementa o numero da NF
         itlc_nota := itlc_nota + 1;
      end if;

      Fetch xCur Into itlc_numero,      stlc_serie,       stlc_serie_int,   if4_tes,          itlc_nota_,
                      ia1_codcli,       dtlc_dt_nota,     dtlc_dt_saida,    stlc_s_pedido,    stlc_n_pedido,
                      ia7_codvend,      sz8_codtxt_1,     sz8_codtxt_2,     ntlc_vr_produtos, ntlc_base_icms,
                      ntlc_vr_icms,     ntlc_vr_ipi,      ntlc_vr_frete,    ntlc_vr_seguro,   ntlc_out_desp,
                      ntlc_vr_servicos, ntlc_base_iss,    ntlc_vr_iss,      ntlc_vr_total,    iab_codtrans,
                      stlc_veic_placa,  stlc_veic_uf,     itlc_quant,       stlc_especie,     stlc_marca,
                      stlc_num_pac,     ntlc_peso_bruto,  ntlc_peso_liquido,itlc_quant_2,     stlc_especie_2,
                      stlc_marca_2,     stlc_num_pac_2,   ntlc_peso_bruto_2,ntlc_peso_liquido_2, stlc_t_frete,
                      stlc_observac,    itlc_faturar;
   End Loop;
   Close xCur;

   Out_res := 1;
end;
$$ language 'plpgsql'
