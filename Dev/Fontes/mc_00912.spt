/**
   Pré-validação dos lotes da pré-nota

	@author    Ricardo Gonçalves
	@date      02/10/2009 19:14:40
	@trigger   a0g B IUD

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
      
   04/08/2017 16:05  Ricardo Gonçalves
      [*] Troca dos parâmetros na rotina mc_00047####??? por um tipo composto
*/
Create or Replace Function mc_00912####???()
Returns trigger As
$$
Declare   
   rItem          record; 
   r              record;
   va49_historico [(a49)].a49_historico%type;
   iLote          integer;
   xconv          econv;   
Begin

   -- if tg_op <> 'INSERT' then
      -- delete from [(sd3)] where sd3_lote = old.sd3_lote;
   -- end if;
   
   if tg_op = 'DELETE' then
      Return old;
   else
      
      if not exists(
         select 1
           from [(sbf)] sbf
               join [(saj)] saj
                 on saj.saj_item = new.saj_item
                and saj.sai_serial = new.sai_serial
                and saj.b1_codpro = sbf.b1_codpro
          where sbf_rastro = 1)
      then
         raise '[[Material não está configurado para controlar rastreabilidade.]]';
      end if;
      
      -- Se avulso, saída
      if exists(
         select 1 
           from [(sai)]
          where sai_serial = new.sai_serial
            and sai_avulso = 1
            and sai_tipo = 0) and
         new.codtable <> 'A0G'
      then
         raise '[[Lotes devem ser informados na ordem de movimentação.]]';
      -- Se avulso, entrada
      elsif exists(
         select 1 
           from [(sai)]
          where sai_serial = new.sai_serial
            and sai_avulso = 1
            and sai_tipo = 1)
      then
         select saj.b1_codpro, saj.z2_coduni, saj.recno, sai.recno as iNfRecno, at_serie, sfj_nome, sai.a1_codcli, a49_recno, sd3_lote, saj_quantos, p.sbf_endereco_rec
           into r
           from [(saj)] saj
               join [(sai)] sai
                 on sai.sai_serial = saj.sai_serial
               join [(sfj)] f
                 on f.sfj_pessoa = sai.a1_codcli
               join [(sbf)] p
                 on p.b1_codpro = saj.b1_codpro    
          where sai.sai_serial = new.sai_serial
            and saj_item = new.saj_item;
         
         va49_historico := format('NFE nº %s série %s de %s', r.iNfRecno, r.at_serie, r.sfj_nome);
         
         if new.a0g_loteforn is null then
            raise '[[ATENÇÃO. Lote do fornecedor deve ser informado em notas de entrada.]]';
         end if;

         -- Processamento dos números de série e lotes
         iLote := mc_00046####???(r.b1_codpro, new.a0g_loteforn, r.z2_coduni, r.saj_quantos, 'SAJ', r.recno, va49_historico, r.a1_codcli); -- criação do lote
         
         new.sd3_lote = iLote;
      end if;
      
      select b1_codpro
        into rItem
        from [(saj)]
       where sai_serial = new.sai_serial
         and saj_item = new.saj_item;
      
      -- Verifica se o produto tem controle de rastreabilidade
      if mc_00049####???(rItem.b1_codpro) <> 1 then
         raise '[[O produto % não possui controle de rastreabilidade habilitado.]]', rItem.b1_codpro;
      end if;
      
      xconv.material := rItem.b1_codpro;
      xconv.unidade := new.z2_coduni;
      xconv.qtd := new.a0g_qtd;

      xconv := mc_00047####???(xconv);
      
      new.a0g_qtdu1 := xconv.qtd_u1;
      new.a0g_qtdu2 := xconv.qtd_u2;
      
      -- Processamento do controle de nº de série
      case ck_00011####???(rItem.b1_codpro) 
         when 1 then
            new.a0g_qtdnsertot := round(new.a0g_qtdu1);
         when 2 then
            new.a0g_qtdnsertot := round(new.a0g_qtdu2);
      else
         new.a0g_qtdnsertot := 0;
      end case;
      
      Return new;
   end if;
End;
$$
language plpgsql;