/**
   Valida o processamento dos laudos

	@author    Ricardo Gonçalves
	@date      10/01/2012 16:29:09
	@trigger   B37 B IUD   

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
   19/03/2012 00:53:24  v2    Ricardo Gonçalves.
      [-] Correção do nome do campo b03_ripo para b03_rtipo.

   30/08/2012 16:14:02  v3    Ricardo Gonçalves.
      [+] Geração de histórico depois do encerramento da digitação.
*/
CREATE OR REPLACE FUNCTION mc_00355####???()
  RETURNS trigger AS
$$
Declare
   re       record;
   rh       record;
   r        record;

   -- Variáveis que guardam a assinatura digital
   vass_p1  varchar(32);
   vass_p2  varchar(32);
   vass_p3  varchar(32);
   vass_p4  varchar(32);
   mErro    text;
BEGIN
   if tg_op <> 'DELETE' then

      select b32_recno, b24_recno, b36_tipo -- Comodato, Equipamento
        into r
        from [(b36)]
       where recno = new.b36_recno;

      if r.b36_tipo = 2 and new.b37_emissao is null then
         raise '[[O laudo % da amostra % deve ter a data de emissão preenchida.]]',
            new.b07_recno, new.b36_recno;
      end if;

      -- Trata inserção
      if tg_op = 'INSERT' then
         new.b37_estado := 1;
         new.b37_criacao := localtimestamp;

         -- Obtem informações do laudo
         select sew_servico, b07_descri, b07_ativo
           into rh
           from [(b07)]
          where recno = new.b07_recno;

         if rh.b07_ativo <> 1 then
            raise '[[O laudo % - % não está ativo. Verifique!]]', new.b07_recno, rh.b07_descri;
         end if;

         -- Histórico de resultados
         if r.b36_tipo = 1 then
            if rh.sew_servico is null then
               raise '[[O laudo % - % não possui serviço associado para cobrança. Verifique!]]', new.b07_recno, rh.b07_descri;
            end if;

            new.sew_servico := rh.sew_servico;
         end if;
      else
         -- Caso seja um histórico e o estado seja assinado retorna
         if r.b36_tipo = 2 and new.b37_estado = 3 then
            return new;
         end if;

         if old.b37_estado = 1 and new.b37_estado = 2 then -- Digitação para encerrado
            if r.b36_tipo = 2 then
               new.b37_estado := 3;
               return new;
            end if;

            mErro := '';

            -- Checa se a referências dos ensaios estão corretas
            for re in (
               select e.recno, e.b03_nome
                 from [(b39)] rens
                      join [(b03)] e
                        on e.recno = rens.b03_recno
                       and e.b03_rtipo <> 1
                where rens.b36_recno = new.b36_recno
                 and rens.b07_recno = new.b07_recno
                 and coalesce(rens.b39_rvalor, 0) = 0)
            Loop
               mErro := mErro || re.recno || ' - ' || re.b03_nome || '. ' || chr(13) || chr(10);
            End Loop;

            -- Verifica se há referências sem preenchimento
            if mErro <> '' then
               raise '[[Os ensaios a seguir estão sem referência. %]]', mErro;
            end if;
         elsif old.b37_estado = 2 and new.b37_estado = 3 then -- Assinatura do Laudo
            -- Verifica o codigo
            if new.sfj_pessoa is null then
               raise '[[Para assinar um laudo é necessário que o código do responsável técnico seja informado.]]';
            end if;

            new.b37_emissao := coalesce(new.b37_emissao, localtimestamp);

            vass_p1 := md5(trim(to_char(new.sfj_pessoa, '000')));
            vass_p2 := md5(to_char(new.b37_emissao, 'DDMMYYYYHH24MISS'));
            vass_p3 := md5(to_char(new.b37_criacao, 'DDMMYYYYHH24MISS'));
            vass_p4 := md5(new.b37_diagnostico);

            new.b37_assinatura := vass_p1 || vass_p2 || vass_p3 || vass_p4;
         elsif old.b37_estado = 4 then
            raise '[[O laudo %, etiqueta % não pode sofrer alterações porque está cancelado.]]',
               new.b07_recno, r.b32_recno;
         elsif old.b37_estado in (2, 3) then
            if mc_getflag####???('B37', new.recno) <> 1 then
               --raise '[[Fudeu!]]';
               new.b37_assinatura := null;
               new.b37_emissao := null;
               new.b37_d1 := null;
               new.b37_d2 := null;
               new.b37_d3 := null;
               new.b37_d4 := null;
               new.b37_d5 := null;
               new.b37_d6 := null;
            end if;
         else
            if old.b37_estado <> new.b37_estado then
               raise '[[As alterações do laudo %, etiqueta % devem respeitar as etapas.]]',
                  new.b07_recno, r.b32_recno;
            end if;
         end if;
      end if;

      if new.b37_d1 is not null then
         new.b37_periodo := (new.b37_emissao::date - new.b37_d1);
      
         if new.b37_periodo <> 0 then
            new.b37_periodo := new.b37_periodo / 30;
         end if;
      else
         new.b37_periodo := 0;
      end if;

      return new;
   else
      perform mc_setflag####???('B37', old.b07_recno);

      return old;
   end if;
END;
$$
  LANGUAGE 'plpgsql' VOLATILE;