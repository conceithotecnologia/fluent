/**
   ESat - Gravacao dos Itens

	@author    Fabio Carvalho
	@date      29/01/2018
	@trigger   CFB B IUD

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda:

*/
Create or Replace Function mc_01103####???()
Returns trigger
As
$$
Declare
   rRec  record;
Begin
   if tg_op <> 'DELETE' then

/*    campos que vem da rotina mc_00269
      new.cfa_recno
      new.codtable
      new.recno_origem
*/
      if new.codtable = 'TGC' then
         select tgc.tgc_item,     tgc.b1_codpro,   tgc.tgc_quantidade, tgc.tgc_unitario, tgc.tgc_total,    tgc.f8_cfop,
                tgc.tgc_aliq_icm, tgc.tgc_vlr_icm, tgc.sbn_codtrib,    tgc.sbx_st,
                tgc.tgc_aliq_pis, tgc.tgc_vlr_pis, tgc.a0f_cod,        tgc.tgc_bs_pisfin,
                tgc.tgc_aliq_fin, tgc.tgc_vlr_fin, tgc.a0e_cod,
                sb1.b1_nome,      sb1.b1_ean,      sb1.sbm_clf,        sb1.z2_coduni,    b1_anp_prod,      a1c_codigo
           into rRec
           from [(tgc)] tgc
           join [(sb1)] sb1 on sb1.b1_codpro = tgc.b1_codpro
          where tgc.recno = new.recno_origem;

         new.det_item         := rRec.tgc_item;
         new.prod_cprod       := rRec.b1_codpro;
         new.prod_ean         := rRec.b1_ean;
         new.prod_xprod       := rRec.b1_nome;
         new.prod_ncm         := rRec.sbm_clf;
         new.prod_cfop        := rRec.f8_cfop;
         new.prod_ucom        := rRec.z2_coduni;
         new.prod_qcom        := rRec.tgc_quantidade;
         new.prod_vuncom      := rRec.tgc_unitario;
         new.prod_vitem       := rRec.tgc_total;
         new.prod_vprod       := rRec.tgc_total;
         new.icms_orig        := rRec.sbn_codtrib;
         new.icms_cst         := rRec.sbx_st;
         new.icms_picms       := rRec.tgc_aliq_icm;
         new.icms_vicms       := rRec.tgc_vlr_icm;
         new.pis_cst          := rRec.a0f_cod;
         new.pis_vbc          := rRec.tgc_bs_pisfin;
         new.pis_ppis         := rRec.tgc_aliq_pis;
         new.pis_vpis         := rRec.tgc_vlr_pis;
         new.cofins_cst       := rRec.a0e_cod;
         new.cofins_vbc       := rRec.tgc_bs_pisfin;
         new.cofins_pcofins   := rRec.tgc_aliq_fin;
         new.cofins_vcofins   := rRec.tgc_vlr_fin;

         --testa se produto é Vinculado ao ANP
         if rRec.b1_anp_prod is not null then
            new.prod_xcampodet := 'Cod. Produto ANP';
            new.prod_xtextodet := rRec.b1_anp_prod;
         end if;

--       new.cfm_infadprod    :=
         new.icmssn_cson      := rRec.a1c_codigo;
--       new.prod_vprod       :=
--       new.prod_vdesc       :=
--       new.prod_voutro      :=
--       new.pisst_vbc        :=
--       new.pisst_ppis       :=
--       new.pisst_vpis       :=
--       new.cofinsst_vbc     :=
--       new.cofinsst_pcofins :=
--       new.cofinsst_vcofins :=
      else
 --        raise '[[Origem % incompatível com a tabela E-SAT]]', new.codtable;
      end if;

      Return new;
   end if;

   return old;
End;
$$
language plpgsql;