/**
   Executa calculos baseado nas definicoes da tes e preenche totais do item (SAM)

	@author    Wagner Mobile Costa
	@date      14/04/2005 16:00:00
	@function

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso

   11/02/2011 20:30:00   v1   Wagner Mobile Costa
      [*] Obrigar preenchimento dos impostos ICMS/IPI/PIS e COFINS de acordo com a situação tributária do Item

   11/11/2011 22:00:00   v2   Wagner Mobile Costa
      [+] Verifica o tipo de lucro do fornecedor para definir a digitação do imposto
            e calculo da substituição tributária

   26/03/2012 09:27:00   v3   Fabio Carvalho
      [*] Inclusao de calculo da Base de Calculo do Icms reduzido

   24/03/2014 15:30:00   v4   Jurandy da Silva Costa
      [*] Passa o código do fornecedor como parâmetro para a procedure MC_ICMS_IPI_PIS
*/
create or replace function mc_editsam####???( out out_res Integer) As $$
Declare
   rSAM           Record;
   rSAL           Record;
   rTes			   Record;
   ia4i_tipo      integer;
   cSessao        [(ss027)].session%type;       -- Sessao ativa no banco   
   aICMS_IPI      Numeric(15, 2) ARRAY[18];     -- aICMS_IPI[01] = Base de Cálculo do ICMS
                                               -- aICMS_IPI[02] = Alíquota do ICMS
                                               -- aICMS_IPI[03] = Valor do ICMS
                                               -- aICMS_IPI[04] = Base de Cálculo do IPI
                                               -- aICMS_IPI[05] = Alíquota do IPI
                                               -- aICMS_IPI[06] = Valor do IPI
                                               -- aICMS_IPI[07] = Base de Cálculo do PIS/COFINS
                                               -- aICMS_IPI[08] = Alíquota do PIS
                                               -- aICMS_IPI[09] = Valor do PIS
                                               -- aICMS_IPI[10] = Alíquota do COFINS
                                               -- aICMS_IPI[11] = Valor do COFINS
                                               -- aICMS_IPI[12] = Total do Produto (Quanto * Unitário)
                                               -- aICMS_IPI[13] = Total do Item (Produto + IPI + ST)
                                               -- aICMS_IPI[14] = Valor da Fatura
                                               -- aICMS_IPI[15] = Base de Calculo da Substituição Tributária
                                               -- aICMS_IPI[16] = Alíquota de ICMS para calculo da Substituição Tributária
                                               -- aICMS_IPI[17] = Valor da Substituição Tributária
                                               -- aICMS_IPI[18] = Sigla do estado do cliente ou fornecedor
begin
   out_res := 0;
   ia4i_tipo := 0;
   cSessao := sys_session();

   select sys_042integer####???('sam_informa')  as sam_informa,   sys_042integer####???('f4_tes')        as f4_tes,
          sys_042number####???('am_qtd')        as am_qtd,        sys_042number####???('am_vlunit')      as am_vlunit,
          sys_042number####???('am_descto')     as am_descto,     sys_042number####???('am_icms')        as am_icms,
          sys_042number####???('am_ipi')        as am_ipi,        sys_042number####???('am_total')       as am_total,
          sys_042number####???('sam_frete')     as sam_frete,     sys_042number####???('sam_seguro')     as sam_seguro,
          sys_042number####???('sam_encargos')  as sam_encargos,  sys_042number####???('sam_acessorias') as sam_acessorias,
          sys_042number####???('am_vbcst')      as am_vbcst,      sys_042number####???('am_aliq_st')     as am_aliq_st,
          sys_042number####???('am_vicmsst')    as am_vicmsst,    sys_042integer2####???('SAM', 'al_serial') as al_serial,
		  sys_042number####???('sam_bs_pisfin') as sam_bs_pisfin, sys_042number####???('am_bs_icms')     as am_bs_icms
    into rSAM;
   
   select sf4.f4_redicms, sf4.sbn_codtrib, sf4.f4_tes, sf4.sbx_st, sf4.a1c_codigo, f4_inficms
     from [(sf4)] sf4
	 into rTes
	where f4_tes = RSAM.f4_tes; 
   
    select case when sfh.sfh_lucro = 3 then 1 else 3 end as iLucro, sal.ac_codforn
	  into rSAL
      from [(sal)] sal
      left join [(sfh)] sfh on sfh.sfj_pessoa = sal.ac_codforn
     where sal.al_serial = rSAM.al_serial;
   
   if rTes.f4_tes is not null then
      if exists(
         select 1
           from [(sbf)]
          where b1_codpro = sys_042string2####???('sam', 'b1_codpro')
            and sbf_estocavel = 1) and
         exists(
         select 1
           from [(sf8)]
          where f8_cfop = (mc_00040####???(rSAL.ac_codforn, mc_00205####???(rSAL.ac_codforn), rTes.f4_tes))[1]
            and f8_estoque = 1)
      then
         ia4i_tipo := 1;         
      else
         perform sys_042integer_wr####???('sam', 'a4i_tipo', null);
      end if;
   end if;

   -- Calcula o total do item se o usuário não informar
   If rSAM.sam_informa < 1 Then
      rSAM.am_total := (rSAM.am_qtd * rSAM.am_vlunit);
      rSAM.am_total := rSAM.am_total - round((rSAM.am_total * rSAM.am_descto / 100), 2);
   End If;

   -- Chama procedure de calcula Bases, confirma Alíquotas e calcula Impostos
   aICMS_IPI := mc_icms_ipi_pis####???(rSAM.sam_informa,  rTes.f4_tes,   rSAM.am_vlunit, rSAM.am_qtd,
                                       rSAM.am_descto,  rSAM.am_icms,    rTes.f4_redicms, rSAM.am_ipi,
                                       0,  'NN',     0, 'NN',
                                       0, rSAM.am_total, rSAM.sam_frete, rSAM.sam_seguro,
                                       rSAM.sam_encargos, rSAM.sam_acessorias, rSAL.iLucro,
                                       Array[ rSAM.am_vbcst, rSAM.am_aliq_st,  rSAM.am_vicmsst, 0.00 ],
                                       rSAL.ac_codforn, rSAM.sam_bs_pisfin, rSAM.am_bs_icms);

   if rTES.sbn_codtrib = '1' and aICMS_IPI[18] = 1 then
      update [(ss042)]
         set enabled = 1
       where session = cSessao
         and Columnname in ('am_bs_icms','am_icms','am_vl_icms');
   else
      -- Atribuo o novo valor da base do ICMS
      update [(ss042)]
         set number_ = aICMS_IPI[01], enabled = Case When rTes.f4_inficms = 1 then 1 else 0 end
       where session = cSessao
         and Columnname = 'am_bs_icms';

      -- Atribuo a aliquota e status do ICMS
      update [(ss042)]
         set number_ = sys_maxval(aICMS_IPI[02], 0), enabled = Case When aICMS_IPI[02] <> 0 then 1 else 0 end
       where session = cSessao
         and Columnname = 'am_icms';
       
	  if sys_maxval(aICMS_IPI[02], 0) = 0 then
		update [(ss042)]
           set number_ = (mc_00040####???(rSAL.ac_codforn, mc_00205####???(rSAL.ac_codforn), rTES.f4_tes))[4]::Numeric(15, 2)
		 where session = cSessao
           and Columnname = 'am_icms';
	  end if;
	  
      -- Atribuo o calculo do valor do ICMS
      update [(ss042)]
         set number_ = aICMS_IPI[03]
       where session = cSessao
         and Columnname = 'am_vl_icms';
   end if;

   -- Atribuo o calculo do valor do ICMS ST
   update [(ss042)]
      set number_ = aICMS_IPI[17], enabled = 0
    where session = cSessao
      and Columnname = 'am_vicmsst';

   -- Atribuo o novo valor e status da aliquota do IPI
   update [(ss042)]
      set number_ = sys_maxval(aICMS_IPI[05], 0), enabled = Case When aICMS_IPI[05] <> 0 then 1 else 0 end
    where session = cSessao
      and Columnname = 'am_ipi';

   -- Atribuo o calculo do valor do IPI
   update [(ss042)]
      set number_ = aICMS_IPI[06]
    where session = cSessao
      and Columnname = 'am_vl_ipi';

   -- Atribuo o novo valor da base do PIS/COFINS
   update [(ss042)]
      set number_ = aICMS_IPI[07], enabled = Case When exists (select 1 from [(sf4)] where f4_tes = rTES.f4_tes and f4_infpisfins = 1) then 1 else 0 end
    where session = cSessao
      and Columnname = 'sam_bs_pisfin';

   -- Atribuo a alíquota do PIS
   update [(ss042)]
      set number_ = sys_maxval(aICMS_IPI[08], 0)
    where session = cSessao
      and Columnname = 'sam_pis';

   -- Atribuo a alíquota do COFINS
   update [(ss042)]
      set number_ = sys_maxval(aICMS_IPI[10], 0)
    where session = cSessao
      and Columnname = 'sam_cofins';

   -- Atualiza total do item e habilitando/desabilitando o campo
   update [(ss042)]
      set enabled = rSAM.sam_informa, number_ = case when rSAM.sam_informa < 1 then rSAM.am_total else number_ end
    where session = cSessao
      and Columnname = 'am_total';

   -- Substituição Tributária - Substituto
   -- Se o regime da nota for normal   somente habilita para situação tributária do ICMS 60
   -- Se o regime for simples nacional somente habilita se a tributação do Simples Nacional for 500 ou 900
   perform sys_042enabled_wr####???('SAM', 'sam_vbcstret', case when rSAL.iLucro  = 3 and rTES.sbx_st = '60' then 1 else
                                                           case when rSAL.iLucro <> 3 and rTES.a1c_codigo in (500,900) then 1 else 0 end end);
   perform sys_042enabled_wr####???('SAM', 'sam_vicmsstret', case when rSAL.iLucro  = 3 and rTES.sbx_st = '60' then 1 else
                                                             case when rSAL.iLucro <> 3 and rTES.a1c_codigo in (500,900) then 1 else 0 end end);
   perform sys_042enabled_wr####???('SAM', 'a4i_tipo', ia4i_tipo);

   out_res:= 1;
end;
$$ language plpgsql;