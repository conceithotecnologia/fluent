/**
   Gera memória de movimentação de estoque   

	@author    Ricardo Gonçalves
	@date      18/12/2018
	@trigger   

   @param in_mov dados da memória que deverá ser persistida

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
*/
Create or Replace Function mc_setmov####???(
   in_mov mov) 
Returns integer As 
$$
Declare  
   irecno   [(e20)].recno%type;
   shash    [(e20)].e20_hash%type;
Begin
   
   -- Checa e inicializa o movimento
   in_mov := ck_00015####???(in_mov);   
   shash := mc_hashmov(in_mov);

   select recno
     into irecno
     from [(e20)]
    where e20_hash = shash;

   if not Found then 
      irecno := nextval('[(e20)]_recno_seq'::regclass);

      insert into [(e20)] (
         sfj_pessoa,    b1_codpro,       a4i_tipo,     e20_data,     e20_evento,    e20_operac,    e20_descri,    z2_coduni,      e20_qtd, 
         e20_custo,     e20_valor,       sd3_lote,     b3_endereco,  a44_numser,    codtable,      e20_recno,     e20_mfilial,    e20_mlote, 
         e20_mender,    e20_mser,        f8_cfop,      sd1_docto,    recno,         e20_hash,      e20_individual)
      values(
         in_mov.pessoa, in_mov.material, in_mov.ficha, in_mov.data,  in_mov.evento, in_mov.operac, in_mov.descri, in_mov.unidade, in_mov.qtd, 
         in_mov.custo,  in_mov.valor,    in_mov.lote,  in_mov.ender, in_mov.numser, in_mov.tabela, in_mov.recno,  in_mov.mfilial, in_mov.mlote,
         in_mov.mender, in_mov.mser,     in_mov.cfop,  in_mov.op,    irecno,        shash,         in_mov.individual);
   end if;

   return irecno;
end;
$$ language plpgsql;
