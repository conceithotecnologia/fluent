/**
   Altera o comportamento das Constraints

	@author    Gabriel Montes
	@date      22/01/2016 15:49:00
	@trigger

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
   
   1 - DEFERRED :
      A constraint é validada no final da transação;

   2 - IMMEDIATE :
       A constraint é validada a cada comando (UPDATE/INSERT/DELETE);
*/
CREATE OR REPLACE FUNCTION sys_setconstraints####???(
   in in_Codtable varchar, 
   in in_Constraint varchar, 
   in in_Modo integer, 
   out outres varchar )
AS $$
Declare
   cExecuta    varchar;
   imodo       [(ss009)].modo%type;
   vConstraint varchar(100);
BEGIN  
   if in_Modo not in (1,2) then
      raise '[[Modo escolhido inválido.]]';
   end if;   

   if not exists (
      select 1
        from [(ss032)]
       where codtable  = upper(in_Codtable)
         and constname = upper(in_Constraint))
   then
      raise '[[Contraint "%" não pertence a tabela "%".]]', in_Constraint, in_Codtable;
   end if;
   
   -- 0 - Padrão, 1 - Compartilhado, 2 - Exclusivo
   select modo
     into imodo
     from ss009
    where codtable = upper(in_Codtable);
   
   vConstraint := 'mcerr_';

   if imodo = 0 then
      vConstraint := vConstraint || lower(in_Constraint);
   elsif imodo = 1 then
      vConstraint := vConstraint || lower(in_Constraint) || '_' || sys_emp####???() || '000';
   else      
      vConstraint := vConstraint || lower(in_Constraint) || '_' || sys_empfil####???();      
   end if;
   
   cExecuta := 'set constraints ' || vConstraint || sys_iif(in_Modo = 1, ' DEFERRED',' IMMEDIATE') || ';';

   outres := cExecuta;
END;
$$
  LANGUAGE 'plpgsql' VOLATILE;