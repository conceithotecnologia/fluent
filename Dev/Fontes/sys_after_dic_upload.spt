/**
   Instruções executadas após a carga do dicionário

	@author    Wagner / Ricardo
	@date      07/10/2006 16:39:47
	@function

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso

   28/12/2010 21:25:00  v1    Wagner Mobile Costa
      [-] Incluir a excessão undefined_table em todas as instruções

   11/08/2011 14:33:49  v2    Ricardo Gonçalves.
      [+] Criação do campo código de produto na tabela de transferências de estoque SCY

   01/10/2011 11:15:00  v3    Wagner Mobile Costa.
     [-] Mover procedimento de atualização da tabela SCY para rotina sys_after_db_upd
     
   18/09/2012 16:48:15  v4    Ricardo Gonçalves.
      [-] Atribuindo valor de retorno a variável
      
   25/03/2012 16:00:15  v5    Ricardo Gonçalves.
      [+] Verificação da numeração do item da tabela saj
*/
Create or Replace Function sys_after_dic_upload####???
( In  in_version varchar,
  In  in_executa integer,
  out out_res Integer)
As $$
Declare
   xCursor     RefCursor;
   vCodtable   name;
   vtable      varchar;   
   vCodEmp     varchar(4);
   vFilial     varchar(3);
   isai_serial integer;
   iItem       integer;
   r           record;
   vcol1       information_schema.columns.column_name%type;
   vcol2       information_schema.columns.column_name%type;
begin
   -- Código para execução em Tabelas Compartilhadas/Normais
   If in_executa = 1 then
   end if;
   
   vCodEmp := ####;
   vFilial := lpad(coalesce(???::varchar, '0'), 3, '0');
   
   begin
      vCodtable := 'a1b' || vCodEmp || vFilial;
      if not exists(
         select 1 
           from mcsyscolumns 
          where codtable = vCodtable
            and columnname = 'a1b_data')
      then
         alter table [(a1b)] add a1b_data date;
         update [(a1b)] set a1b_data = a1b_emissao;
         alter table [(a1b)] alter a1b_data set not null;
      end if;
   exception
      when undefined_table then
      when undefined_column then
   end;
   
   
   begin
      vCodtable := 'sdl' || vCodEmp || vFilial;
      if not exists(
         select 1 
           from mcsyscolumns 
          where codtable = vCodtable
            and columnname = 'sdl_data')
      then
         alter table [(sdl)] add sdl_data date;
         update [(sdl)] set sdl_data = sdl_emissao;
         alter table [(sdl)] alter sdl_data set not null;
      end if;
   exception
      when undefined_table then
      when undefined_column then
   end;
   
   begin
      vCodtable :=  'scf' || vCodEmp || vFilial;
      if not exists(
         select 1 
           from mcsyscolumns 
          where codtable = vCodtable
            and columnname = 'scf_data')
      then
         alter table [(scf)] add scf_data date;
         update [(scf)] set scf_data = scf_emissao;
         alter table [(scf)] alter scf_data set not null;
      end if;
   exception
      when undefined_table then
      when undefined_column then
   end;

   -- Exclusão de colunas
   begin
      ALTER TABLE [(fpc)] DROP COLUMN fpc_bsicm_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(fpc)] DROP COLUMN fpc_alicm_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(fpc)] DROP COLUMN fpc_vlicm_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(fpc)] DROP COLUMN fpc_bsipi_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(fpc)] DROP COLUMN fpc_alipi_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(fpc)] DROP COLUMN fpc_vlipi_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(fps)] DROP COLUMN fps_bsicm_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(fps)] DROP COLUMN fps_alicm_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(fps)] DROP COLUMN fps_vlicm_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(fps)] DROP COLUMN fps_bsipi_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(fps)] DROP COLUMN fps_alipi_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(fps)] DROP COLUMN fps_vlipi_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sa5)] DROP COLUMN sa5_bsicm_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sa5)] DROP COLUMN sa5_alicm_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sa5)] DROP COLUMN sa5_vlicm_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sa5)] DROP COLUMN sa5_bsipi_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sa5)] DROP COLUMN sa5_alipi_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sa5)] DROP COLUMN sa5_vlipi_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(saf)] DROP COLUMN saf_bsicm_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(saf)] DROP COLUMN saf_alicm_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(saf)] DROP COLUMN saf_vlicm_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(saf)] DROP COLUMN saf_bsipi_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(saf)] DROP COLUMN saf_alipi_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(saf)] DROP COLUMN saf_vlipi_des;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sai)] DROP COLUMN sai_bsicm_des CASCADE;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sai)] DROP COLUMN sai_alicm_des CASCADE;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sai)] DROP COLUMN sai_vlicm_des CASCADE;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sai)] DROP COLUMN sai_bsipi_des CASCADE;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sai)] DROP COLUMN sai_alipi_des CASCADE;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sai)] DROP COLUMN sai_vlipi_des CASCADE;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sal)] DROP COLUMN al_frete_bsicms CASCADE;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sal)] DROP COLUMN al_frete_icms CASCADE;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sal)] DROP COLUMN al_frete_bsipi CASCADE;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(sal)] DROP COLUMN al_frete_ipi CASCADE;
   exception
      when undefined_table then
      when undefined_column then
   end;

   begin
      ALTER TABLE [(ctb)] DROP COLUMN a1_codcli;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(ctc)] DROP COLUMN a1_codcli;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(ctd)] DROP COLUMN a1_codcli;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(cte)] DROP COLUMN a1_codcli;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(ctf)] DROP COLUMN a1_codcli;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(ctg)] DROP COLUMN a1_codcli;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(cth)] DROP COLUMN a1_codcli;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(cti)] DROP COLUMN a1_codcli;
   exception
      when undefined_table then
      when undefined_column then
   end;
   begin
      ALTER TABLE [(ctj)] DROP COLUMN a1_codcli;
   exception
      when undefined_table then
      when undefined_column then
   end;

   begin
      delete from [(ss101)] where codtable = 'SCW';
   exception
      when undefined_table then
      when undefined_column then
   end;
   
   begin
      drop table [(vsaq_fa3)] CASCADE;
   exception
      when undefined_table then
      when undefined_column then
      when wrong_object_type then
   end;

   vcodtable := 'saj' || vCodEmp || vFilial;
   begin
      if exists( select 1 from mcsystables where tablename = vcodtable) then

         begin
           if not exists(select 1
                           from mcsyscolumns
                          where codtable = vcodtable
                            and columnname = 'saj_item') then
              alter table [(saj)] add saj_item integer;
           end if;
         exception
           when undefined_table then
           when undefined_column then
         end;

         -- Preenchimento do número do item da nota fiscal de saída do FULL
         isai_serial := -1;

         for r in (
            select recno, sai_serial
              from [(saj)]
             where saj_item is null
             order by sai_serial)
         loop
            if isai_serial <> r.sai_serial then
               isai_serial := r.sai_serial;
               iItem := 1;
            end if;

            update [(saj)]
               set saj_item = iItem
             where recno = r.recno;

            iItem := iItem + 1;
         end loop;
      end if;
  exception
     when undefined_table then
  end;
	-- ================================================================================================================
    -- Alteração dos campos de unidade de medida para 6 caracteres 
    -- Alteração dos campos de valor unitário da nota para numeric(18,10)
    -- ================================================================================================================

	for r in (
		select ss012.codtable, columnname, size, precision, view
		 from [(ss012)] ss012
       join [(ss009)] ss009 on ss012.codtable = ss009.codtable
		where domain_ = 'UNITARIO'
        and view = 0)
		loop
		
		vtable := lower(r.codtable) || vCodEmp || vfilial;
		vcol1 := lower(r.columnname);
		if exists (
		   select 1
             from information_schema.columns
			where table_name = vtable
			  and column_name = vcol1
           and (numeric_precision <> r.size
			        or numeric_scale <> r.precision))
		then
		   execute 'alter table ' || vtable || ' alter column ' || lower(r.columnname) || ' type numeric(' || r.size || ',' || r.precision || ')';
		end if;
	end loop;
	
	for r in (
		select ss012.codtable, columnname, size, precision, view
		 from [(ss012)] ss012
       join [(ss009)] ss009 on ss012.codtable = ss009.codtable
		where domain_ = 'UNIDADE'
        and view = 0)
		loop
		
		vtable := lower(r.codtable) || vCodEmp || vfilial;
		vcol1 :=	lower(r.columnname);
		if exists (
		   select 1
             from information_schema.columns
			where table_name = vtable
			  and column_name = vcol1
			  and character_maximum_length <> r.size)
		then
		   execute 'alter table ' || vtable || ' alter column ' || lower(r.columnname) || ' type varchar(' || r.size || ')';
		end if;
	end loop;

   
	   
   out_res := 1;
End;
$$ language 'plpgsql';