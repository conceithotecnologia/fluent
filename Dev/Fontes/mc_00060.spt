/*============================================================================
  Empresa..: MultCont Informática
  Descrição: Gera lançamento no arquivo SB0 (Arquivo ponte para atualização 
             de estoque) e saldo por colaborador
  Autor....: Ricardo Gonçalves
  Data.....: 31/05/2004 11:36:51

  Parametro       Descrição
  ---------------|------------------------------------------------------------
  out_res        | 0 - Falha / 1 - Sucesso
  ============================================================================*/
Create or Replace Function mc_00060####???() Returns trigger As $$
Declare
   icj_docto      [(saz)].cj_docto%type;
   iaz_status     [(saz)].az_status%type;

   vb1_codpro     [(sb1)].b1_codpro%type;
   ib1_tipo       [(sb1)].b1_tipo%type;

   iEncerrada     integer;
   iSigned        integer;

   irastro        [(sbf)].sbf_rastro%type;
   iLocaliz       [(sbf)].sbf_localiz%type;

   irecno         integer;
   bErro          boolean;

Begin
   if tg_op = 'DELETE' Then
      icj_docto  := old.cj_docto;
      iaz_status := old.az_status;
      vb1_codpro := old.b1_codpro;
   Else
      icj_docto  := new.cj_docto;
      vb1_codpro := new.b1_codpro;
      iaz_status := new.az_status;
   end if;

   -- Recupera informação para descobrir se o produto tem algum tratamento especial
   ib1_tipo := mc_00107####???(vb1_codpro);

   -- Executa teste para averiguar a validade da edição
   if tg_op = 'UPDATE' then
      if old.signature = 2 then
         perform sys_msg####???(2, 'Este item não pode sofrer alterações pois está encerrado' );
         return null;
      end if;

      if new.signature = 2 then
         new.az_status := 2;
      end if;
   end if;

   if tg_op <> 'UPDATE' then
      -- Checa se há produtos controlados já assinados na requisição
      select count(a.recno)
        Into iSigned
        from [(saz)] a
             Join [(sb1)] b
               on b.b1_codpro = a.b1_codpro
              and b.b1_tipo = 1
       where a.cj_docto = icj_docto
         and a.signature = 2;

      if iSigned <> 0 then
         perform sys_msg####???(2, 'Não é possível concluir operação pois existem '||iSigned||' itens assinados. Por favor, crie outra resquisição.');
         return null;
      end if;
   end if;

   -- Verifica a validade da operação realizada
   if tg_op <> 'DELETE' then
      -- Item assinado automaticamente por não ser controlado
      if ib1_tipo = 0 then
         new.signature := 2;
         new.az_status := 2;
      end if;
   end if;

   if tg_op = 'INSERT' then
      -- Recupera informação de rastreabilidade
      Select mc_00049####???(new.b1_codpro) Into irastro;

      -- Recupera informação de localização física
      Select mc_00061####???(new.b1_codpro) Into iLocaliz;

      if irastro = 0 then
         new.sd3_lote := -1;
      end if;

      -- Recupera custo
      new.az_custo := mc_00014####???(new.b1_codpro, new.z2_coduni);

      bErro := False;

      -- Tenta obter a classificação financeira
      if new.f1_codnat is null then
         new.f1_codnat := mc_valnatureza####???( new.b1_codpro, new.f1_codnat );
      end if;

      -- Verifica se o ativo pertence ao centro de custos informado
      if new.sdo_id is not null and
         not exists(select 1
                      from [(sdo)] a
                           join [(saz)] b
                             on b.sdo_id = a.sdo_id
                            and b.cj_docto = new.cj_docto
                            and b.b1_codpro = new.b1_codpro
                     where a.sdo_id = new.sdo_id
                     limit 1) then
         raise '[[Ativo não pertence ao centro de custo informado.]]';
      end if;

      if new.f1_codnat is null then
         perform sys_msg####???(2, 'Itens classificados quanto ao destino devem conter a natureza financeira de destino.');
         bErro := True;
      end if;

      if new.az_tipo <> 0 and new.sdo_id is null then
         perform sys_msg####???(2, 'Itens classificados quanto ao destino devem ter o código do ativo preenchido.');
         bErro := True;
      end if;

      if bErro then
         Return null;
      end if;
   End If;

   -- Verifica se o item pode ser excluído
   if tg_op = 'DELETE' then
      if old.signature = 2 then
         perform sys_msg####???(2, 'Itens encerrados não podem ser removidos da requisição.');
         return null;
      end if;

      return old;
   end if;

   Return new;
End;
$$
language plpgsql;