/*==================================================================================================================================
  Rotina...: <l> sys_msg_pkey </l>
  --------------------------------------------------------------------------------------------------------------------------------
  Descriусo: <d> Retorna texto para mensagem de chave duplicada lendo os campos da chave primрria </d>
  --------------------------------------------------------------------------------------------------------------------------------
  Tipo.....: <t> Stored Procedure </t>
  --------------------------------------------------------------------------------------------------------------------------------
  Empresa..: MultCont Informрtica
  --------------------------------------------------------------------------------------------------------------------------------
  Autor....: Wagner Mobile Costa
  --------------------------------------------------------------------------------------------------------------------------------
  Data.....: 23/03/2007 21:00:00                   Alterado.:
  --------------------------------------------------------------------------------------------------------------------------------
  Parametros
   [Entrada]ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
   [Saida ]иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
==================================================================================================================================*/
Create or Replace Function sys_msg_pkey
(  in in_codtable varchar(20),
   out outres varchar(255) )
AS $$
Declare
   xCur    RefCursor;
   vName   varchar(200);
   vName_R varchar(200);
   ifields integer;
Begin
   Open xCur for
   select name
     from [(ss012)]
    where codtable = in_codtable and primarykey = 1
    order by order_;
    
   fetch xCur into vname;
   outres:= 'Jр existe est' || case when upper(sys_right(vname, 1)) = 'A' then 'a' else 'e' end || ' ';  
   ifields:= 0; 
   while FOUND loop
      -- Grava a etiqueta do ultimo campo lido
      vName_R:= vName;
      -- Conta o nЩmero de campos da chave
      ifields:= ifields + 1;
       
      fetch xCur into vname;
      
      -- Verifica se existe registro a serem lidos para definir a etique
      If FOUND then
         If iFields > 1 then
            outres:= outres || ',';
         end if;
         outres:= outres || vName_R;
      else
         If iFields > 1 then
            outres:= outres || ' e ';
         end if;
         outres:= outres || vName_R;
      end if;    
   end loop;
   outres:= outres || '.';

   close xCur;
End;
$$ LANGUAGE plpgsql;