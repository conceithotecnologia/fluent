/*==============================================================================
| Empresa..: MultCont Informática                                              |
| Autor....: Fabio Carvalho                                                    |
| Data.....: 10/03/2008                                                        |
| Tipo.....: Stored Procedure                                                  |
| Descrição: Preparação para Impressão da Nota Fiscal                          |
==============================================================================*/
Create or Replace Function mc_notafiscal####???
( Out out_res    Integer )
As $$
Declare
-- {Variáveis para cursores}
   xMestre           RefCursor;
   xDetalhe          RefCursor;
-- Variaveis de uso interno
   cTexto           Varchar(200);
   iPage            Integer;
   cSessao          Varchar(35);
   iRow             Integer;
   nQuantos         Integer;
   cExtenso         Varchar(255);

   isai_Nf          [(sai)].sai_nf%type;              -- Numero da NF
   isai_Tipo        [(sai)].sai_tipo%type;            -- Tipo NF
   ia1_codcli       [(sa1)].a1_codcli%type;           -- codigo do cliente
   sa1_razao        [(sa1)].a1_razao%type;
   sa1_cpf          [(sa1)].a1_cpf%type;
   sa1_cnpj         [(sa1)].a1_cnpj%type;
   sse2_ender       [(se2)].se2_ender%type;           -- Endereco
   sse2_num         [(se2)].se2_num%type;             -- Numero
   sse2_compl       [(se2)].se2_compl%type;           -- Complemento
   sse2_bairro      [(se2)].se2_bairro%type;          -- Bairro
   sse2_cidade      [(se2)].se2_cidade%type;          -- Cidade
   sse2_uf          [(se2)].se2_uf%type;              -- Estado
   sse2_cep         [(se2)].se2_cep%type;             -- Cep
   sse2_fone        [(se2)].se2_fone%type;            -- telefone
   sa1_ie           [(sa1)].a1_ie%type;
   ia7_codvend      [(sai)].a7_codvend%type;          -- codigo vendedor
   nai_bsicm_pro    [(sai)].sai_bsicm_pro%type;       -- base do icms produtos
   nai_vlicm_pro    [(sai)].sai_vlicm_pro%type;       -- base do icms despesas
   nai_totprod      [(sai)].sai_total_pro%type;       -- total produto
   nai_frete        [(sai)].sai_frete%type;           -- total frete
   nai_seguro       [(sai)].sai_seguro%type;          -- total seguro
   nai_despesas     [(sai)].sai_acessorias%type;      -- total despesas
   nai_vlipi_pro    [(sai)].sai_vlipi_pro%type;       -- total ipi produtos
   nai_totnf        [(sai)].sai_total_ger%type;       -- total nf
   iab_codtrans     [(sai)].ab_codtrans%type;         -- codigo transportadora
   iai_tpfrete      [(sai)].sai_tpfrete%type;         -- tipo frete
   sai_placa        [(sai)].sai_placa%type;           -- Placa
   sai_placauf      [(sai)].sai_placauf%type;         -- uf placa
   sab_nome         [(sab)].ab_nome%type;             -- Nome Transportadora
   sab_ender        [(sab)].ab_ender%type;            -- endereco
   sab_num          [(sab)].ab_num%type;              -- numero
   sab_compl        [(sab)].ab_compl%type;            -- complemento
   sab_bairro       [(sab)].ab_bairro%type;           -- bairro
   sab_cidade       [(sab)].ab_cidade%type;           -- cidade
   sab_estado       [(sab)].ab_estado%type;           -- estado
   sab_cnpj         [(sab)].ab_cnpj%type;             -- Nº CNPJ Transportador
   sab_cpf          [(sab)].ab_cpf%type;              -- Nº CPF Transportador
   sab_ie           [(sab)].ab_ie%type;               -- Inscricao Estadual
   nai_qtd          [(sai)].sai_quanto%type;          -- quantidade
   sai_espec        [(sai)].sai_especie%type;         -- especie
   sai_marca        [(sai)].sai_marca%type;           -- marca
   sai_numero       [(sai)].sai_numero%type;          -- numero
   nai_pesobruto    [(sai)].sai_pesobruto%type;       -- peso bruto
   nai_pesoliq      [(sai)].sai_pesoliq%type;         -- peso liquido
   vse2_ender       [(se2)].se2_ender%type;           -- Endereco
   vse2_num         [(se2)].se2_num%type;             -- Numero
   vse2_compl       [(se2)].se2_compl%type;           -- Complemento
   vse2_bairro      [(se2)].se2_bairro%type;          -- Bairro
   vse2_cidade      [(se2)].se2_cidade%type;          -- Cidade
   vse2_uf          [(se2)].se2_uf%type;              -- Estado
   vse2_cep         [(se2)].se2_cep%type;             -- Cep
   dai_dtemissao    [(sai)].sai_dtemissao%type;       -- data de emissao
   dai_dtsaida      [(sai)].sai_dtsaida%type;         -- data de saida
   sb1_codpro       [(saj)].b1_codpro%type;
   sb1_nome         [(sb1)].b1_nome%type;
   sz2_coduni       [(saj)].z2_coduni%type;
   naj_qtd          [(saj)].saj_quantos%type;
   naj_vlunit       [(saj)].saj_unitario%type;
   naj_vltotal      [(saj)].saj_total%type;
   nsaj_aliq_icms   [(saj)].saj_aliq_icm%type;
   nsaj_aliq_ipi    [(saj)].saj_aliq_ipi%type;
   naj_ipi          [(saj)].saj_vlr_icm%type;
   ssaf_pedcli      [(sai)].saf_pedcli%type;
   wse2_ender       [(se2)].se2_ender%type;      -- Endereco
   wse2_num         [(se2)].se2_num%type;        -- Numero
   wse2_compl       [(se2)].se2_compl%type;      -- Complemento
   wse2_bairro      [(se2)].se2_bairro%type;     -- Bairro
   wse2_cidade      [(se2)].se2_cidade%type;     -- Cidade
   wse2_uf          [(se2)].se2_uf%type;         -- Estado
   wse2_cep         [(se2)].se2_cep%type;        -- Cep
   sz8_ln1          [(sz8)].z8_ln1%type;         -- Linha-1
   sz8_ln2          [(sz8)].z8_ln2%type;         -- Linha-2
   sz8_ln3          [(sz8)].z8_ln3%type;         -- Linha-3
   sfa_descri       [(sfa)].fa_descri%type;      -- descrição Cond Pgto
begin
   out_res := 0;
   iPage   := 1;
   cSessao := sys_session();

   -- Limpa os dados da Sessão antes de montar uma nova impressão
   Delete From [(ss053)]
    Where session = cSessao;

   -- Verifica se usuario marcou algum item errado
   Select count(session)
     into nQuantos
     from [(ss029)] ss029
          Join [(sai)]   sai on sai.recno = ss029.recfile
    Where ss029.session = cSessao;

    if nQuantos = 0 then
       raise '[[Não foi selecionada nenhuma nota fiscal para impressão !]]';
    end if;

    insert into [(ss053)] (session, page,  row, col, cmd, text_)
                   values (cSessao, iPage, 001, 001, 'condensed', 'on');

    -- Abro Cursor para montagem das Notas Fiscais
    Open xMestre For
    Select sai.sai_nf,                    sai.sai_tipo,                sai.a1_codcli,
           sa1.a1_razao,                  sa1.a1_cpf,                  sa1.a1_cnpj,
           coalesce(se2.se2_ender,''),    coalesce(se2.se2_num,''),    coalesce(se2.se2_compl,''),
           coalesce(se2.se2_bairro,''),   coalesce(se2.se2_cidade,''), coalesce(se2.se2_fone,''),
           coalesce(se2.se2_uf,''),       coalesce(se2.se2_cep,''),    coalesce(sa1.a1_ie,''),
           coalesce(sa1.a7_codvend,0),    sai.sai_bsicm_pro,           sai.sai_vlicm_pro,
           sai.sai_total_pro,             sai.sai_frete,               sai.sai_seguro,
           sai.sai_acessorias,            sai.sai_vlipi_pro,           sai.sai_total_ger,
           sai.ab_codtrans,               sai.sai_tpfrete,             coalesce(sai.sai_placa,''),
           sai.sai_placauf ,              sab.ab_nome,                 coalesce(sab.ab_ender,''),
           coalesce(sab.ab_num,''),       coalesce(sab.ab_compl,''),   coalesce(sab.ab_bairro,''),
           coalesce(sab.ab_cidade,''),    coalesce(sab.ab_estado,''),  coalesce(sab.ab_cnpj,''),
           coalesce(sab.ab_cpf,''),       coalesce(sab.ab_ie,''),      coalesce(sai.sai_quanto,0),
           coalesce(sai.sai_especie,''),  coalesce(sai.sai_marca,''),  coalesce(sai.sai_numero,''),
           coalesce(sai.sai_pesobruto,0), coalesce(sai.sai_pesoliq,0), coalesce(aa2.se2_ender,''),
           coalesce(aa2.se2_num,''),      coalesce(aa2.se2_compl,''),  coalesce(aa2.se2_bairro,''),
           coalesce(aa2.se2_cep,''),      coalesce(aa2.se2_cidade,''), coalesce(aa2.se2_uf,''),
           sai.sai_dtemissao,             sai.sai_dtsaida,             coalesce(sai.saf_pedcli,''),
           coalesce(aa3.se2_ender,''),    coalesce(aa3.se2_num,''),    coalesce(aa3.se2_compl,''),
           coalesce(aa3.se2_bairro,''),   coalesce(aa3.se2_cep,''),    coalesce(aa3.se2_cidade,''),
           coalesce(aa3.se2_uf,''),       coalesce(sz8.z8_ln1,''),     coalesce(sz8.z8_ln2,'' ),
           coalesce(sz8.z8_ln3,''),       coalesce(sfa.fa_descri,'')
     from [(ss029)] ss029
          Join [(sai)]   sai on ss029.recfile   = sai.recno
          Join [(sa1)]   sa1 on sa1.a1_codcli   = sai.a1_codcli
          Join [(se2)]   se2 on se2.se2_ctrl    = sai.sai_faturar
     left Join [(sab)]   sab on sab.ab_codtrans = sai.ab_codtrans
          Join [(se2)]   aa2 on aa2.se2_ctrl    = sai.sai_entregar
          Join [(se2)]   aa3 on aa3.se2_ctrl    = sai.sai_cobranca
     left Join [(sfa)]   sfa on sfa.fa_codcond  = sai.fa_codcond
     left Join [(sz8)]   sz8 on sz8.z8_codtxt   = sai.z8_codtxt
    Where ss029.session = cSessao;

    Fetch xMestre
    Into isai_nf,       isai_tipo,     ia1_codcli,    sa1_razao,     sa1_cpf,     sa1_cnpj,    sse2_ender,
         sse2_num,      sse2_compl,    sse2_bairro,   sse2_cidade,   sse2_fone,   sse2_uf,     sse2_cep,
         sa1_ie,        ia7_codvend,   nai_bsicm_pro, nai_vlicm_pro, nai_totprod, nai_frete,   nai_seguro,
         nai_despesas,  nai_vlipi_pro, nai_totnf,     iab_codtrans,  iai_tpfrete, sai_placa,   sai_placauf,
         sab_nome,      sab_ender,     sab_num,       sab_compl,     sab_bairro,  sab_cidade,  sab_estado,
         sab_cnpj,      sab_cpf,       sab_ie,        nai_qtd,       sai_espec,   sai_marca,   sai_numero,
         nai_pesobruto, nai_pesoliq,   vse2_ender,    vse2_num,      vse2_compl,  vse2_bairro, vse2_cep,
         vse2_cidade,   vse2_uf,       dai_dtemissao, dai_dtsaida,   ssaf_pedcli, wse2_ender,  wse2_num,
         wse2_compl,    wse2_bairro,   wse2_cep,      wse2_cidade,   wse2_uf,     sz8_ln1,     sz8_ln2,
         sz8_ln3,       sfa_descri;

   While Found Loop
      -- Tipo de NF
      if isai_Tipo = 1 then   -- Entrada
         insert into [(ss053)] (session, page,  row, col, text_)
                        values (cSessao, iPage, 001, 071, 'X');
      else
         insert into [(ss053)] (session, page,  row, col, text_)
                        values (cSessao, iPage, 001, 081, 'X');
      end if;

      -- Codigo do Cliente
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 008, 010, ia1_codcli);
      -- Nome do Cliente
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 009, 000, sa1_razao);
      -- CNPJ / CPF
      if sa1_cnpj is null then
         insert into [(ss053)] (session, page,  row, col, text_)
                        values (cSessao, iPage, 009, 085, maskcpf(sa1_cpf));
      else
         insert into [(ss053)] (session, page,  row, col, text_)
                        values (cSessao, iPage, 009, 085, maskcnpj(sa1_cnpj));
      end if;

      -- data de emissao
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 009, 118, maskdata(dai_dtemissao));
      -- Endereço
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 011, 000, sse2_ender || ',' || sse2_num || ' - ' || sse2_compl);
      -- data de saida
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 011, 023, maskdata(dai_dtsaida));
      -- Bairro
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 013, 053, sse2_bairro);
      -- Cep
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 013, 095, maskcep(sse2_cep));
      -- Cidade
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 015, 000, sse2_cidade);
      -- Telefone
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 015, 051, sse2_fone);
      -- Estado
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 015, 071, sse2_uf);
      -- Inscrição Estadual
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 015, 083, sa1_ie);
      -- Codigo Vendedor
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 015, 120, ia7_codvend);
      -- Data Emissao Fatura
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 018, 000, maskdata(dai_dtemissao));
      -- Numero da NF
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 018, 025, sys_strzero(isai_nf,6));
      -- Valor da fatura
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 018, 050, maskmoeda(nai_totnf));
      -- Numero do Seu Pedido
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 018, 120, ssaf_pedcli);
      -- Condicao de Pagamento
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 020, 000, sfa_descri);
      -- Endereco de Cobrança
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 022, 000, wse2_ender  || ','   || wse2_num    || ' - ' ||
                                                       wse2_compl  || ' - ' || wse2_bairro || ' - ' ||
                                                       wse2_cidade || '-'   || wse2_uf     || ' - ' ||
                                                       maskcep(wse2_cep));

      --Valor Por Extenso
      cExtenso := mc_extenso(nai_totnf);
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 024, 000, sys_left(cExtenso, 130));
      insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 025, 000, substr(cExtenso,131,130));

      -- Abro Cursor para montagem das Notas Fiscais
      Open   xDetalhe For
      select saj.b1_codpro,                sb1.b1_nome,                  saj.z2_coduni,
             coalesce(saj.saj_quantos,0),  coalesce(saj.saj_unitario,0), coalesce(saj.saj_total,0),
             coalesce(saj.saj_aliq_icm,0), coalesce(saj.saj_aliq_ipi,0), coalesce(saj.saj_vlr_ipi,0)
        from [(saj)] saj
        Join [(sb1)] sb1 on sb1.b1_codpro = saj.b1_codpro
       Where saj.sai_nf = isai_nf;

      Fetch xDetalhe
       Into sb1_codpro,    sb1_nome, sz2_coduni, naj_qtd, naj_vlunit, naj_vltotal, nsaj_aliq_icms,
            nsaj_aliq_ipi, naj_ipi;

      iRow := 29;

      While Found Loop
         -- Soma 1 no contador de linhas
         iRow := iRow + 1;

         insert into [(ss053)] (session, page,  row,  col, text_)
                        values (cSessao, iPage, iRow, 000, sb1_codpro);
         insert into [(ss053)] (session, page,  row,  col, text_)
                        values (cSessao, iPage, iRow, 021, sb1_nome);
         insert into [(ss053)] (session, page,  row,  col, text_)
                        values (cSessao, iPage, iRow, 069, sz2_coduni);
         insert into [(ss053)] (session, page,  row,  col, text_)
                        values (cSessao, iPage, iRow, 075, naj_qtd);
         insert into [(ss053)] (session, page,  row,  col, text_)
                        values (cSessao, iPage, iRow, 091, naj_vlunit);
         insert into [(ss053)] (session, page,  row,  col, text_)
                        values (cSessao, iPage, iRow, 100, maskmoeda(naj_vltotal));
         insert into [(ss053)] (session, page,  row,  col, text_)
                        values (cSessao, iPage, iRow, 116, maskimposto(nsaj_aliq_icms, False));
         insert into [(ss053)] (session, page,  row,  col, text_)
                        values (cSessao, iPage, iRow, 121, maskimposto(nsaj_aliq_ipi, False));
         insert into [(ss053)] (session, page,  row,  col, text_)
                        values (cSessao, iPage, iRow, 123, maskmoeda(naj_ipi));
         Fetch xDetalhe
         Into sb1_codpro,    sb1_nome, sz2_coduni, naj_qtd, naj_vlunit, naj_vltotal, nsaj_aliq_icms,
              nsaj_aliq_ipi, naj_ipi;
      End Loop;

--    Imprime Observacoes
      if sz8_ln1 <> '' then
        iRow := iRow + 1;
         insert into [(ss053)] (session, page,  row,  col, text_)
                        values (cSessao, iPage, iRow, 000, sz8_ln1);
      end if;
      if sz8_ln2 <> '' then
        iRow := iRow + 1;
         insert into [(ss053)] (session, page,  row,  col, text_)
                        values (cSessao, iPage, iRow, 000, sz8_ln2);
      end if;
      if sz8_ln3 <> '' then
        iRow := iRow + 1;
         insert into [(ss053)] (session, page,  row,  col, text_)
                        values (cSessao, iPage, iRow, 000, sz8_ln3);
      end if;
      -- Base do Icms
      insert into [(ss053)] (session, page, row, col, text_)
                     values (cSessao, iPage,047, 005, maskmoeda(nai_bsicm_pro + nai_bsicm_des));
      -- Valor do Icms
      insert into [(ss053)] (session, page, row, col, text_)
                     values (cSessao, iPage,047, 035, maskmoeda(nai_vlicm_pro + nai_vlicm_des));
      --  Total de Produtos
      insert into [(ss053)] (session, page, row, col, text_)
                     values (cSessao, iPage,047, 125, maskmoeda(nai_totprod));
      -- valor do Frete
      insert into [(ss053)] (session, page, row, col, text_)
                     values (cSessao, iPage,049, 005, maskmoeda(nai_frete));
      --  Valor do Seguro
      insert into [(ss053)] (session, page, row, col, text_)
                     values (cSessao, iPage,049, 035, maskmoeda(nai_seguro));
      -- Base das Despesas Acessorias
      insert into [(ss053)] (session, page, row, col, text_)
                     values (cSessao, iPage,049, 065, maskmoeda(nai_despesas));
      -- Valor do Ipi
      insert into [(ss053)] (session, page, row, col, text_)
                     values (cSessao, iPage,049, 095, maskmoeda(nai_vlipi_pro + nai_vlipi_des));
      --  Total da Nota Fiscal
      insert into [(ss053)] (session, page, row, col, text_)
                     values (cSessao, iPage,049, 125, maskmoeda(nai_totnf));

      -- Testa dados da transportadora (se lançados)
      if coalesce(iab_codtrans,0) > 0 then
         -- Nome Transportadora
         insert into [(ss053)] (session, page,  row, col, text_)
                        values (cSessao, iPage, 052, 000, sab_nome);
         -- Tipo de Frete
         insert into [(ss053)] (session, page,  row, col, text_)
                        values (cSessao, iPage, 052, 076, iai_tpfrete);
         -- Placa do Veiculo
         insert into [(ss053)] (session, page,  row, col, text_)
                        values (cSessao, iPage, 052, 085, maskplaca(sai_placa));
         -- UF da Placa
         insert into [(ss053)] (session, page,  row, col, text_)
                        values (cSessao, iPage, 052, 100, sai_placauf);
         -- Cnpj / CPF
         if sab_cpf <> '' then
            insert into [(ss053)] (session, page,  row,  col, text_)
                           values (cSessao, iPage, 052, 107, maskcpf(sab_cpf));
         else
            insert into [(ss053)] (session, page,  row, col, text_)
                           values (cSessao, iPage, 052, 107, maskcnpj(sab_cnpj));
         end if;

         -- Endereco Transportadora
         insert into [(ss053)] (session, page, row,  col, text_)
                        values (cSessao, iPage,054,  000, sab_ender || ', ' || sab_num || ' - ' ||
                                                          sab_compl || '. ' || sab_bairro);
         -- Municipio
         insert into [(ss053)] (session, page, row,  col, text_)
                        values (cSessao, iPage,054,  063, sab_cidade);
         -- Estado
         insert into [(ss053)] (session, page, row,  col, text_)
                        values (cSessao, iPage,054,  100, sab_estado);
         -- Inscricao estadual
         insert into [(ss053)] (session, page, row,  col, text_)
                        values (cSessao, iPage,054,  107, sab_ie);
      end if;

      -- Quantidade
      Insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 056, 000, lpad(sys_to_char(nai_qtd, '999,999,999.0'),12));
      -- Especie
      Insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 056, 021, sai_espec);
      -- Marca
      Insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 056, 043, sai_marca);
      -- Numero
      Insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 056, 063, sai_numero);
      -- Peso Bruto
      Insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 056, 095, lpad(sys_to_char(nai_pesobruto, '999,990.000'),11));
      -- Peso Liquido
      Insert into [(ss053)] (session, page,  row, col, text_)
                     values (cSessao, iPage, 056, 116, lpad(sys_to_char(nai_pesoliq, '999,990.000'),11));
      --Endereco de Entrega
      insert into [(ss053)] (session, page,  row, col, text_)
                     Values (cSessao, iPage, 063, 025, vse2_ender  || ','   || vse2_num    || ' - ' ||
                                                       vse2_compl  || '. '  || vse2_bairro || ' - ' ||
                                                       vse2_cidade || ' - ' || vse2_uf     || ' - ' ||
                                                       maskcep(vse2_cep));
      -- Salto do Papel
      insert into [(ss053)] (session, page, row, col,  text_)
                     values (cSessao, iPage,066, 000, ' ');
    Fetch xMestre
    Into isai_nf,       isai_tipo,     ia1_codcli,    sa1_razao,     sa1_cpf,     sa1_cnpj,    sse2_ender,
         sse2_num,      sse2_compl,    sse2_bairro,   sse2_cidade,   sse2_fone,   sse2_uf,     sse2_cep,
         sa1_ie,        ia7_codvend,   nai_bsicm_pro, nai_vlicm_pro, nai_totprod, nai_frete,   nai_seguro,
         nai_despesas,  nai_vlipi_pro, nai_totnf,     iab_codtrans,  iai_tpfrete, sai_placa,   sai_placauf,
         sab_nome,      sab_ender,     sab_num,       sab_compl,     sab_bairro,  sab_cidade,  sab_estado,
         sab_cnpj,      sab_cpf,       sab_ie,        nai_qtd,       sai_espec,   sai_marca,   sai_numero,
         nai_pesobruto, nai_pesoliq,   vse2_ender,    vse2_num,      vse2_compl,  vse2_bairro, vse2_cep,
         vse2_cidade,   vse2_uf,       dai_dtemissao, dai_dtsaida,   ssaf_pedcli, wse2_ender,  wse2_num,
         wse2_compl,    wse2_bairro,   wse2_cep,      wse2_cidade,   wse2_uf,     sz8_ln1,     sz8_ln2,
         sz8_ln3,       sfa_descri;

      iPage := iPage + 1;
   End Loop;

   out_res := 1;
end;
$$ language 'plpgsql'