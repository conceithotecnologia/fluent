/*============================================================================
  Empresa..: MultCont Informática
  Descrição: Procedure para validar Tabela tga Before
  Autor....: Fabio Carvalho
  Data.....: 23/04/2010
  ---------------|------------------------------------------------------------
  out_res        | 0 - Falha / 1 - Sucesso
  ============================================================================*/
Create or Replace Function mc_01063####???()
Returns trigger
As $$
Declare
   iForma      [(tga)].tg3_recno%type;
   ifa_codcond [(sa1)].fa_codcond%type;
   nTotal      [(tg3)].tg3_total%type;
   iTratamento [(tg9)].tg9_tratamento%type;
   iTratItem   [(tg9)].tg9_tratamento%type;
begin
   if    tg_op = 'DELETE' then
--      -- verifica se foi origem do disk
--    if tg_op = 'UPDATE' and
--       (select codtable
--          from [(tg3)]
--         where recno = old.tg3_recno) = 'TGB' then
--       raise '[[Não é possivel alterar registro com origem do Disk. Verifique!]]';
--    end if;
--
      return old;
   else
--    -- verifica se foi origem do disk
--    if tg_op = 'UPDATE' and
--       (select codtable
--          from [(tg3)]
--         where recno = new.tg3_recno) = 'TGB' then
--       raise '[[Não é possivel alterar registro com origem do Disk. Verifique!]]';
--    end if;

--    -- Recupera a Forma de Pagamento da Venda
--    select sa8.tg9_recno, sa1.fa_codcond, tg9.tg9_tratamento
--      into iForma,        ifa_codcond,    iTratamento
--      From [(sa8)] sa8
--           join [(sa1)] sa1 on sa1.a1_codcli   = sa8.a1_codcli
--           join [(tg3)] tg3 on tg3.cod_cliente = sa8.a1_codcli
--           join [(tg9)] tg9 on tg9.recno       = sa8.tg9_recno
--     Where new.tg3_recno = tg3.recno;

--    -- Recupera o Valor da Venda
--    Select coalesce(tg3_total,0)
--      into nTotal
--      From [(tg3)]
--     Where recno = new.tg3_recno;

--    if new.tga_valor > nTotal then
--       raise '[[O Valor da Parcela é superior ao valor da venda. Verifique!]]';
--    end if;

    if coalesce(new.tga_parcela,0) = 0 then
       select coalesce(max(tga_parcela),0) + 1
         into new.tga_parcela
         from [(tga)]
        Where tg3_recno = new.tg3_recno;
    end if;

--    -- executa a validacao do vencimento
--    if new.tga_vencimento is null then
--       raise '[[Favor informar a Data do Vencimento. Verifique!]]';
--    end if;

--    -- executa as validacoes das formas de pagamento
      select tg9_tratamento
        into new.tg9_tratamento
        From [(tg9)]
       Where recno = new.tg9_recno;

--    if iTratamento = 1 and iTratItem <> 1 then
--       raise '[[Cadastro de Cliente permite somente pagamento em Dinheiro. Verifique]]';
--    elsif iTratamento = 2 and iTratItem not in (1,2) then
--       raise '[[Cadastro de Cliente permite somente pagamento em Dinheiro/Cheque. Verifique!]]';
--    elsif iTratamento = 3 and iTratItem not in (1,2,3) then
--       raise '[[Cadastro de Cliente permite somente pagamento em Dinheiro/Cheque/Vale. Verifique!]]';
--    elsif iTratamento = 4 and iTratItem not in (1,4,5) then
--       raise '[[Cadastro de Cliente permite somente pagamento em Dinheiro/Boleto/Duplicata. Verifique!]]';
--    elsif iTratamento = 5 and iTratItem not in (1,4,5) then
--       raise '[[Cadastro de Cliente permite somente pagamento em Dinheiro/Boleto/Duplicata. Verifique!]]';
--    elsif iTratamento = 6 and iTratItem not in (1,6) then
--       raise '[[Cadastro de Cliente permite somente pagamento em Dinheiro/Cartão de Débito. Verifique!]]';
--    elsif iTratamento = 7 and iTratItem not in (1,6,7) then
--       raise '[[Cadastro de Cliente permite somente pagamento em Dinheiro/Cartão de Débito/Crédito. Verifique!]]';
--    elsif iTratamento = 8 and iTratItem not in (1,2,6,8) then
--       raise '[[Cadastro de Cliente permite somente pagamento em Dinheiro/Cartão de Débito/Crédito/Convênio. Verifique!]]';
--    end if;

      return new;
   end if;
end;
$$ language 'plpgsql'
