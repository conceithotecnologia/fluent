/**
   Envio de e-mails para compradores, OC pendentes

	@author    Gabriel Montes
	@date      08/08/2013
	@function 

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
*/
Create or Replace Function mc_00622####???
   (
   in_recno       integer
   )
Returns integer
As $$
Declare
   xCur        refcursor;
   xCot        refcursor;
   
   vBranch     Varchar(004);           -- Anexos
   vDir        Varchar(255);           -- Diretório
   rmail       record;                 -- Armazena os endereçoes de e-mail
   rfil        record;                 -- Informações da filial   
   rcot        record;                 -- Armazena as cotações próximas do vencimento
   rforn       Varchar(255);
   rl          record;
   vFrete      Varchar(30);
   
   ifil        [(ss063)].filial%type;  -- Recebe a filial
   vsubject    [(ss108)].subject%type; -- Título do e-mail
   idmsg       integer;                -- Armazena o próximo recno da tabela de fila de mensagens   idmsg := nextval('[(ss108)]_recno_seq'::regclass);

   vfrom_      text;                   -- vfrom_ := 'MONITOR' || trim(to_char(ifil, '999'));

   mailhead    text;                   -- Cabeçalho do e-mail
   mailfooter  text;                   -- Rodapé do e-mail
   mailbody    text;                   -- Corpo do e-mail

   bFound      boolean;
   bFound2     boolean;
   bNewRow     boolean;
   
begin

   ifil := sys_filial####???();
   vfrom_ := 'MONITOR' || trim(to_char(ifil, '999'));

   if ifil is null then
      raise '[[Não foi possível obter o código da filial para sessão ativa (%).]]',
         sys_session();
   end if;
   
   vsubject :=  'Lotes de compra aguardando Pedido de Compra: ';
   
   bNewRow := true;
   rl      := null;
      -- =================================================================================================================
   -- Cabeçalho do e-mail
   -- =================================================================================================================
   mailhead := '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"> ';
   mailhead := mailhead || '<HTML><HEAD>';
   mailhead := mailhead || '<META http-equiv=Content-Type content="text/html; charset=iso-8859-1">';
   mailhead := mailhead || '<META content="MSHTML 6.00.2900.5921" name=GENERATOR>';
   mailhead := mailhead || '<style type="text/css">';
   mailhead := mailhead || '#pagina {width: 90%; margin: 0 auto; background: #FFFFFF;}';
   mailhead := mailhead || 'h1 {font-family: arial, helvetica, serif; font-size: 14px;}';
   mailhead := mailhead || 'h2 {font-family: calibri, arial, helvetica, serif; font-size: .9em; text-align: center; margin: 2 auto; }';
   mailhead := mailhead || 'td {font-family: calibri, arial, helvetica, serif; font-size: 0.9em; padding: 5px; background: #F8F8FF;}';
   mailhead := mailhead || 'td.dados {font-weight: bold; }';
   mailhead := mailhead || 'p {text-align:justify;}';
   mailhead := mailhead || 'p.center {text-align: center; margin: 2 auto;}';
   mailhead := mailhead || 'h3 {text-align: center; margin: 0 auto; font-size: 24px; font-weight: bold; color: #FF0000;}';
   mailhead := mailhead || 'body {font-family: calibri, arial, helvetica, serif; font-size: 14px;}';
   mailhead := mailhead || '</style></head><body>';
   mailhead := mailhead || '<div id="pagina">';

   mailhead := mailhead || '<p> Prezado senhor(a), </p>';
   mailhead := mailhead || 'Novos lotes de compras foram aprovados e aguardam pedido de compra:';
   -- mailhead := mailhead || 'Os seguintes lotes de compra n&atilde;o foram aprovados e est&atilde;o se aproximando de sua data de vencimento:';
   
   mailfooter := ' ';
   
   open xcot for
   -- Recupera as informações do fornecedor e da cotação
   select shj.recno          , shj.shj_descri , shj.shj_emissao , shk.shk_emissao , vsfn.sfj_nome , 
          shk.shk_valortotal , shk.fa_codcond , sfa.fa_descri   , shk.shk_validadedt , 
          shk.shk_prazodt    , shk.shk_tpfrete
      from [(shj)]   shj
          join [(shk)]  shk
            on shj.recno = shk.shj_recno
           join [(vsfn)] vsfn
            on vsfn.sfj_pessoa = shk.ac_codforn
          join [(sfa)] sfa
            on sfa.fa_codcond = shk.fa_codcond
    where shj.recno = in_recno
      and shk_estado = 2 
         order by shj.recno;
   fetch xcot into rcot;
   bFound2 := FOUND;
   while bFound2 Loop
      
      -- Verificar data de vencimento || if now() - shk_validadedt > 0 then raise
      
      if bNewRow then
      
         mailfooter := mailfooter || '<p class="center"> <TABLE BORDER=1 CELLSPACING=2 CELLPADDING=6 width="100%" >';
         mailfooter := mailfooter || '<p><CAPTION> Lote:&nbsp;' || rcot.recno || '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Data de emiss&atilde;o:&nbsp;' || to_char(rcot.shj_emissao, 'DD/MM/YYYY HH24:MI') ||'</CAPTION></p>';
         
         if rcot.shk_tpfrete = 1 then -- 1.Emitente (CIF), 2.Destinatário (FOB)
            vFrete := 'Emitente (CIF)';
         else
            vFrete := 'Destinat&aacute;rio (FOB)';
         end if;
         
         mailfooter := mailfooter || '<p><TR>';
         mailfooter := mailfooter || '<TD WIDTH="200"> Fornecedor: <br>' || rcot.sfj_nome || '</br></TD>'
                                     '<TD> Valor Total da Cotaç&atilde;o: <br>' || rcot.shk_valortotal || '</br></TD>'
                                     '<TD WIDTH="200"> Cond. de Pagamento: <br>' || rcot.fa_codcond || ' ' ||rcot.fa_descri ||'</br></TD>'
                                     '<TD> Prazo m&eacute;dio de entrega: <br>' || to_char(rcot.shk_prazodt, 'DD/MM/YYYY HH24:MI') || '</br></TD>'
                                     '<TD> Tipo de frete: <br>' || vFrete || '</br></TD>'
                                     '<TD> <b>Vencimento da cotaç&atilde;o: <br>' || to_char(rcot.shk_validadedt, 'DD/MM/YYYY HH24:MI') || '</br></b></TD>';
         mailfooter := mailfooter || '</TR>';
         
      else
         if rcot.shk_tpfrete = 1 then -- 1.Emitente (CIF), 2.Destinatário (FOB)
            vFrete := 'Emitente (CIF)';
         else
            vFrete := 'Destinat&aacute;rio (FOB)';
         end if;
         
         mailfooter := mailfooter || '<p><TR>';
         mailfooter := mailfooter || '<TD WIDTH="200"> Fornecedor: <br>' || rcot.sfj_nome || '</br></TD>'
                                     '<TD> Valor Total da Cotaç&atilde;o: <br>' || rcot.shk_valortotal || '</br></TD>'
                                     '<TD WIDTH="200"> Cond. de Pagamento: <br>' || rcot.fa_codcond || ' ' ||rcot.fa_descri ||'</br></TD>'
                                     '<TD> Prazo m&eacute;dio de entrega: <br>' || to_char(rcot.shk_prazodt, 'DD/MM/YYYY HH24:MI') || '</br></TD>'
                                     '<TD> Tipo de frete: <br>' || vFrete || '</br></TD>'
                                     '<TD> <b>Vencimento da cotaç&atilde;o: <br>' || to_char(rcot.shk_validadedt, 'DD/MM/YYYY HH24:MI') || '</br></b></TD>';
         mailfooter := mailfooter || '</TR>';
      end if;
      rl := rcot;
      
      fetch xcot into rcot;
      bFound2 := FOUND;
      
      if rcot.recno = rl.recno then
         bNewRow := false;
      else
         bNewRow := true;
         mailfooter := mailfooter || '</TABLE></p>';
      end if;
      
   end loop;
   
   -- recupera informacoes da filial corrente
   select razao, coalesce(mask_00002(cnpj), mask_00003(cpf)) as cnpj, tel, email, home
     into rfil
     from [(ss063)]
    where filial = ifil
      and env_mail_nfe = 1;

   
   -- =================================================================================================================
   -- Rodapé do e-mail
   -- =================================================================================================================

   if rfil.tel is not null then
      mailfooter := mailfooter || '<p class="center">' || ' Telefone ' || rfil.tel;
   end if;

   if rfil.tel is not null and rfil.email is not null then
      mailfooter := mailfooter || ' ou ' ;
   end if;

   if rfil.email is not null then
      mailfooter := mailfooter || ' E-mail <a href="mailto:Contato <' || lower(rfil.email) || '">Contato.</a></p>';
   end if;

   if rfil.home is null then
      mailfooter := mailfooter || '<p class="center"><strong>' || rfil.razao || '</strong></p>';
   else
      if substring(rfil.home from 1 for 7) <> 'http://' then
         rfil.home := 'http://' || rfil.home;
      end if;

      mailfooter := mailfooter || '<p class="center"><strong><a href="' || rfil.home || '">' || rfil.razao || '</a></strong></p>';
   end if;

   mailfooter := mailfooter || '<p /><p /><p class="center">Este e-mail &eacute; enviado automaticamente e n&atilde;o deve ser respondido!</p><p /><hr />';
   mailfooter := mailfooter || '<h2>Documento gerado e enviado pelo sistema FLUENT desenvolvido por ' ||
      '<a href="http://www.conceitho.com">Conceitho Tecnologia.</a></h2>';
   mailfooter := mailfooter || '<h2>Contato (11) 2324-0346 ou <a href="mailto:Comercial<comercial@conceitho.com>">' ||
      'comercial@conceitho.com</a></h2>';
   mailfooter := mailfooter || '</div>';
   mailfooter := mailfooter || '</body></html>';
   
   -- =================================================================================================================
   -- Destinatários do e-mail
   -- =================================================================================================================
   open xCur for
      
      select distinct 1 as order_, trim(coalesce(sfj.sfj_apelido, sfj.sfj_nome)) as to_, coalesce(trim(sfj.sfj_email),trim(sa2.sa2_email)) as email_
        from [(sfj)] sfj
             join [(sa2)] sa2
               on sa2.a1_codcli = sfj.sfj_pessoa
             join [(a3s)] a3s
               on a3s.sfj_pessoa = sfj.sfj_pessoa
       where (sfj.sfj_email is not null or sa2.sa2_email is not null)
         and sa2.sa2_ativo = 1
         and sa2_mail_ped = 1;
   fetch xCur into rmail;
   
   while FOUND Loop
      -- Início do html
      mailbody := '';
      
      mailbody := mailhead || mailfooter;
   
      idmsg := nextval('[(ss108)]_recno_seq'::regclass);

      -- Cria a mensagem
      insert into [(ss108)] (from_user, contenttype, charset_, type_, subject, message, recno, codtable, src_recno)
                     values ('MONITOR1', 'text/html', 'iso-8859-1', 2, vsubject, mailbody, idmsg, 'SH8', idmsg);

      -- Inserindo contatos
      INSERT INTO [(ss109)](ss108_recno, to_,          type_, to_name)
                    VALUES (idmsg,       rmail.email_, 1,     rmail.to_);

      -- Configura a mensagem para ser transmitida
      update [(ss108)] set status = 1
       where recno = idmsg;

      --perform sys_msg####???(1, 'O demonstrativo foi enviado para ' || rmail.to_ || ' [' || rmail.email_ || '].');
      
      fetch xCur into rmail;
      bFound := FOUND;
   
   End Loop;
   Close xCur;
   
   delete from [(ss029)] ss029
   where ss029.session = sys_session();

   return 1;
End;
$$
language plpgsql;
